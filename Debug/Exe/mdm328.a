;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 25.02.2015
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega328P
;Program type            : Application
;AVR Core Clock frequency: 16,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega328p.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <sleep.h>
;#include <delay.h>
;#include <ssd1306.c>
;/*
;    Библиотека для дисплея SSD1306
;
;*/                                       ;//, tx_data0[50] =
;
;unsigned char rx_data[1],bufer[129] = {0x80, 0xAE, 0x80, 0xD5,0x80, 0x80,0x80, 0xA8,0x80, 0x3F,0x80, 0xD3,
;0x80, 0x0,0x80, 0x40,0x80, 0x8D,0x80, 0x14,0x80, 0x20,0x80, 0x00,0x80,  0xA1, 0x80, 0xC8,0x80,// длч перевернутого  0xA1 ...
;0xDA,0x80, 0x12,0x80, 0x81,0x80, 0xCF,0x80, 0xD9,0x80, 0xF1,0x80, 0xDB,0x80, 0x40,0x80, 0xA4,
;0x80, 0xA6, 0x80, 0xAF ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, ...

	.DSEG
;
;
;
;// TWI functions
;#include "glcdfont.c"
;// Standard ASCII 5x7 font
;flash unsigned char font[] = {
;    0x00, 0x00, 0x00, 0x00, 0x00,
;	0x3E, 0x5B, 0x4F, 0x5B, 0x3E,
;	0x3E, 0x6B, 0x4F, 0x6B, 0x3E,
;	0x1C, 0x3E, 0x7C, 0x3E, 0x1C,
;	0x18, 0x3C, 0x7E, 0x3C, 0x18,
;	0x1C, 0x57, 0x7D, 0x57, 0x1C,
;	0x1C, 0x5E, 0x7F, 0x5E, 0x1C,
;	0x00, 0x18, 0x3C, 0x18, 0x00,
;	0xFF, 0xE7, 0xC3, 0xE7, 0xFF,
;	0x00, 0x18, 0x24, 0x18, 0x00,
;	0xFF, 0xE7, 0xDB, 0xE7, 0xFF,
;	0x30, 0x48, 0x3A, 0x06, 0x0E,
;	0x26, 0x29, 0x79, 0x29, 0x26,
;	0x40, 0x7F, 0x05, 0x05, 0x07,
;	0x40, 0x7F, 0x05, 0x25, 0x3F,
;	0x5A, 0x3C, 0xE7, 0x3C, 0x5A,
;	0x7F, 0x3E, 0x1C, 0x1C, 0x08,
;	0x08, 0x1C, 0x1C, 0x3E, 0x7F,
;	0x14, 0x22, 0x7F, 0x22, 0x14,
;	0x5F, 0x5F, 0x00, 0x5F, 0x5F,
;	0x06, 0x09, 0x7F, 0x01, 0x7F,
;	0x00, 0x66, 0x89, 0x95, 0x6A,
;	0x60, 0x60, 0x60, 0x60, 0x60,
;	0x94, 0xA2, 0xFF, 0xA2, 0x94,
;	0x08, 0x04, 0x7E, 0x04, 0x08,
;	0x10, 0x20, 0x7E, 0x20, 0x10,
;	0x08, 0x08, 0x2A, 0x1C, 0x08,
;	0x08, 0x1C, 0x2A, 0x08, 0x08,
;	0x1E, 0x10, 0x10, 0x10, 0x10,
;	0x0C, 0x1E, 0x0C, 0x1E, 0x0C,
;	0x30, 0x38, 0x3E, 0x38, 0x30,
;	0x06, 0x0E, 0x3E, 0x0E, 0x06,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x5F, 0x00, 0x00,
;	0x00, 0x07, 0x00, 0x07, 0x00,
;	0x14, 0x7F, 0x14, 0x7F, 0x14,
;	0x24, 0x2A, 0x7F, 0x2A, 0x12,
;	0x23, 0x13, 0x08, 0x64, 0x62,
;	0x36, 0x49, 0x56, 0x20, 0x50,
;	0x00, 0x08, 0x07, 0x03, 0x00,
;	0x00, 0x1C, 0x22, 0x41, 0x00,
;	0x00, 0x41, 0x22, 0x1C, 0x00,
;	0x2A, 0x1C, 0x7F, 0x1C, 0x2A,
;	0x08, 0x08, 0x3E, 0x08, 0x08,
;	0x00, 0x80, 0x70, 0x30, 0x00,
;	0x08, 0x08, 0x08, 0x08, 0x08,
;	0x00, 0x00, 0x60, 0x60, 0x00,
;	0x20, 0x10, 0x08, 0x04, 0x02,
;	0x3E, 0x51, 0x49, 0x45, 0x3E,
;	0x00, 0x42, 0x7F, 0x40, 0x00,
;	0x72, 0x49, 0x49, 0x49, 0x46,
;	0x21, 0x41, 0x49, 0x4D, 0x33,
;	0x18, 0x14, 0x12, 0x7F, 0x10,
;	0x27, 0x45, 0x45, 0x45, 0x39,
;	0x3C, 0x4A, 0x49, 0x49, 0x31,
;	0x41, 0x21, 0x11, 0x09, 0x07,
;	0x36, 0x49, 0x49, 0x49, 0x36,
;	0x46, 0x49, 0x49, 0x29, 0x1E,
;	0x00, 0x00, 0x14, 0x00, 0x00,
;	0x00, 0x40, 0x34, 0x00, 0x00,
;	0x00, 0x08, 0x14, 0x22, 0x41,
;	0x14, 0x14, 0x14, 0x14, 0x14,
;	0x00, 0x41, 0x22, 0x14, 0x08,
;	0x02, 0x01, 0x59, 0x09, 0x06,
;	0x3E, 0x41, 0x5D, 0x59, 0x4E,
;	0x7C, 0x12, 0x11, 0x12, 0x7C,
;	0x7F, 0x49, 0x49, 0x49, 0x36,
;	0x3E, 0x41, 0x41, 0x41, 0x22,
;	0x7F, 0x41, 0x41, 0x41, 0x3E,
;	0x7F, 0x49, 0x49, 0x49, 0x41,
;	0x7F, 0x09, 0x09, 0x09, 0x01,
;	0x3E, 0x41, 0x41, 0x51, 0x73,
;	0x7F, 0x08, 0x08, 0x08, 0x7F,
;	0x00, 0x41, 0x7F, 0x41, 0x00,
;	0x20, 0x40, 0x41, 0x3F, 0x01,
;	0x7F, 0x08, 0x14, 0x22, 0x41,
;	0x7F, 0x40, 0x40, 0x40, 0x40,
;	0x7F, 0x02, 0x1C, 0x02, 0x7F,
;	0x7F, 0x04, 0x08, 0x10, 0x7F,
;	0x3E, 0x41, 0x41, 0x41, 0x3E,
;	0x7F, 0x09, 0x09, 0x09, 0x06,
;	0x3E, 0x41, 0x51, 0x21, 0x5E,
;	0x7F, 0x09, 0x19, 0x29, 0x46,
;	0x26, 0x49, 0x49, 0x49, 0x32,
;	0x03, 0x01, 0x7F, 0x01, 0x03,
;	0x3F, 0x40, 0x40, 0x40, 0x3F,
;	0x1F, 0x20, 0x40, 0x20, 0x1F,
;	0x3F, 0x40, 0x38, 0x40, 0x3F,
;	0x63, 0x14, 0x08, 0x14, 0x63,
;	0x03, 0x04, 0x78, 0x04, 0x03,
;	0x61, 0x59, 0x49, 0x4D, 0x43,
;	0x00, 0x7F, 0x41, 0x41, 0x41,
;	0x02, 0x04, 0x08, 0x10, 0x20,
;	0x00, 0x41, 0x41, 0x41, 0x7F,
;	0x04, 0x02, 0x01, 0x02, 0x04,
;	0x40, 0x40, 0x40, 0x40, 0x40,
;	0x00, 0x03, 0x07, 0x08, 0x00,
;	0x20, 0x54, 0x54, 0x78, 0x40,
;	0x7F, 0x28, 0x44, 0x44, 0x38,
;	0x38, 0x44, 0x44, 0x44, 0x28,
;	0x38, 0x44, 0x44, 0x28, 0x7F,
;	0x38, 0x54, 0x54, 0x54, 0x18,
;	0x00, 0x08, 0x7E, 0x09, 0x02,
;	0x18, 0xA4, 0xA4, 0x9C, 0x78,
;	0x7F, 0x08, 0x04, 0x04, 0x78,
;	0x00, 0x44, 0x7D, 0x40, 0x00,
;	0x20, 0x40, 0x40, 0x3D, 0x00,
;	0x7F, 0x10, 0x28, 0x44, 0x00,
;	0x00, 0x41, 0x7F, 0x40, 0x00,
;	0x7C, 0x04, 0x78, 0x04, 0x78,
;	0x7C, 0x08, 0x04, 0x04, 0x78,
;	0x38, 0x44, 0x44, 0x44, 0x38,
;	0xFC, 0x18, 0x24, 0x24, 0x18,
;	0x18, 0x24, 0x24, 0x18, 0xFC,
;	0x7C, 0x08, 0x04, 0x04, 0x08,
;	0x48, 0x54, 0x54, 0x54, 0x24,
;	0x04, 0x04, 0x3F, 0x44, 0x24,
;	0x3C, 0x40, 0x40, 0x20, 0x7C,
;	0x1C, 0x20, 0x40, 0x20, 0x1C,
;	0x3C, 0x40, 0x30, 0x40, 0x3C,
;	0x44, 0x28, 0x10, 0x28, 0x44,
;	0x4C, 0x90, 0x90, 0x90, 0x7C,
;	0x44, 0x64, 0x54, 0x4C, 0x44,
;	0x00, 0x08, 0x36, 0x41, 0x00,
;	0x00, 0x00, 0x77, 0x00, 0x00,
;	0x00, 0x41, 0x36, 0x08, 0x00,
;	0x02, 0x01, 0x02, 0x04, 0x02,
;	0x3C, 0x26, 0x23, 0x26, 0x3C,
;    0x00, 0x00, 0x00, 0x00, 0x00,
;	0x7F, 0x01, 0x01, 0x01, 0x03 ,  // Г
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	   0x7F, 0x01, 0x01, 0x01, 0x03 ,  // Г
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	    0x7F, 0x49, 0x49, 0x49, 0x49 ,  // Е
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	     0x3E, 0x49, 0x49, 0x41, 0x22 , // Є
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	     0x00, 0x43, 0x7E, 0x43, 0x00,   // Ї
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	     0x00, 0x41, 0x7F, 0x41, 0x00 , // І
;	     0x00, 0x44, 0x7d, 0x40, 0x00 , // і
;	     0x7C, 0x04, 0x04, 0x04, 0x0C ,  // г
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	     0x38, 0x54, 0x54, 0x54, 0x08 ,  // е
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	     0x38, 0x54, 0x54, 0x44, 0x28 , // є
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;	0x00, 0x00, 0x00, 0x00, 0x00,
;     0x00, 0x45, 0x7C, 0x41, 0x00 , // ї
;	 0x7E, 0x11, 0x11, 0x11, 0x7E ,  // А
;     0x7F, 0x49, 0x49, 0x49, 0x33 ,  // Б
;     0x7F, 0x49, 0x49, 0x49, 0x36 ,  // В
;     0x7F, 0x01, 0x01, 0x01, 0x03 ,  // Г
;     0xE0, 0x51, 0x4F, 0x41, 0xFF ,  // Д
;     0x7F, 0x49, 0x49, 0x49, 0x49 ,  // Е
;     0x77, 0x08, 0x7F, 0x08, 0x77 ,  // Ж
;     0x49, 0x49, 0x49, 0x49, 0x36 ,  // З
;     0x7F, 0x10, 0x08, 0x04, 0x7F ,  // И
;     0x7C, 0x21, 0x12, 0x09, 0x7C ,  // Й
;     0x7F, 0x08, 0x14, 0x22, 0x41 ,  // К
;     0x20, 0x41, 0x3F, 0x01, 0x7F ,  // Л
;     0x7F, 0x02, 0x0C, 0x02, 0x7F ,  // М
;     0x7F, 0x08, 0x08, 0x08, 0x7F ,  // Н
;     0x3E, 0x41, 0x41, 0x41, 0x3E ,  // О
;     0x7F, 0x01, 0x01, 0x01, 0x7F ,  // П
;     0x7F, 0x09, 0x09, 0x09, 0x06 ,  // Р
;     0x3E, 0x41, 0x41, 0x41, 0x22 ,  // С
;     0x01, 0x01, 0x7F, 0x01, 0x01 ,  // Т
;     0x27, 0x48, 0x48, 0x48, 0x3F ,  // У
;     0x1C, 0x22, 0x7F, 0x22, 0x1C ,  // Ф
;     0x63, 0x14, 0x08, 0x14, 0x63 ,  // Х
;     0x7F, 0x40, 0x40, 0x40, 0xFF ,  // Ц
;     0x07, 0x08, 0x08, 0x08, 0x7F ,  // Ч
;     0x7F, 0x40, 0x7F, 0x40, 0x7F ,  // Ш
;     0x7F, 0x40, 0x7F, 0x40, 0xFF ,  // Щ
;     0x01, 0x7F, 0x48, 0x48, 0x30 ,  // Ъ
;     0x7F, 0x48, 0x30, 0x00, 0x7F ,  // Ы
;     0x7F, 0x48, 0x48, 0x30, 0x00 ,  // Ь
;     0x22, 0x41, 0x49, 0x49, 0x3E ,  // Э
;     0x7F, 0x08, 0x3E, 0x41, 0x3E ,  // Ю
;     0x46, 0x29, 0x19, 0x09, 0x7F ,  // Я
;     0x20, 0x54, 0x54, 0x54, 0x78 ,  // а
;     0x3C, 0x4A, 0x4A, 0x49, 0x31 ,  // б
;     0x7C, 0x54, 0x54, 0x28, 0x00 ,  // в
;     0x7C, 0x04, 0x04, 0x04, 0x0C ,  // г
;     0xE0, 0x54, 0x4C, 0x44, 0xFC ,  // д
;     0x38, 0x54, 0x54, 0x54, 0x08 ,  // е
;     0x6C, 0x10, 0x7C, 0x10, 0x6C ,  // ж
;     0x44, 0x44, 0x54, 0x54, 0x28 ,  // з
;     0x7C, 0x20, 0x10, 0x08, 0x7C ,  // и
;     0x78, 0x42, 0x24, 0x12, 0x78 ,  // й
;     0x7C, 0x10, 0x28, 0x44, 0x00 ,  // к
;     0x20, 0x44, 0x3C, 0x04, 0x7C ,  // л
;     0x7C, 0x08, 0x10, 0x08, 0x7C ,  // м
;     0x7C, 0x10, 0x10, 0x10, 0x7C ,  // н
;     0x38, 0x44, 0x44, 0x44, 0x38 ,  // о
;     0x7C, 0x04, 0x04, 0x04, 0x7C ,  // п
;     0x7C, 0x14, 0x14, 0x14, 0x08 ,  // р
;     0x38, 0x44, 0x44, 0x44, 0x44 ,  // с
;     0x04, 0x04, 0x7C, 0x04, 0x04 ,  // т
;     0x0C, 0x50, 0x50, 0x50, 0x3C ,  // у
;     0x18, 0x24, 0x7E, 0x24, 0x18 ,  // ф
;     0x44, 0x28, 0x10, 0x28, 0x44 ,  // х
;     0x7C, 0x40, 0x40, 0x40, 0xFC ,  // ц
;     0x0C, 0x10, 0x10, 0x10, 0x7C ,  // ч
;     0x7C, 0x40, 0x7C, 0x40, 0x7C ,  // ш
;     0x7C, 0x40, 0x7C, 0x40, 0xFC ,  // щ
;     0x04, 0x7C, 0x50, 0x50, 0x20 ,  // ъ
;     0x7C, 0x50, 0x20, 0x00, 0x7C ,  // ы
;     0x7C, 0x50, 0x50, 0x20, 0x00 ,  // ь
;     0x28, 0x44, 0x54, 0x54, 0x38 ,  // э
;     0x7C, 0x10, 0x38, 0x44, 0x38 ,  // ю
;     0x08, 0x54, 0x34, 0x14, 0x7C   // я
;};
;
;
;
;
;unsigned char buffer[1024] =  {
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
;0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x80, 0x80, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0xFF,
;0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00,
;0x80, 0xFF, 0xFF, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x80, 0x80,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x8C, 0x8E, 0x84, 0x00, 0x00, 0x80, 0xF8,
;0xF8, 0xF8, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xE0, 0xE0, 0xC0, 0x80,
;0x00, 0xE0, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xC7, 0x01, 0x01,
;0x01, 0x01, 0x83, 0xFF, 0xFF, 0x00, 0x00, 0x7C, 0xFE, 0xC7, 0x01, 0x01, 0x01, 0x01, 0x83, 0xFF,
;0xFF, 0xFF, 0x00, 0x38, 0xFE, 0xC7, 0x83, 0x01, 0x01, 0x01, 0x83, 0xC7, 0xFF, 0xFF, 0x00, 0x00,
;0x01, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0xFF, 0xFF, 0x07, 0x01, 0x01, 0x01, 0x00, 0x00, 0x7F, 0xFF,
;0x80, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0xFF,
;0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x03, 0x0F, 0x3F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xC7, 0xC7, 0x8F,
;0x8F, 0x9F, 0xBF, 0xFF, 0xFF, 0xC3, 0xC0, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFC, 0xFC,
;0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xF8, 0xF8, 0xF0, 0xF0, 0xE0, 0xC0, 0x00, 0x01, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x01, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01,
;0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01, 0x03, 0x03, 0x00, 0x00,
;0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x00, 0x00, 0x00, 0x03,
;0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x1F, 0x0F,
;0x87, 0xC7, 0xF7, 0xFF, 0xFF, 0x1F, 0x1F, 0x3D, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0x7C, 0x7D, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F, 0x0F, 0x07, 0x00, 0x30, 0x30, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0xC0, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x3F, 0x1F,
;0x0F, 0x07, 0x1F, 0x7F, 0xFF, 0xFF, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0xE0,
;0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0x00, 0x00,
;0x00, 0xFC, 0xFE, 0xFC, 0x0C, 0x06, 0x06, 0x0E, 0xFC, 0xF8, 0x00, 0x00, 0xF0, 0xF8, 0x1C, 0x0E,
;0x06, 0x06, 0x06, 0x0C, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0xFC,
;0xFE, 0xFC, 0x00, 0x18, 0x3C, 0x7E, 0x66, 0xE6, 0xCE, 0x84, 0x00, 0x00, 0x06, 0xFF, 0xFF, 0x06,
;0x06, 0xFC, 0xFE, 0xFC, 0x0C, 0x06, 0x06, 0x06, 0x00, 0x00, 0xFE, 0xFE, 0x00, 0x00, 0xC0, 0xF8,
;0xFC, 0x4E, 0x46, 0x46, 0x46, 0x4E, 0x7C, 0x78, 0x40, 0x18, 0x3C, 0x76, 0xE6, 0xCE, 0xCC, 0x80,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x1F, 0x1F, 0x3F, 0x3F, 0x3F, 0x3F, 0x1F, 0x0F, 0x03,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00,
;0x00, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x03, 0x07, 0x0E, 0x0C,
;0x18, 0x18, 0x0C, 0x06, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x01, 0x0F, 0x0E, 0x0C, 0x18, 0x0C, 0x0F,
;0x07, 0x01, 0x00, 0x04, 0x0E, 0x0C, 0x18, 0x0C, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00,
;0x00, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x07,
;0x07, 0x0C, 0x0C, 0x18, 0x1C, 0x0C, 0x06, 0x06, 0x00, 0x04, 0x0E, 0x0C, 0x18, 0x0C, 0x0F, 0x07,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
;};
;
;
;
;
;
;void clearDisplay(void)
; 0000 001B {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;int i0;
;    for(i0=0; i0<1024;i0++) buffer[i0] = 0;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	i0 -> R16,R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;
;
;
;
;void drawPixel(int x0, int y0, int color) {
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;  if ((x0 < 0) || (x0 >= 128) || (y0 < 0) || (y0 >= 64))
;PCODE: $00000028 VOL: 0
;	x0 -> Y+4
;	y0 -> Y+2
;	color -> Y+0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;    return;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;
;//    x0 = 128 - x0 - 1;
;//    y0 = 64 - y0 - 1;
;
;  // x is which column
;    switch (color)
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;    {
;      case 1:   buffer[x0+ (y0/8)*128] |=  (1 << (y0&7)); break;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;      case 0:   buffer[x0+ (y0/8)*128] &= ~(1 << (y0&7)); break;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;      case 2:  buffer[x0+ (y0/8)*128] ^=  (1 << (y0&7)); break;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;    }
;PCODE: $0000007A VOL: 0
;
;}
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;
;void drawLine(int x1, int y1, int x2, int y2, int color)
;{
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;int kx,ky;
;int znx, zny;
;if (x2 > 127) x2 = 127;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;	x1 -> Y+16
;	y1 -> Y+14
;	x2 -> Y+12
;	y2 -> Y+10
;	color -> Y+8
;	kx -> R16,R17
;	ky -> R18,R19
;	znx -> R20,R21
;	zny -> Y+6
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;if (x2 < 0) x2 = 0;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;if (x1 > 127) x1 = 127 ;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;if (x1 < 0) x1 = 0 ;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;if (y2 > 63) y2 = 63;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;if (y2 < 0) y2 = 0;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;if (y1 > 63) y1 = 63;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;if (y1 < 0) y1 = 0;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;    if (x1 > x2) znx = -1; else znx = 1;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;    if (y1 > y2) zny = -1; else zny = 1;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;    kx = ((x2 - x1)*znx);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;    ky = ((y2 - y1)*zny);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;    drawPixel(x1,y1,color);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;    while ((kx + ky) > 0)
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;    {
;        if (kx > 0) if (ky / kx <= 5) x1 = x1 + znx;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;        if (ky > 0) if (kx / ky <= 5) y1 = y1 + zny;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;        kx = ((x2 - x1)*znx);
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;        ky = ((y2 - y1)*zny);
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;        drawPixel(x1,y1,color);
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;    }
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;
;}
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;
;
;void fillRect(int x, int y, int w, int h,
;			    unsigned int color) {
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; int i;
;  // Update in subclasses if desired!
;  for (i=x; i<x+w; i++) {
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;	x -> Y+10
;	y -> Y+8
;	w -> Y+6
;	h -> Y+4
;	color -> Y+2
;	i -> R16,R17
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;    drawLine(i, y, i, y+h-1, color);
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;  }
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;}
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;
;void drawChar(int x0, int y0, char c)
;{
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;int i0;
;for(i0 = 0 ;i0< 5;i0++) buffer[x0+y0*128+i0] = font[c*5+i0];
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;	x0 -> Y+5
;	y0 -> Y+3
;	c -> Y+2
;	i0 -> R16,R17
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;}
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;
;// Draw a character
;void drawCharZ(int x, int y, unsigned char c, int color, int size) {
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;int j,i0;
;unsigned char line,i, j0;
;    if((x >= 128)            || // Clip right
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;	x -> Y+14
;	y -> Y+12
;	c -> Y+11
;	color -> Y+9
;	size -> Y+7
;	j -> R16,R17
;	i0 -> R18,R19
;	line -> R21
;	i -> R20
;	j0 -> Y+6
;     (y >= 64)           || // Clip bottom
;     ((x + 6 * size - 1) < 0) || // Clip left
;     ((y + 8 * size - 1) < 0))   // Clip top
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;    return;
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;
;  for (i0=0; i0<6; i0++ ) {
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;
;    if (i0 == 5) line = 0x0;
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;    else
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;      line = font[c*5+i0];
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;    for (j = 0; j<8; j++) {
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;      if (line & 0x1) {
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;        if (size == 1) // default size
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;          drawPixel(x+i0, y+j, color);
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;        else {  // big size
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;          for (i = 0; i < size; i++) for (j0 = 0; j0 < size; j0++) drawPixel(x+i0*size+i,y+j*size+j0,color);
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;      }
;      line >>= 1;
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;    }
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;  }
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;}
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;
;void drawCharZo(int x, int y, unsigned char c, int color, int size) {
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;int j,i0;
;unsigned char line,i,j0;
;    if((x >= 128)            || // Clip right
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;	x -> Y+14
;	y -> Y+12
;	c -> Y+11
;	color -> Y+9
;	size -> Y+7
;	j -> R16,R17
;	i0 -> R18,R19
;	line -> R21
;	i -> R20
;	j0 -> Y+6
;     (y >= 64)           || // Clip bottom
;     ((x + 6 * size - 1) < 0) || // Clip left
;     ((y + 8 * size - 1) < 0))   // Clip top
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;    return;
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;
;
;  for(j = 0; j<size; j++)  for(i0=x+y*16; i0<(x+y*16+6*size);i0++) buffer[i0+j*128] = 0;
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;
;    if (i0 == 5) line = 0x0;
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;    else
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;      line = font[c*5+i0];
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;    for (j = 0; j<8; j++) {
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;      if (line & 0x1) {
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;        if (size == 1) // default size
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;          drawPixel(x+i0, y+j, color);
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;        else {  // big size
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;          for (i = 0; i < size; i++) for (j0 = 0; j0 < size; j0++) drawPixel(x+i0*size+i,y+j*size+j0,color);
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;      }
;      line >>= 1;
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;    }
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;  }
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;}
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;
;
;
;void drawString(int x0, int y0,flash char * str, int len)
;{
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;int i0;
;    for (i0 = 0; i0<len; i0++) drawChar(x0+i0,y0, str[i0]) ;
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;	x0 -> Y+8
;	y0 -> Y+6
;	*str -> Y+4
;	len -> Y+2
;	i0 -> R16,R17
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;
;
;void drawStringZ(int x0, int y0,flash char * str, int len, int color, int size)
;{
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;int i0;
;    for (i0 = 0; i0<len; i0++) drawCharZ(x0+i0*6*size,y0, str[i0], color, size) ;
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;	x0 -> Y+12
;	y0 -> Y+10
;	*str -> Y+8
;	len -> Y+6
;	color -> Y+4
;	size -> Y+2
;	i0 -> R16,R17
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;
;#include <twi.h>
;
;void initDisplay(void)
;{
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;
;    twi_master_init(400);
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;    #asm("sei")
;PCODE: $00000324 VOL: 0
	sei
;PCODE: $00000325 VOL: 0
;    twi_master_trans(0x3C, bufer, 50, rx_data, 0);    // Если нужно поменяйте адрес дисплея 0x3C на свой
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;}
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;
;
;void display(int x, int y, int x2, int y2)
;{
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; int i,n;
;    bufer[0] = 0x80;
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;	x -> Y+10
;	y -> Y+8
;	x2 -> Y+6
;	y2 -> Y+4
;	i -> R16,R17
;	n -> R18,R19
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;    bufer[1] = 0x21;
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;    bufer[2] = 0x80;
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;    bufer[3] = x;//0;
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;    bufer[4] = 0x80;
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;    bufer[5] = x2;//127;
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;    bufer[6] = 0x80;
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;    bufer[7] = 0x22;
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;    bufer[8] = 0x80;
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;    bufer[9] = y;//0;
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;    bufer[10] = 0x80;
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;    bufer[11] = y2;//7  ;
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;    twi_master_trans(0x3C, bufer, 12, rx_data, 0) ;
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;
;       for (i=0+y*128; i<128+y2*128; ) {
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;      // send a bunch of data in one xmission
;        bufer[0] = 0x40;
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;        i+=x;
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;        for (n=0; n<x2-x+1; n++) {
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;        bufer[n+1] = buffer[i++];
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;        }
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;        i+=(127-x2);
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;        twi_master_trans(0x3C, bufer, x2+2-x, rx_data, 0) ;
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;    }
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;}
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;// Declare your global variables here
;
;#define dob PIND.1
;#define ubr PIND.2
;#define zvuk PORTB.1
;
;
;flash unsigned char signal[7][256] = {
;{0,3,6,9,13,16,19,22,25,28,31,34,37,41,44,47,50,53,56,59,62,65,68,71,
;74,77,80,83,86,89,92,95,98,100,103,106,109,112,115,117,120,123,126,128,131,134,136,139,142,144,147,
;149,152,154,157,159,162,164,167,169,171,174,176,178,180,183,185,187,189,191,193,195,197,199,201,203,
;205,207,208,210,212,214,215,217,219,220,222,223,225,226,228,229,231,232,233,234,236,237,238,239,240,
;241,242,243,244,245,246,247,247,248,249,249,250,251,251,252,252,253,253,253,254,254,254,255,255,255,
;255,255,255,255,255,255,255,255,254,254,254,253,253,253,252,252,251,251,250,249,249,248,247,247,246,
;245,244,243,242,241,240,239,238,237,236,234,233,232,231,229,228,226,225,223,222,220,219,217,215,214,
;212,210,208,207,205,203,201,199,197,195,193,191,189,187,185,183,180,178,176,174,171,169,167,164,162,
;159,157,154,152,149,147,144,142,139,136,134,131,128,126,123,120,117,115,112,109,106,103,100,98,95,92,
;89,86,83,80,77,74,71,68,65,62,59,56,53,50,47,44,41,37,34,31,28,25,22,19,16,13,9,6,3},
;{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
;    255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
;    255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
;    255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
;    255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
;    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
;    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127},
;{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
;    255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
;    255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
;    255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
;    255,255,255,255,255,255,255,255,255,255,255,255,255,255,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85},
;{255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,237,236,235,234,233,232,231,230,229,228,227,
;    226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,
;    198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,
;    170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,
;    142,141,140,139,138,137,136,135,134,133,132,131,130,129,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,
;    22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,
;    59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,
;    96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125, ...
;{255,254,252,251,250,248,247,246,244,243,242,240,239,238,236,235,234,232,231,230,228,227,226,224,223,222,220,219,218,216 ...
;211,209,208,207,205,204,203,201,200,199,197,196,195,193,192,191,189,188,187,185,184,183,181,180,179,177,176,175,173,172, ...
;167,165,164,163,161,160,159,157,156,155,153,152,151,149,148,147,145,144,143,141,140,139,137,136,135,133,132,131,129,128, ...
;122,121,120,118,117,116,114,113,112,110,109,108,106,105,104,102,101,100,98,97,96,94,93,92,90,89,88,86,
;    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85},
;{255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,
;	255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,
;	255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,
;	255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,255,
;	255,85,85,255,255,85,85,255,255,85,85,255,255,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;	85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;	85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;	85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
;	85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85},
;{255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,
;	255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,
;	255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,
;	255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,255,127,127,255,
;	255,127,127,255,255,127,127,255,255,127,127,255,255,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,
;	127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,
;	0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,
;	127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,0,0,127,127,127}
;} ;
;
;
;
;int i,j,n,m,k,o, dn_reg, up_reg;
;char seans0,chel,vrem, bol0, l;
;//Указать название болезней
;flash char bolezni[45][103] = {
;"ИБС:стенокардия.                                                                                      ",
;"ИБС:стенокардия с гипертонической болезнью.                                                           ",
;"ИБС:острый инфаркт миокарда.                                                                          ",
;"ИБС:стенокардия, постинфарктный кардиосклероз.                                                        ",
;"ИБС:стенокардия, постинфарктный кардиосклероз с недостаточностью кровообращения.                      ",
;"ИБС:стенокардия,постинфарктный кардиосклероз,недостаточное кровообращения с гипертонией.              ",
;"Гипертоническая болезнь с дисциркуляторной энцефалопатией.                                            ",
;"Гипертоническая болезнь с дисциркуляторной энцефалопатией.                                            ",
;"Нарушения ритма без ИБС.                                                                              ",
;"Миокардит.                                                                                            ",
;"Порок сердца (ревматический, врожденный) с недостаточностью кровообращения.                           ",
;"Порок сердца (ревматический, врожденный), недостаточность кровообращения с гипертонией.               ",
;"Бронхиальная астма.                                                                                   ",
;"Бронхит (острый).                                                                                     ",
;"Пневмония (острая, обострение хронической).                                                           ",
;"Язвенная болезнь желудка и 12-ти перстной кишки.                                                      ",
;"Гастрит.                                                                                              ",
;"Холецисто-панкреатит.                                                                                 ",
;"Колит.                                                                                                ",
;"Дисциркуляторная энцефалопатия (атеросклероз сосудов головного мозга).                                ",
;"Вертебрально-базилярная недостаточность.                                                              ",
;"Нейро-циркуляторная дистония.                                                                         ",
;"Состояние после нарушения мозгового кровообращения.                                                   ",
;"Радикулит, невриты.                                                                                   ",
;"Остеохондроз позвоночника.                                                                            ",
;"Неврозы.                                                                                              ",
;"Сахарный диабет.                                                                                      ",
;"Простатит.                                                                                            ",
;"Аденома простаты.                                                                                     ",
;"Пиелонефрит.                                                                                          ",
;"Воспалительные заболевания, эндометриоз.                                                              ",
;"Нарушения менструального цикла.                                                                       ",
;"Нейродермит, экзема.                                                                                  ",
;"Псориаз.                                                                                              ",
;"Грипп, ОРВИ.                                                                                          ",
;"Тонзиллит.                                                                                            ",
;"Хирургическая патология.                                                                              ",
;"Травма, в том числе множественная и сочетанная.                                                       ",
;"Ожоги и отморожения.                                                                                  ",
;"Артрит.                                                                                               ",
;"Атеросклероз сосудов конечностей.                                                                     ",
;"Гайморит, фронтит.                                                                                    ",
;"Перидонтит.                                                                                           ",
;"Сексуальные расстройства.                                                                             ",
;"Нарушения речевого развития.                                                                          "
;};
;
;//Указать программы
;flash unsigned char rezhimi[45][20] = {
;{2,2,2,5,5,6,5,5,4,4,2,2,2,5,5,6,4,4,4,4},
;{4,4,2,5,5,3,5,4,4,4,4,4,2,5,5,4,4,4,4,4},
;{2,2,2,5,5,5,5,2,2,2,2,2,2,5,5,5,5,2,2,2},
;{4,4,2,5,5,6,2,4,4,4,4,4,2,5,5,6,2,4,4,4},
;{4,4,4,4,4,4,3,3,3,4,4,4,4,4,4,4,3,3,3,4},
;{4,4,4,2,2,2,2,5,5,4,4,4,4,2,2,2,2,5,5,4},
;{2,2,2,2,5,5,1,5,4,4,2,2,2,2,5,5,1,5,4,4},
;{4,4,4,4,3,3,3,4,4,4,4,4,4,4,3,3,3,4,4,4},
;{4,4,4,2,2,1,5,2,4,4,4,4,4,2,2,1,5,2,4,4},
;{2,2,2,5,5,6,6,5,2,2,2,2,2,5,5,6,6,5,2,2},
;{4,4,4,4,2,5,5,4,4,4,4,4,4,4,2,5,5,4,4,4},
;{4,4,4,4,4,2,2,4,4,4,4,4,4,4,4,2,2,4,4,4},
;{2,2,5,5,5,2,2,2,4,4,2,2,5,5,5,2,2,2,4,4},
;{2,2,2,2,1,1,1,5,6,2,2,2,2,2,1,1,1,5,6,2},
;{2,2,1,5,5,3,3,5,5,4,2,2,1,5,5,3,3,3,4,4},
;{2,2,2,5,5,5,5,2,2,2,2,2,2,5,5,5,5,2,2,2},
;{2,2,2,5,6,1,5,2,4,4,2,2,2,5,6,1,5,2,4,4},
;{4,4,2,5,5,5,5,5,4,4,4,4,2,5,5,5,5,5,4,4},
;{2,2,2,5,5,4,4,5,2,2,2,2,2,5,5,4,4,5,2,2},
;{4,4,4,4,4,3,3,3,5,4,4,4,4,4,4,3,3,4,4,4},
;{4,4,4,4,4,3,3,4,4,4,4,4,4,4,4,3,3,4,4,4},
;{4,4,3,3,3,5,5,5,5,5,4,4,4,4,4,4,4,4,5,5},
;{4,4,3,3,3,3,5,4,4,4,4,4,4,4,4,4,4,4,4,4},
;{2,2,2,2,5,5,6,6,5,5,2,2,2,2,5,5,6,6,5,5},
;{4,4,2,2,5,5,6,6,2,2,4,4,2,2,5,5,6,6,2,2},
;{4,4,4,3,2,2,4,4,4,4,4,4,4,3,2,2,4,4,4,4},
;{2,1,5,6,6,5,3,3,4,4,2,1,5,6,6,5,3,3,4,4},
;{2,5,5,5,5,5,2,2,2,2,2,5,5,5,5,5,3,3,2,2},
;{4,4,4,3,3,1,1,6,5,5,4,4,4,3,3,1,1,6,5,5},
;{5,5,5,2,2,3,4,4,5,5,5,5,5,2,2,3,4,4,5,5},
;{2,2,2,1,1,1,1,1,2,2,2,2,2,1,1,1,1,1,2,2},
;{4,4,4,3,1,6,1,6,5,5,4,4,4,3,1,6,1,6,5,5},
;{2,2,5,5,5,5,6,6,4,4,2,2,5,5,5,5,6,6,4,4},
;{4,4,4,4,3,3,6,1,5,5,4,4,4,4,3,3,6,1,5,5},
;{2,5,1,2,5,5,5,2,2,1,2,5,1,2,5,5,5,2,2,1},
;{2,2,2,2,4,3,4,2,5,5,2,2,2,2,4,3,4,2,5,5},
;{2,2,5,5,6,6,6,2,4,4,2,2,5,5,6,6,6,2,4,4},
;{5,5,6,6,6,2,2,2,2,2,5,5,6,6,6,2,2,2,2,2},
;{5,5,6,6,4,4,3,5,2,2,5,5,6,6,4,4,3,5,2,2},
;{2,2,5,5,4,4,3,4,5,2,2,2,5,5,4,4,3,4,5,2},
;{2,2,2,2,2,5,5,5,5,5,2,2,2,2,2,5,5,5,5,5},
;{2,2,2,2,5,5,5,6,5,5,2,2,3,3,4,4,4,6,5,5},
;{2,2,2,2,5,1,1,5,5,5,2,2,2,2,5,1,1,5,5,5},
;{4,3,6,5,5,4,4,4,4,4,4,4,3,4,4,4,4,4,4,4},
;{4,4,3,3,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4}
;};
;
;
;
;eeprom char seans[10], bol[10];
;
;
;
;unsigned int tok,tok0, period, a, mod, paus, time;
;unsigned char a1,a2,a3, rezh0,tok1;
;long timer;
;bit fl1, fl2, fl3, fl4, fl5, reg1, reg2, flag0, fubr;
;
;// Voltage Reference: Int., cap. on AREF
;#define ADC_VREF_TYPE ((1<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 00D8 {
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
; 0000 00D9 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $000003AB VOL: 0
;	adc_input -> Y+0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
; 0000 00DA // Delay needed for the stabilization of the ADC input voltage
; 0000 00DB delay_us(10);
;PCODE: $000003AF VOL: 0
; 0000 00DC // Start the AD conversion
; 0000 00DD ADCSRA|=(1<<ADSC);
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
; 0000 00DE // Wait for the AD conversion to complete
; 0000 00DF while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
; 0000 00E0 ADCSRA|=(1<<ADIF);
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
; 0000 00E1 return ADCW;
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
; 0000 00E2 }
;PCODE: $000003BF VOL: 0
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 00E6 {
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
; 0000 00E7 // Place your code here
; 0000 00E8     fubr = 1;
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
; 0000 00E9 }
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 00EE {
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
; 0000 00EF     if(reg1)
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
; 0000 00F0     {
; 0000 00F1       if(reg2)
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0000 00F2       {
; 0000 00F3             TCNT1H=period >> 8;
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
; 0000 00F4             TCNT1L=period & 0xff;
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
; 0000 00F5             if(a1 < 254)
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
; 0000 00F6             {
; 0000 00F7                  OCR2A = signal[0][a1++];
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
; 0000 00F8             }
; 0000 00F9             else
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
; 0000 00FA             {
; 0000 00FB                 a1 = 0;
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
; 0000 00FC                 if(timer > 9000000) period = 2048 + (timer - 9000000)/143;  // 15584  64736
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
; 0000 00FD                 else
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
; 0000 00FE                 if (timer > 6000000) period = 58592 - (timer - 6000000)/53;
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
; 0000 00FF                 else
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
; 0000 0100                 {
; 0000 0101                     if(fl2) period-=4; else period+=4;
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
; 0000 0102                     if (period > 0xED40) fl2 = 1;
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
; 0000 0103                     if (period < 0xE4E0) fl2 = 0;
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
; 0000 0104                 }
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
; 0000 0105                 if (tok >= tok0)
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
; 0000 0106                 {
; 0000 0107                     if(fl1) { if(a3<128) a3 += 1;} else a3 = 1;
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
; 0000 0108                     fl1 = 1;
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
; 0000 0109                     if (OCR0B == 0)
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
; 0000 010A                     {
; 0000 010B                         if(OCR0A > 64) OCR0A = 64;
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
; 0000 010C                         if((unsigned char)OCR0A > a3) OCR0A = OCR0A - a3; else OCR0A=0x00;
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
; 0000 010D                     }
;PCODE: $00000442 VOL: 0
; 0000 010E                     else
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
; 0000 010F                     {  if((unsigned char)OCR0B > a3) OCR0B = OCR0B - a3;
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
; 0000 0110                         else
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
; 0000 0111                         {
; 0000 0112                             OCR0B=0x00;
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
; 0000 0113                             a3 = 1;
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
; 0000 0114                         }
;PCODE: $00000454 VOL: 0
; 0000 0115                     }
;PCODE: $00000455 VOL: 0
; 0000 0116                 }
; 0000 0117                 else
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
; 0000 0118                 {
; 0000 0119                     if(fl1==0)  { if(a3<16) a3 *= 1;} else a3 = 1;
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
; 0000 011A                     fl1 = 0;
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
; 0000 011B                     if (OCR0A == 0xFF)
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
; 0000 011C                     { if((unsigned char)OCR0B < (0x98 - a3)) OCR0B = OCR0B + a3; else OCR0B=0x98; }
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
; 0000 011D                     else
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
; 0000 011E                     {   if(OCR0A < (0xFF - a3) & OCR0A < 64) OCR0A = OCR0A + a3;
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
; 0000 011F                         else
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
; 0000 0120                         {
; 0000 0121                             OCR0A=0xFF;
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
; 0000 0122                             a3 = 1;
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
; 0000 0123                         }
;PCODE: $0000049C VOL: 0
; 0000 0124                     }
;PCODE: $0000049D VOL: 0
; 0000 0125                 }
;PCODE: $0000049E VOL: 0
; 0000 0126 
; 0000 0127 
; 0000 0128             }
;PCODE: $0000049F VOL: 0
; 0000 0129             if (a1 == 128) tok = read_adc(0);
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
; 0000 012A 
; 0000 012B       }
;PCODE: $000004A6 VOL: 0
; 0000 012C       else
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
; 0000 012D       {
; 0000 012E         // Reinitialize Timer1 value
; 0000 012F         TCNT1H=0xE0;//80 >> 8;
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
; 0000 0130         TCNT1L=0xC0;//0xFE80 & 0xff;      // 0.5 ms
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
; 0000 0131         if (a1++ == 0)
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
; 0000 0132         {
; 0000 0133             OCR2A = 0xFF;
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
; 0000 0134         }
; 0000 0135         else
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
; 0000 0136         {
; 0000 0137             TCNT1H=0x06;
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
; 0000 0138             TCNT1L=0x00;
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
; 0000 0139             if(a1 == 2)
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
; 0000 013A             {
; 0000 013B                 tok = read_adc(0);
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
; 0000 013C                 OCR2A = 0x00;
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
; 0000 013D                 if (tok >= tok0)
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
; 0000 013E                 {
; 0000 013F                     if(fl1) { if(a3<128) a3 += 1;} else a3 = 1;
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
; 0000 0140                     fl1 = 1;
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
; 0000 0141                     if (OCR0B == 0)
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
; 0000 0142                     {
; 0000 0143                         if(OCR0A > 64) OCR0A = 64;
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
; 0000 0144                         if((unsigned char)OCR0A > a3) OCR0A = OCR0A - a3; else OCR0A=0x00;
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
; 0000 0145                     }
;PCODE: $000004ED VOL: 0
; 0000 0146                     else
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
; 0000 0147                     {  if((unsigned char)OCR0B > a3) OCR0B = OCR0B - a3;
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
; 0000 0148                         else
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
; 0000 0149                         {
; 0000 014A                             OCR0B=0x00;
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
; 0000 014B                             a3 = 1;
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
; 0000 014C                         }
;PCODE: $000004FF VOL: 0
; 0000 014D                     }
;PCODE: $00000500 VOL: 0
; 0000 014E                 }
; 0000 014F                 else
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
; 0000 0150                 {
; 0000 0151                     if(fl1==0)  { if(a3<16) a3 *= 1;} else a3 = 1;
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
; 0000 0152                     fl1 = 0;
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
; 0000 0153                     if (OCR0A == 0xFF)
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
; 0000 0154                     { if((unsigned char)OCR0B < (0x98 - a3)) OCR0B = OCR0B + a3; else OCR0B=0x98; }
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
; 0000 0155                     else
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
; 0000 0156                     {   if(OCR0A < (0xFF - a3) & OCR0A < 64) OCR0A = OCR0A + a3;
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
; 0000 0157                         else
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
; 0000 0158                         {
; 0000 0159                             OCR0A=0xFF;
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
; 0000 015A                             a3 = 1;
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
; 0000 015B                         }
;PCODE: $00000547 VOL: 0
; 0000 015C                     }
;PCODE: $00000548 VOL: 0
; 0000 015D                 }
;PCODE: $00000549 VOL: 0
; 0000 015E 
; 0000 015F                 timer = timer - 130;
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
; 0000 0160             }
; 0000 0161             if(a1 > 4)
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
; 0000 0162             {
; 0000 0163             TCNT1H=0xE2;
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
; 0000 0164             TCNT1L=0xC4 ;
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
; 0000 0165             a1 = 0;
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
; 0000 0166             }
; 0000 0167         }
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
; 0000 0168       }
;PCODE: $00000559 VOL: 0
; 0000 0169     }
; 0000 016A     else
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
; 0000 016B     {
; 0000 016C         // Reinitialize Timer1 value
; 0000 016D         TCNT1H=0xFE;//80 >> 8;
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
; 0000 016E         TCNT1L=0x40;//0xFE80 & 0xff;
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
; 0000 016F             if(a1 < 254)
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
; 0000 0170             {
; 0000 0171                 if(a1 == 2)
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
; 0000 0172                 {
; 0000 0173                     ADMUX = ADC_VREF_TYPE;
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
; 0000 0174                     // Delay needed for the stabilization of the ADC input voltage
; 0000 0175                     delay_us(5);
;PCODE: $00000568 VOL: 0
; 0000 0176                     // Start the AD conversion
; 0000 0177                     ADCSRA|=(1<<ADSC);
;PCODE: $00000569 VOL: 0
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
; 0000 0178                     // Wait for the AD conversion to complete
; 0000 0179                     while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
; 0000 017A                     ADCSRA|=(1<<ADIF);
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
; 0000 017B                     tok = ADCW;
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
; 0000 017C                 }
; 0000 017D                 OCR2A = signal[rezh0][a1++];       //8 ms
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
; 0000 017E             }
; 0000 017F             else
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
; 0000 0180             {
; 0000 0181                 if(a1 == 254)
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
; 0000 0182                 {
; 0000 0183                     TCNT1H=0x4B;
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
; 0000 0184                     TCNT1L=0x80;
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
; 0000 0185                     OCR2A = signal[rezh0][254];
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
; 0000 0186                     a1++;
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
; 0000 0187                 }
; 0000 0188                 else
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
; 0000 0189                 {
; 0000 018A 
; 0000 018B                     if(fl2) period -=  mod; else period +=  mod;
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
; 0000 018C                     if (period > 60000) fl2 = 1;
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
; 0000 018D                     if (period < 5000) fl2 = 0;
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
; 0000 018E                     TCNT1H=period >> 8;
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
; 0000 018F                     TCNT1L=period & 0xff;
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
; 0000 0190                     timer = timer - 111 - (60000-period)/1618;
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
; 0000 0191                     if (tok >= tok0)
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
; 0000 0192                     {
; 0000 0193                         if(fl1) { if(a3<128) a3 += 1;} else a3 = 1;
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
; 0000 0194                         fl1 = 1;
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
; 0000 0195                         if (OCR0B == 0)
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
; 0000 0196                         {
; 0000 0197                             if(OCR0A > 64) OCR0A = 64;
;PCODE: $000005DC VOL: 0
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
; 0000 0198                             if((unsigned char)OCR0A > a3) OCR0A = OCR0A - a3; else OCR0A=0x00;
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
; 0000 0199                         }
;PCODE: $000005EF VOL: 0
; 0000 019A                         else
;PCODE: $000005F0 VOL: 0
;PCODE: $000005F1 VOL: 0
; 0000 019B                         {  if((unsigned char)OCR0B > a3) OCR0B = OCR0B - a3;
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
; 0000 019C                             else
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
; 0000 019D                             {
; 0000 019E                                 OCR0B=0x00;
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
; 0000 019F                                 a3 = 1;
;PCODE: $000005FF VOL: 0
;PCODE: $00000600 VOL: 0
; 0000 01A0                             }
;PCODE: $00000601 VOL: 0
; 0000 01A1                         }
;PCODE: $00000602 VOL: 0
; 0000 01A2                     }
; 0000 01A3                     else
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
; 0000 01A4                     {
; 0000 01A5                         if(fl1==0)  { if(a3<16) a3 *= 1;} else a3 = 1;
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
; 0000 01A6                         fl1 = 0;
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
; 0000 01A7                         if (OCR0A == 0xFF)
;PCODE: $00000615 VOL: 0
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
; 0000 01A8                         { if((unsigned char)OCR0B < (0x98 - a3)) OCR0B = OCR0B + a3; else OCR0B=0x98; }
;PCODE: $00000618 VOL: 0
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
;PCODE: $00000624 VOL: 0
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
; 0000 01A9                         else
;PCODE: $0000062C VOL: 0
;PCODE: $0000062D VOL: 0
; 0000 01AA                         {   if(OCR0A < (0xFF - a3) & OCR0A < 64) OCR0A = OCR0A + a3;
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
; 0000 01AB                             else
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
; 0000 01AC                             {
; 0000 01AD                                 OCR0A=0xFF;
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
; 0000 01AE                                 a3 = 1;
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
; 0000 01AF                             }
;PCODE: $00000649 VOL: 0
; 0000 01B0                         }
;PCODE: $0000064A VOL: 0
; 0000 01B1                     }
;PCODE: $0000064B VOL: 0
; 0000 01B2 
; 0000 01B3                     a2 = 0;
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
; 0000 01B4                     a1 = 0;
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
; 0000 01B5 
; 0000 01B6                 }
;PCODE: $00000650 VOL: 0
; 0000 01B7             }
;PCODE: $00000651 VOL: 0
; 0000 01B8 
; 0000 01B9     }
;PCODE: $00000652 VOL: 0
; 0000 01BA }
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
;PCODE: $00000655 VOL: 0
;
;
;// Timer2 overflow interrupt service routine
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 01BF {
;PCODE: $00000656 VOL: 0
;PCODE: $00000657 VOL: 0
; 0000 01C0 // Place your code here
; 0000 01C1 if (fl5) OCR2B = ++l; else OCR2B = --l;
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
;PCODE: $0000065B VOL: 0
;PCODE: $0000065C VOL: 0
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
;PCODE: $00000664 VOL: 0
; 0000 01C2 if (l == 0) fl5 = !fl5;
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
;PCODE: $00000668 VOL: 0
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
; 0000 01C3 }
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
;
;
;void ZnachZ(int x, int y, int zn, int zoom)
; 0000 01C7 {
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
; 0000 01C8   int a,b;
; 0000 01C9 
; 0000 01CA     if(zn<10)
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
;	x -> Y+10
;	y -> Y+8
;	zn -> Y+6
;	zoom -> Y+4
;	a -> R16,R17
;	b -> R18,R19
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
; 0000 01CB     {
; 0000 01CC         drawCharZo(x,y,'0',1, zoom);
;PCODE: $0000067E VOL: 0
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
;PCODE: $00000682 VOL: 0
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
;PCODE: $00000686 VOL: 0
;PCODE: $00000687 VOL: 0
; 0000 01CD         drawCharZo(x+12*zoom,y,'0',1, zoom);
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
;PCODE: $00000690 VOL: 0
;PCODE: $00000691 VOL: 0
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
;PCODE: $00000694 VOL: 0
;PCODE: $00000695 VOL: 0
; 0000 01CE         drawCharZo(x+18*zoom,y,0x30+zn,1, zoom);
;PCODE: $00000696 VOL: 0
;PCODE: $00000697 VOL: 0
;PCODE: $00000698 VOL: 0
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
;PCODE: $0000069B VOL: 0
;PCODE: $0000069C VOL: 0
;PCODE: $0000069D VOL: 0
;PCODE: $0000069E VOL: 0
;PCODE: $0000069F VOL: 0
;PCODE: $000006A0 VOL: 0
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
;PCODE: $000006A3 VOL: 0
;PCODE: $000006A4 VOL: 0
; 0000 01CF     }
; 0000 01D0     else
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
; 0000 01D1     if(zn<100)
;PCODE: $000006A7 VOL: 0
;PCODE: $000006A8 VOL: 0
;PCODE: $000006A9 VOL: 0
; 0000 01D2     {
; 0000 01D3         a = zn/10;
;PCODE: $000006AA VOL: 0
;PCODE: $000006AB VOL: 0
;PCODE: $000006AC VOL: 0
;PCODE: $000006AD VOL: 0
; 0000 01D4         zn = zn - a*10;
;PCODE: $000006AE VOL: 0
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
;PCODE: $000006B1 VOL: 0
;PCODE: $000006B2 VOL: 0
;PCODE: $000006B3 VOL: 0
; 0000 01D5         drawCharZo(x,y,'0',1, zoom);
;PCODE: $000006B4 VOL: 0
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
;PCODE: $000006B9 VOL: 0
;PCODE: $000006BA VOL: 0
;PCODE: $000006BB VOL: 0
;PCODE: $000006BC VOL: 0
;PCODE: $000006BD VOL: 0
; 0000 01D6         drawCharZo(x+12*zoom,y,0x30+a,1, zoom);
;PCODE: $000006BE VOL: 0
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
;PCODE: $000006C7 VOL: 0
;PCODE: $000006C8 VOL: 0
;PCODE: $000006C9 VOL: 0
;PCODE: $000006CA VOL: 0
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
; 0000 01D7         drawCharZo(x+18*zoom,y,0x30+zn,1, zoom);
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
;PCODE: $000006D1 VOL: 0
;PCODE: $000006D2 VOL: 0
;PCODE: $000006D3 VOL: 0
;PCODE: $000006D4 VOL: 0
;PCODE: $000006D5 VOL: 0
;PCODE: $000006D6 VOL: 0
;PCODE: $000006D7 VOL: 0
;PCODE: $000006D8 VOL: 0
;PCODE: $000006D9 VOL: 0
;PCODE: $000006DA VOL: 0
;PCODE: $000006DB VOL: 0
; 0000 01D8     }
; 0000 01D9     else
;PCODE: $000006DC VOL: 0
;PCODE: $000006DD VOL: 0
; 0000 01DA     {   b = zn/100;
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
;PCODE: $000006E0 VOL: 0
;PCODE: $000006E1 VOL: 0
; 0000 01DB         a = (zn - b*100)/10;
;PCODE: $000006E2 VOL: 0
;PCODE: $000006E3 VOL: 0
;PCODE: $000006E4 VOL: 0
;PCODE: $000006E5 VOL: 0
;PCODE: $000006E6 VOL: 0
;PCODE: $000006E7 VOL: 0
;PCODE: $000006E8 VOL: 0
;PCODE: $000006E9 VOL: 0
; 0000 01DC         zn = zn - b*100 - a*10;
;PCODE: $000006EA VOL: 0
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
;PCODE: $000006ED VOL: 0
;PCODE: $000006EE VOL: 0
;PCODE: $000006EF VOL: 0
;PCODE: $000006F0 VOL: 0
;PCODE: $000006F1 VOL: 0
;PCODE: $000006F2 VOL: 0
;PCODE: $000006F3 VOL: 0
;PCODE: $000006F4 VOL: 0
;PCODE: $000006F5 VOL: 0
; 0000 01DD         drawCharZo(x,y,0x30+b,1, zoom);
;PCODE: $000006F6 VOL: 0
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
;PCODE: $000006F9 VOL: 0
;PCODE: $000006FA VOL: 0
;PCODE: $000006FB VOL: 0
;PCODE: $000006FC VOL: 0
;PCODE: $000006FD VOL: 0
;PCODE: $000006FE VOL: 0
;PCODE: $000006FF VOL: 0
;PCODE: $00000700 VOL: 0
; 0000 01DE         drawCharZo(x+12*zoom,y,0x30+a,1, zoom);
;PCODE: $00000701 VOL: 0
;PCODE: $00000702 VOL: 0
;PCODE: $00000703 VOL: 0
;PCODE: $00000704 VOL: 0
;PCODE: $00000705 VOL: 0
;PCODE: $00000706 VOL: 0
;PCODE: $00000707 VOL: 0
;PCODE: $00000708 VOL: 0
;PCODE: $00000709 VOL: 0
;PCODE: $0000070A VOL: 0
;PCODE: $0000070B VOL: 0
;PCODE: $0000070C VOL: 0
;PCODE: $0000070D VOL: 0
;PCODE: $0000070E VOL: 0
;PCODE: $0000070F VOL: 0
; 0000 01DF         drawCharZo(x+18*zoom,y,0x30+zn,1, zoom);
;PCODE: $00000710 VOL: 0
;PCODE: $00000711 VOL: 0
;PCODE: $00000712 VOL: 0
;PCODE: $00000713 VOL: 0
;PCODE: $00000714 VOL: 0
;PCODE: $00000715 VOL: 0
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
;PCODE: $00000718 VOL: 0
;PCODE: $00000719 VOL: 0
;PCODE: $0000071A VOL: 0
;PCODE: $0000071B VOL: 0
;PCODE: $0000071C VOL: 0
;PCODE: $0000071D VOL: 0
;PCODE: $0000071E VOL: 0
; 0000 01E0 
; 0000 01E1     }
;PCODE: $0000071F VOL: 0
;PCODE: $00000720 VOL: 0
; 0000 01E2     drawCharZo(x+6*zoom,y,'.',1, zoom);
;PCODE: $00000721 VOL: 0
;PCODE: $00000722 VOL: 0
;PCODE: $00000723 VOL: 0
;PCODE: $00000724 VOL: 0
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
;PCODE: $00000727 VOL: 0
;PCODE: $00000728 VOL: 0
;PCODE: $00000729 VOL: 0
;PCODE: $0000072A VOL: 0
;PCODE: $0000072B VOL: 0
;PCODE: $0000072C VOL: 0
;PCODE: $0000072D VOL: 0
;PCODE: $0000072E VOL: 0
; 0000 01E3 }
;PCODE: $0000072F VOL: 0
;PCODE: $00000730 VOL: 0
;PCODE: $00000731 VOL: 0
;PCODE: $00000732 VOL: 0
;
;void ZnachZo(int x, int y, int zn, int zoom)
; 0000 01E6 {
;PCODE: $00000733 VOL: 0
;PCODE: $00000734 VOL: 0
; 0000 01E7    int a,b;
; 0000 01E8     if(zn<10)
;PCODE: $00000735 VOL: 0
;PCODE: $00000736 VOL: 0
;	x -> Y+10
;	y -> Y+8
;	zn -> Y+6
;	zoom -> Y+4
;	a -> R16,R17
;	b -> R18,R19
;PCODE: $00000737 VOL: 0
;PCODE: $00000738 VOL: 0
;PCODE: $00000739 VOL: 0
; 0000 01E9     {
; 0000 01EA         drawCharZo(x,y,'0',1, zoom);
;PCODE: $0000073A VOL: 0
;PCODE: $0000073B VOL: 0
;PCODE: $0000073C VOL: 0
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
;PCODE: $0000073F VOL: 0
;PCODE: $00000740 VOL: 0
;PCODE: $00000741 VOL: 0
;PCODE: $00000742 VOL: 0
;PCODE: $00000743 VOL: 0
; 0000 01EB         drawCharZo(x+6*zoom,y,'0',1, zoom);
;PCODE: $00000744 VOL: 0
;PCODE: $00000745 VOL: 0
;PCODE: $00000746 VOL: 0
;PCODE: $00000747 VOL: 0
;PCODE: $00000748 VOL: 0
;PCODE: $00000749 VOL: 0
;PCODE: $0000074A VOL: 0
;PCODE: $0000074B VOL: 0
;PCODE: $0000074C VOL: 0
;PCODE: $0000074D VOL: 0
;PCODE: $0000074E VOL: 0
;PCODE: $0000074F VOL: 0
;PCODE: $00000750 VOL: 0
;PCODE: $00000751 VOL: 0
; 0000 01EC         drawCharZo(x+12*zoom,y,0x30+zn,1, zoom);
;PCODE: $00000752 VOL: 0
;PCODE: $00000753 VOL: 0
;PCODE: $00000754 VOL: 0
;PCODE: $00000755 VOL: 0
;PCODE: $00000756 VOL: 0
;PCODE: $00000757 VOL: 0
;PCODE: $00000758 VOL: 0
;PCODE: $00000759 VOL: 0
;PCODE: $0000075A VOL: 0
;PCODE: $0000075B VOL: 0
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
;PCODE: $0000075E VOL: 0
;PCODE: $0000075F VOL: 0
;PCODE: $00000760 VOL: 0
; 0000 01ED     }
; 0000 01EE     else
;PCODE: $00000761 VOL: 0
;PCODE: $00000762 VOL: 0
; 0000 01EF     if(zn<100)
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
;PCODE: $00000765 VOL: 0
; 0000 01F0     {
; 0000 01F1         a = zn/10;
;PCODE: $00000766 VOL: 0
;PCODE: $00000767 VOL: 0
;PCODE: $00000768 VOL: 0
;PCODE: $00000769 VOL: 0
; 0000 01F2         zn = zn - a*10;
;PCODE: $0000076A VOL: 0
;PCODE: $0000076B VOL: 0
;PCODE: $0000076C VOL: 0
;PCODE: $0000076D VOL: 0
;PCODE: $0000076E VOL: 0
;PCODE: $0000076F VOL: 0
; 0000 01F3         drawCharZo(x,y,'0',1, zoom);
;PCODE: $00000770 VOL: 0
;PCODE: $00000771 VOL: 0
;PCODE: $00000772 VOL: 0
;PCODE: $00000773 VOL: 0
;PCODE: $00000774 VOL: 0
;PCODE: $00000775 VOL: 0
;PCODE: $00000776 VOL: 0
;PCODE: $00000777 VOL: 0
;PCODE: $00000778 VOL: 0
;PCODE: $00000779 VOL: 0
; 0000 01F4         drawCharZo(x+6*zoom,y,0x30+a,1, zoom);
;PCODE: $0000077A VOL: 0
;PCODE: $0000077B VOL: 0
;PCODE: $0000077C VOL: 0
;PCODE: $0000077D VOL: 0
;PCODE: $0000077E VOL: 0
;PCODE: $0000077F VOL: 0
;PCODE: $00000780 VOL: 0
;PCODE: $00000781 VOL: 0
;PCODE: $00000782 VOL: 0
;PCODE: $00000783 VOL: 0
;PCODE: $00000784 VOL: 0
;PCODE: $00000785 VOL: 0
;PCODE: $00000786 VOL: 0
;PCODE: $00000787 VOL: 0
;PCODE: $00000788 VOL: 0
; 0000 01F5         drawCharZo(x+12*zoom,y,0x30+zn,1, zoom);
;PCODE: $00000789 VOL: 0
;PCODE: $0000078A VOL: 0
;PCODE: $0000078B VOL: 0
;PCODE: $0000078C VOL: 0
;PCODE: $0000078D VOL: 0
;PCODE: $0000078E VOL: 0
;PCODE: $0000078F VOL: 0
;PCODE: $00000790 VOL: 0
;PCODE: $00000791 VOL: 0
;PCODE: $00000792 VOL: 0
;PCODE: $00000793 VOL: 0
;PCODE: $00000794 VOL: 0
;PCODE: $00000795 VOL: 0
;PCODE: $00000796 VOL: 0
;PCODE: $00000797 VOL: 0
; 0000 01F6     }
; 0000 01F7     else
;PCODE: $00000798 VOL: 0
;PCODE: $00000799 VOL: 0
; 0000 01F8     {   b = zn/100;
;PCODE: $0000079A VOL: 0
;PCODE: $0000079B VOL: 0
;PCODE: $0000079C VOL: 0
;PCODE: $0000079D VOL: 0
; 0000 01F9         a = (zn - b*100)/10;
;PCODE: $0000079E VOL: 0
;PCODE: $0000079F VOL: 0
;PCODE: $000007A0 VOL: 0
;PCODE: $000007A1 VOL: 0
;PCODE: $000007A2 VOL: 0
;PCODE: $000007A3 VOL: 0
;PCODE: $000007A4 VOL: 0
;PCODE: $000007A5 VOL: 0
; 0000 01FA         zn = zn - b*100 - a*10;
;PCODE: $000007A6 VOL: 0
;PCODE: $000007A7 VOL: 0
;PCODE: $000007A8 VOL: 0
;PCODE: $000007A9 VOL: 0
;PCODE: $000007AA VOL: 0
;PCODE: $000007AB VOL: 0
;PCODE: $000007AC VOL: 0
;PCODE: $000007AD VOL: 0
;PCODE: $000007AE VOL: 0
;PCODE: $000007AF VOL: 0
;PCODE: $000007B0 VOL: 0
;PCODE: $000007B1 VOL: 0
; 0000 01FB         drawCharZo(x,y,0x30+b,1, zoom);
;PCODE: $000007B2 VOL: 0
;PCODE: $000007B3 VOL: 0
;PCODE: $000007B4 VOL: 0
;PCODE: $000007B5 VOL: 0
;PCODE: $000007B6 VOL: 0
;PCODE: $000007B7 VOL: 0
;PCODE: $000007B8 VOL: 0
;PCODE: $000007B9 VOL: 0
;PCODE: $000007BA VOL: 0
;PCODE: $000007BB VOL: 0
;PCODE: $000007BC VOL: 0
; 0000 01FC         drawCharZo(x+6*zoom,y,0x30+a,1, zoom);
;PCODE: $000007BD VOL: 0
;PCODE: $000007BE VOL: 0
;PCODE: $000007BF VOL: 0
;PCODE: $000007C0 VOL: 0
;PCODE: $000007C1 VOL: 0
;PCODE: $000007C2 VOL: 0
;PCODE: $000007C3 VOL: 0
;PCODE: $000007C4 VOL: 0
;PCODE: $000007C5 VOL: 0
;PCODE: $000007C6 VOL: 0
;PCODE: $000007C7 VOL: 0
;PCODE: $000007C8 VOL: 0
;PCODE: $000007C9 VOL: 0
;PCODE: $000007CA VOL: 0
;PCODE: $000007CB VOL: 0
; 0000 01FD         drawCharZo(x+12*zoom,y,0x30+zn,1, zoom);
;PCODE: $000007CC VOL: 0
;PCODE: $000007CD VOL: 0
;PCODE: $000007CE VOL: 0
;PCODE: $000007CF VOL: 0
;PCODE: $000007D0 VOL: 0
;PCODE: $000007D1 VOL: 0
;PCODE: $000007D2 VOL: 0
;PCODE: $000007D3 VOL: 0
;PCODE: $000007D4 VOL: 0
;PCODE: $000007D5 VOL: 0
;PCODE: $000007D6 VOL: 0
;PCODE: $000007D7 VOL: 0
;PCODE: $000007D8 VOL: 0
;PCODE: $000007D9 VOL: 0
;PCODE: $000007DA VOL: 0
; 0000 01FE 
; 0000 01FF     }
;PCODE: $000007DB VOL: 0
;PCODE: $000007DC VOL: 0
; 0000 0200 }
;PCODE: $000007DD VOL: 0
;PCODE: $000007DE VOL: 0
;PCODE: $000007DF VOL: 0
;PCODE: $000007E0 VOL: 0
;
;
;void timeZ(int x, int y, int sec, int zoom)
; 0000 0204 {
;PCODE: $000007E1 VOL: 0
;PCODE: $000007E2 VOL: 0
; 0000 0205 int min,a;
; 0000 0206     min = sec / 60;
;PCODE: $000007E3 VOL: 0
;PCODE: $000007E4 VOL: 0
;	x -> Y+10
;	y -> Y+8
;	sec -> Y+6
;	zoom -> Y+4
;	min -> R16,R17
;	a -> R18,R19
;PCODE: $000007E5 VOL: 0
;PCODE: $000007E6 VOL: 0
;PCODE: $000007E7 VOL: 0
;PCODE: $000007E8 VOL: 0
; 0000 0207     sec -=  min * 60;
;PCODE: $000007E9 VOL: 0
;PCODE: $000007EA VOL: 0
;PCODE: $000007EB VOL: 0
;PCODE: $000007EC VOL: 0
;PCODE: $000007ED VOL: 0
;PCODE: $000007EE VOL: 0
; 0000 0208     if(min<10)
;PCODE: $000007EF VOL: 0
;PCODE: $000007F0 VOL: 0
;PCODE: $000007F1 VOL: 0
; 0000 0209     {
; 0000 020A         drawCharZo(x,y,'0',1, zoom);
;PCODE: $000007F2 VOL: 0
;PCODE: $000007F3 VOL: 0
;PCODE: $000007F4 VOL: 0
;PCODE: $000007F5 VOL: 0
;PCODE: $000007F6 VOL: 0
;PCODE: $000007F7 VOL: 0
;PCODE: $000007F8 VOL: 0
;PCODE: $000007F9 VOL: 0
;PCODE: $000007FA VOL: 0
;PCODE: $000007FB VOL: 0
; 0000 020B         drawCharZo(x+6*zoom,y,0x30+min,1, zoom);
;PCODE: $000007FC VOL: 0
;PCODE: $000007FD VOL: 0
;PCODE: $000007FE VOL: 0
;PCODE: $000007FF VOL: 0
;PCODE: $00000800 VOL: 0
;PCODE: $00000801 VOL: 0
;PCODE: $00000802 VOL: 0
;PCODE: $00000803 VOL: 0
;PCODE: $00000804 VOL: 0
;PCODE: $00000805 VOL: 0
;PCODE: $00000806 VOL: 0
;PCODE: $00000807 VOL: 0
;PCODE: $00000808 VOL: 0
;PCODE: $00000809 VOL: 0
;PCODE: $0000080A VOL: 0
; 0000 020C     }
; 0000 020D     else
;PCODE: $0000080B VOL: 0
;PCODE: $0000080C VOL: 0
; 0000 020E     {
; 0000 020F         a = min/10;
;PCODE: $0000080D VOL: 0
;PCODE: $0000080E VOL: 0
;PCODE: $0000080F VOL: 0
;PCODE: $00000810 VOL: 0
; 0000 0210         min -= a*10;
;PCODE: $00000811 VOL: 0
;PCODE: $00000812 VOL: 0
;PCODE: $00000813 VOL: 0
;PCODE: $00000814 VOL: 0
;PCODE: $00000815 VOL: 0
; 0000 0211         drawCharZo(x,y,0x30+a,1, zoom);
;PCODE: $00000816 VOL: 0
;PCODE: $00000817 VOL: 0
;PCODE: $00000818 VOL: 0
;PCODE: $00000819 VOL: 0
;PCODE: $0000081A VOL: 0
;PCODE: $0000081B VOL: 0
;PCODE: $0000081C VOL: 0
;PCODE: $0000081D VOL: 0
;PCODE: $0000081E VOL: 0
;PCODE: $0000081F VOL: 0
;PCODE: $00000820 VOL: 0
; 0000 0212         drawCharZo(x+6*zoom,y,0x30+min,1, zoom);
;PCODE: $00000821 VOL: 0
;PCODE: $00000822 VOL: 0
;PCODE: $00000823 VOL: 0
;PCODE: $00000824 VOL: 0
;PCODE: $00000825 VOL: 0
;PCODE: $00000826 VOL: 0
;PCODE: $00000827 VOL: 0
;PCODE: $00000828 VOL: 0
;PCODE: $00000829 VOL: 0
;PCODE: $0000082A VOL: 0
;PCODE: $0000082B VOL: 0
;PCODE: $0000082C VOL: 0
;PCODE: $0000082D VOL: 0
;PCODE: $0000082E VOL: 0
;PCODE: $0000082F VOL: 0
; 0000 0213     }
;PCODE: $00000830 VOL: 0
; 0000 0214     drawCharZ(x+12*zoom,y,':',1, zoom);
;PCODE: $00000831 VOL: 0
;PCODE: $00000832 VOL: 0
;PCODE: $00000833 VOL: 0
;PCODE: $00000834 VOL: 0
;PCODE: $00000835 VOL: 0
;PCODE: $00000836 VOL: 0
;PCODE: $00000837 VOL: 0
;PCODE: $00000838 VOL: 0
;PCODE: $00000839 VOL: 0
;PCODE: $0000083A VOL: 0
;PCODE: $0000083B VOL: 0
;PCODE: $0000083C VOL: 0
;PCODE: $0000083D VOL: 0
;PCODE: $0000083E VOL: 0
; 0000 0215     if(sec<10)
;PCODE: $0000083F VOL: 0
;PCODE: $00000840 VOL: 0
;PCODE: $00000841 VOL: 0
; 0000 0216     {
; 0000 0217         drawCharZo(x+18*zoom,y,'0',1, zoom);
;PCODE: $00000842 VOL: 0
;PCODE: $00000843 VOL: 0
;PCODE: $00000844 VOL: 0
;PCODE: $00000845 VOL: 0
;PCODE: $00000846 VOL: 0
;PCODE: $00000847 VOL: 0
;PCODE: $00000848 VOL: 0
;PCODE: $00000849 VOL: 0
;PCODE: $0000084A VOL: 0
;PCODE: $0000084B VOL: 0
;PCODE: $0000084C VOL: 0
;PCODE: $0000084D VOL: 0
;PCODE: $0000084E VOL: 0
;PCODE: $0000084F VOL: 0
; 0000 0218         drawCharZo(x+24*zoom,y,0x30+sec,1, zoom);
;PCODE: $00000850 VOL: 0
;PCODE: $00000851 VOL: 0
;PCODE: $00000852 VOL: 0
;PCODE: $00000853 VOL: 0
;PCODE: $00000854 VOL: 0
;PCODE: $00000855 VOL: 0
;PCODE: $00000856 VOL: 0
;PCODE: $00000857 VOL: 0
;PCODE: $00000858 VOL: 0
;PCODE: $00000859 VOL: 0
;PCODE: $0000085A VOL: 0
;PCODE: $0000085B VOL: 0
;PCODE: $0000085C VOL: 0
;PCODE: $0000085D VOL: 0
;PCODE: $0000085E VOL: 0
; 0000 0219     }
; 0000 021A     else
;PCODE: $0000085F VOL: 0
;PCODE: $00000860 VOL: 0
; 0000 021B     {
; 0000 021C         a = sec/10;
;PCODE: $00000861 VOL: 0
;PCODE: $00000862 VOL: 0
;PCODE: $00000863 VOL: 0
;PCODE: $00000864 VOL: 0
; 0000 021D         sec -= a*10;
;PCODE: $00000865 VOL: 0
;PCODE: $00000866 VOL: 0
;PCODE: $00000867 VOL: 0
;PCODE: $00000868 VOL: 0
;PCODE: $00000869 VOL: 0
;PCODE: $0000086A VOL: 0
; 0000 021E         drawCharZo(x+18*zoom,y,0x30+a,1, zoom);
;PCODE: $0000086B VOL: 0
;PCODE: $0000086C VOL: 0
;PCODE: $0000086D VOL: 0
;PCODE: $0000086E VOL: 0
;PCODE: $0000086F VOL: 0
;PCODE: $00000870 VOL: 0
;PCODE: $00000871 VOL: 0
;PCODE: $00000872 VOL: 0
;PCODE: $00000873 VOL: 0
;PCODE: $00000874 VOL: 0
;PCODE: $00000875 VOL: 0
;PCODE: $00000876 VOL: 0
;PCODE: $00000877 VOL: 0
;PCODE: $00000878 VOL: 0
;PCODE: $00000879 VOL: 0
; 0000 021F         drawCharZo(x+24*zoom,y,0x30+sec,1, zoom);
;PCODE: $0000087A VOL: 0
;PCODE: $0000087B VOL: 0
;PCODE: $0000087C VOL: 0
;PCODE: $0000087D VOL: 0
;PCODE: $0000087E VOL: 0
;PCODE: $0000087F VOL: 0
;PCODE: $00000880 VOL: 0
;PCODE: $00000881 VOL: 0
;PCODE: $00000882 VOL: 0
;PCODE: $00000883 VOL: 0
;PCODE: $00000884 VOL: 0
;PCODE: $00000885 VOL: 0
;PCODE: $00000886 VOL: 0
;PCODE: $00000887 VOL: 0
;PCODE: $00000888 VOL: 0
; 0000 0220     }
;PCODE: $00000889 VOL: 0
; 0000 0221 
; 0000 0222 }
;PCODE: $0000088A VOL: 0
;PCODE: $0000088B VOL: 0
;PCODE: $0000088C VOL: 0
;PCODE: $0000088D VOL: 0
;
;
;
;int vibor(void)
; 0000 0227 {
;PCODE: $0000088E VOL: 0
;PCODE: $0000088F VOL: 0
; 0000 0228 flag0 = 1;
;PCODE: $00000890 VOL: 0
;PCODE: $00000891 VOL: 0
; 0000 0229 j=-2;
;PCODE: $00000892 VOL: 0
;PCODE: $00000893 VOL: 0
; 0000 022A   while (flag0)
;PCODE: $00000894 VOL: 0
;PCODE: $00000895 VOL: 0
;PCODE: $00000896 VOL: 0
;PCODE: $00000897 VOL: 0
; 0000 022B   {
; 0000 022C     timer=0;
;PCODE: $00000898 VOL: 0
;PCODE: $00000899 VOL: 0
; 0000 022D     if(!dob)
;PCODE: $0000089A VOL: 0
;PCODE: $0000089B VOL: 0
;PCODE: $0000089C VOL: 0
; 0000 022E     {
; 0000 022F         delay_ms(200);
;PCODE: $0000089D VOL: 0
;PCODE: $0000089E VOL: 0
;PCODE: $0000089F VOL: 0
; 0000 0230         while(!dob& timer++<100000);
;PCODE: $000008A0 VOL: 0
;PCODE: $000008A1 VOL: 0
;PCODE: $000008A2 VOL: 0
;PCODE: $000008A3 VOL: 0
;PCODE: $000008A4 VOL: 0
;PCODE: $000008A5 VOL: 0
;PCODE: $000008A6 VOL: 0
;PCODE: $000008A7 VOL: 0
;PCODE: $000008A8 VOL: 0
;PCODE: $000008A9 VOL: 0
;PCODE: $000008AA VOL: 0
;PCODE: $000008AB VOL: 0
;PCODE: $000008AC VOL: 0
;PCODE: $000008AD VOL: 0
;PCODE: $000008AE VOL: 0
;PCODE: $000008AF VOL: 0
; 0000 0231          for(o=0;o<32;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $000008B0 VOL: 0
;PCODE: $000008B1 VOL: 0
;PCODE: $000008B2 VOL: 0
;PCODE: $000008B3 VOL: 0
;PCODE: $000008B4 VOL: 0
;PCODE: $000008B5 VOL: 0
;PCODE: $000008B6 VOL: 0
;PCODE: $000008B7 VOL: 0
;PCODE: $000008B8 VOL: 0
;PCODE: $000008B9 VOL: 0
;PCODE: $000008BA VOL: 0
;PCODE: $000008BB VOL: 0
;PCODE: $000008BC VOL: 0
;PCODE: $000008BD VOL: 0
;PCODE: $000008BE VOL: 0
;PCODE: $000008BF VOL: 0
;PCODE: $000008C0 VOL: 0
;PCODE: $000008C1 VOL: 0
;PCODE: $000008C2 VOL: 0
;PCODE: $000008C3 VOL: 0
;PCODE: $000008C4 VOL: 0
; 0000 0232         j++;
;PCODE: $000008C5 VOL: 0
;PCODE: $000008C6 VOL: 0
;PCODE: $000008C7 VOL: 0
; 0000 0233     }
; 0000 0234     if(!ubr)
;PCODE: $000008C8 VOL: 0
;PCODE: $000008C9 VOL: 0
;PCODE: $000008CA VOL: 0
;PCODE: $000008CB VOL: 0
; 0000 0235     {
; 0000 0236         delay_ms(200);
;PCODE: $000008CC VOL: 0
;PCODE: $000008CD VOL: 0
;PCODE: $000008CE VOL: 0
; 0000 0237         while(!ubr & timer++<100000) ;
;PCODE: $000008CF VOL: 0
;PCODE: $000008D0 VOL: 0
;PCODE: $000008D1 VOL: 0
;PCODE: $000008D2 VOL: 0
;PCODE: $000008D3 VOL: 0
;PCODE: $000008D4 VOL: 0
;PCODE: $000008D5 VOL: 0
;PCODE: $000008D6 VOL: 0
;PCODE: $000008D7 VOL: 0
;PCODE: $000008D8 VOL: 0
;PCODE: $000008D9 VOL: 0
;PCODE: $000008DA VOL: 0
;PCODE: $000008DB VOL: 0
;PCODE: $000008DC VOL: 0
;PCODE: $000008DD VOL: 0
;PCODE: $000008DE VOL: 0
; 0000 0238          for(o=0;o<32;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $000008DF VOL: 0
;PCODE: $000008E0 VOL: 0
;PCODE: $000008E1 VOL: 0
;PCODE: $000008E2 VOL: 0
;PCODE: $000008E3 VOL: 0
;PCODE: $000008E4 VOL: 0
;PCODE: $000008E5 VOL: 0
;PCODE: $000008E6 VOL: 0
;PCODE: $000008E7 VOL: 0
;PCODE: $000008E8 VOL: 0
;PCODE: $000008E9 VOL: 0
;PCODE: $000008EA VOL: 0
;PCODE: $000008EB VOL: 0
;PCODE: $000008EC VOL: 0
;PCODE: $000008ED VOL: 0
;PCODE: $000008EE VOL: 0
;PCODE: $000008EF VOL: 0
;PCODE: $000008F0 VOL: 0
;PCODE: $000008F1 VOL: 0
;PCODE: $000008F2 VOL: 0
;PCODE: $000008F3 VOL: 0
; 0000 0239         if (timer>=100000) flag0 = 0;
;PCODE: $000008F4 VOL: 0
;PCODE: $000008F5 VOL: 0
;PCODE: $000008F6 VOL: 0
;PCODE: $000008F7 VOL: 0
;PCODE: $000008F8 VOL: 0
; 0000 023A         else j--;
;PCODE: $000008F9 VOL: 0
;PCODE: $000008FA VOL: 0
;PCODE: $000008FB VOL: 0
;PCODE: $000008FC VOL: 0
;PCODE: $000008FD VOL: 0
; 0000 023B     }
;PCODE: $000008FE VOL: 0
; 0000 023C     if(j > 42) j = -2;
;PCODE: $000008FF VOL: 0
;PCODE: $00000900 VOL: 0
;PCODE: $00000901 VOL: 0
;PCODE: $00000902 VOL: 0
;PCODE: $00000903 VOL: 0
;PCODE: $00000904 VOL: 0
; 0000 023D     if(j<-2) j = 42;
;PCODE: $00000905 VOL: 0
;PCODE: $00000906 VOL: 0
;PCODE: $00000907 VOL: 0
;PCODE: $00000908 VOL: 0
;PCODE: $00000909 VOL: 0
;PCODE: $0000090A VOL: 0
; 0000 023E     clearDisplay();
;PCODE: $0000090B VOL: 0
;PCODE: $0000090C VOL: 0
; 0000 023F     for(i = 0 ; i < 2 ; i++)
;PCODE: $0000090D VOL: 0
;PCODE: $0000090E VOL: 0
;PCODE: $0000090F VOL: 0
;PCODE: $00000910 VOL: 0
;PCODE: $00000911 VOL: 0
;PCODE: $00000912 VOL: 0
;PCODE: $00000913 VOL: 0
;PCODE: $00000914 VOL: 0
;PCODE: $00000915 VOL: 0
; 0000 0240     {
; 0000 0241         for (n = 0; n < 21; n++)
;PCODE: $00000916 VOL: 0
;PCODE: $00000917 VOL: 0
;PCODE: $00000918 VOL: 0
;PCODE: $00000919 VOL: 0
;PCODE: $0000091A VOL: 0
;PCODE: $0000091B VOL: 0
;PCODE: $0000091C VOL: 0
;PCODE: $0000091D VOL: 0
;PCODE: $0000091E VOL: 0
; 0000 0242         {
; 0000 0243            if((j+i) < 45 & (j+i) >= 0) drawChar(6*n,i,bolezni[j+i+ubr-dob][n]);
;PCODE: $0000091F VOL: 0
;PCODE: $00000920 VOL: 0
;PCODE: $00000921 VOL: 0
;PCODE: $00000922 VOL: 0
;PCODE: $00000923 VOL: 0
;PCODE: $00000924 VOL: 0
;PCODE: $00000925 VOL: 0
;PCODE: $00000926 VOL: 0
;PCODE: $00000927 VOL: 0
;PCODE: $00000928 VOL: 0
;PCODE: $00000929 VOL: 0
;PCODE: $0000092A VOL: 0
;PCODE: $0000092B VOL: 0
;PCODE: $0000092C VOL: 0
;PCODE: $0000092D VOL: 0
;PCODE: $0000092E VOL: 0
;PCODE: $0000092F VOL: 0
;PCODE: $00000930 VOL: 0
;PCODE: $00000931 VOL: 0
;PCODE: $00000932 VOL: 0
;PCODE: $00000933 VOL: 0
;PCODE: $00000934 VOL: 0
;PCODE: $00000935 VOL: 0
;PCODE: $00000936 VOL: 0
;PCODE: $00000937 VOL: 0
;PCODE: $00000938 VOL: 0
;PCODE: $00000939 VOL: 0
;PCODE: $0000093A VOL: 0
;PCODE: $0000093B VOL: 0
;PCODE: $0000093C VOL: 0
;PCODE: $0000093D VOL: 0
;PCODE: $0000093E VOL: 0
;PCODE: $0000093F VOL: 0
; 0000 0244         }
;PCODE: $00000940 VOL: 0
;PCODE: $00000941 VOL: 0
;PCODE: $00000942 VOL: 0
;PCODE: $00000943 VOL: 0
;PCODE: $00000944 VOL: 0
;PCODE: $00000945 VOL: 0
;PCODE: $00000946 VOL: 0
; 0000 0245     }
;PCODE: $00000947 VOL: 0
;PCODE: $00000948 VOL: 0
;PCODE: $00000949 VOL: 0
;PCODE: $0000094A VOL: 0
;PCODE: $0000094B VOL: 0
;PCODE: $0000094C VOL: 0
; 0000 0246     if(!dob | !ubr)   for (n = 0; n < 11; n++) if((j+i) < 45 & (j+i) >= 0) drawCharZ(12*n,16,bolezni[j+2+ ubr][n],1,2);
;PCODE: $0000094D VOL: 0
;PCODE: $0000094E VOL: 0
;PCODE: $0000094F VOL: 0
;PCODE: $00000950 VOL: 0
;PCODE: $00000951 VOL: 0
;PCODE: $00000952 VOL: 0
;PCODE: $00000953 VOL: 0
;PCODE: $00000954 VOL: 0
;PCODE: $00000955 VOL: 0
;PCODE: $00000956 VOL: 0
;PCODE: $00000957 VOL: 0
;PCODE: $00000958 VOL: 0
;PCODE: $00000959 VOL: 0
;PCODE: $0000095A VOL: 0
;PCODE: $0000095B VOL: 0
;PCODE: $0000095C VOL: 0
;PCODE: $0000095D VOL: 0
;PCODE: $0000095E VOL: 0
;PCODE: $0000095F VOL: 0
;PCODE: $00000960 VOL: 0
;PCODE: $00000961 VOL: 0
;PCODE: $00000962 VOL: 0
;PCODE: $00000963 VOL: 0
;PCODE: $00000964 VOL: 0
;PCODE: $00000965 VOL: 0
;PCODE: $00000966 VOL: 0
;PCODE: $00000967 VOL: 0
;PCODE: $00000968 VOL: 0
;PCODE: $00000969 VOL: 0
;PCODE: $0000096A VOL: 0
;PCODE: $0000096B VOL: 0
;PCODE: $0000096C VOL: 0
;PCODE: $0000096D VOL: 0
;PCODE: $0000096E VOL: 0
;PCODE: $0000096F VOL: 0
;PCODE: $00000970 VOL: 0
;PCODE: $00000971 VOL: 0
;PCODE: $00000972 VOL: 0
;PCODE: $00000973 VOL: 0
;PCODE: $00000974 VOL: 0
;PCODE: $00000975 VOL: 0
;PCODE: $00000976 VOL: 0
;PCODE: $00000977 VOL: 0
;PCODE: $00000978 VOL: 0
;PCODE: $00000979 VOL: 0
;PCODE: $0000097A VOL: 0
;PCODE: $0000097B VOL: 0
;PCODE: $0000097C VOL: 0
;PCODE: $0000097D VOL: 0
; 0000 0247     for(i = 4 ; i < 7 ; i++)
;PCODE: $0000097E VOL: 0
;PCODE: $0000097F VOL: 0
;PCODE: $00000980 VOL: 0
;PCODE: $00000981 VOL: 0
;PCODE: $00000982 VOL: 0
;PCODE: $00000983 VOL: 0
;PCODE: $00000984 VOL: 0
;PCODE: $00000985 VOL: 0
;PCODE: $00000986 VOL: 0
;PCODE: $00000987 VOL: 0
;PCODE: $00000988 VOL: 0
;PCODE: $00000989 VOL: 0
;PCODE: $0000098A VOL: 0
;PCODE: $0000098B VOL: 0
;PCODE: $0000098C VOL: 0
;PCODE: $0000098D VOL: 0
;PCODE: $0000098E VOL: 0
;PCODE: $0000098F VOL: 0
; 0000 0248     {
; 0000 0249         for (n = 0; n < 21; n++)
;PCODE: $00000990 VOL: 0
;PCODE: $00000991 VOL: 0
;PCODE: $00000992 VOL: 0
;PCODE: $00000993 VOL: 0
;PCODE: $00000994 VOL: 0
;PCODE: $00000995 VOL: 0
;PCODE: $00000996 VOL: 0
;PCODE: $00000997 VOL: 0
;PCODE: $00000998 VOL: 0
; 0000 024A         {
; 0000 024B            if((j+i) < 45) drawChar(6*n,i,bolezni[j+i-1+ubr-dob][n]);
;PCODE: $00000999 VOL: 0
;PCODE: $0000099A VOL: 0
;PCODE: $0000099B VOL: 0
;PCODE: $0000099C VOL: 0
;PCODE: $0000099D VOL: 0
;PCODE: $0000099E VOL: 0
;PCODE: $0000099F VOL: 0
;PCODE: $000009A0 VOL: 0
;PCODE: $000009A1 VOL: 0
;PCODE: $000009A2 VOL: 0
;PCODE: $000009A3 VOL: 0
;PCODE: $000009A4 VOL: 0
;PCODE: $000009A5 VOL: 0
;PCODE: $000009A6 VOL: 0
;PCODE: $000009A7 VOL: 0
;PCODE: $000009A8 VOL: 0
;PCODE: $000009A9 VOL: 0
;PCODE: $000009AA VOL: 0
;PCODE: $000009AB VOL: 0
;PCODE: $000009AC VOL: 0
;PCODE: $000009AD VOL: 0
;PCODE: $000009AE VOL: 0
;PCODE: $000009AF VOL: 0
;PCODE: $000009B0 VOL: 0
;PCODE: $000009B1 VOL: 0
;PCODE: $000009B2 VOL: 0
;PCODE: $000009B3 VOL: 0
;PCODE: $000009B4 VOL: 0
; 0000 024C         }
;PCODE: $000009B5 VOL: 0
;PCODE: $000009B6 VOL: 0
;PCODE: $000009B7 VOL: 0
;PCODE: $000009B8 VOL: 0
;PCODE: $000009B9 VOL: 0
;PCODE: $000009BA VOL: 0
;PCODE: $000009BB VOL: 0
; 0000 024D     }
;PCODE: $000009BC VOL: 0
;PCODE: $000009BD VOL: 0
;PCODE: $000009BE VOL: 0
;PCODE: $000009BF VOL: 0
;PCODE: $000009C0 VOL: 0
;PCODE: $000009C1 VOL: 0
; 0000 024E     display(0,0,127,7);
;PCODE: $000009C2 VOL: 0
;PCODE: $000009C3 VOL: 0
;PCODE: $000009C4 VOL: 0
;PCODE: $000009C5 VOL: 0
;PCODE: $000009C6 VOL: 0
;PCODE: $000009C7 VOL: 0
;PCODE: $000009C8 VOL: 0
;PCODE: $000009C9 VOL: 0
;PCODE: $000009CA VOL: 0
; 0000 024F     for (i = 0 ; i < 102 ; i++)
;PCODE: $000009CB VOL: 0
;PCODE: $000009CC VOL: 0
;PCODE: $000009CD VOL: 0
;PCODE: $000009CE VOL: 0
;PCODE: $000009CF VOL: 0
;PCODE: $000009D0 VOL: 0
;PCODE: $000009D1 VOL: 0
;PCODE: $000009D2 VOL: 0
;PCODE: $000009D3 VOL: 0
; 0000 0250     {
; 0000 0251     //
; 0000 0252         for(m = 12; m >= 0; m-=2)
;PCODE: $000009D4 VOL: 0
;PCODE: $000009D5 VOL: 0
;PCODE: $000009D6 VOL: 0
;PCODE: $000009D7 VOL: 0
;PCODE: $000009D8 VOL: 0
;PCODE: $000009D9 VOL: 0
;PCODE: $000009DA VOL: 0
;PCODE: $000009DB VOL: 0
;PCODE: $000009DC VOL: 0
; 0000 0253         {
; 0000 0254 //      //      delay_ms(10);
; 0000 0255             for (n = 0; n < 10; n++)
;PCODE: $000009DD VOL: 0
;PCODE: $000009DE VOL: 0
;PCODE: $000009DF VOL: 0
;PCODE: $000009E0 VOL: 0
;PCODE: $000009E1 VOL: 0
;PCODE: $000009E2 VOL: 0
;PCODE: $000009E3 VOL: 0
;PCODE: $000009E4 VOL: 0
;PCODE: $000009E5 VOL: 0
; 0000 0256             {
; 0000 0257         //               clearDisplay();
; 0000 0258 //
; 0000 0259                     if ((n+i)>9)  drawCharZo(m+12*n,16,bolezni[j+2][n+i-10],1,2);
;PCODE: $000009E6 VOL: 0
;PCODE: $000009E7 VOL: 0
;PCODE: $000009E8 VOL: 0
;PCODE: $000009E9 VOL: 0
;PCODE: $000009EA VOL: 0
;PCODE: $000009EB VOL: 0
;PCODE: $000009EC VOL: 0
;PCODE: $000009ED VOL: 0
;PCODE: $000009EE VOL: 0
;PCODE: $000009EF VOL: 0
;PCODE: $000009F0 VOL: 0
;PCODE: $000009F1 VOL: 0
;PCODE: $000009F2 VOL: 0
;PCODE: $000009F3 VOL: 0
;PCODE: $000009F4 VOL: 0
;PCODE: $000009F5 VOL: 0
;PCODE: $000009F6 VOL: 0
;PCODE: $000009F7 VOL: 0
;PCODE: $000009F8 VOL: 0
;PCODE: $000009F9 VOL: 0
;PCODE: $000009FA VOL: 0
;PCODE: $000009FB VOL: 0
;PCODE: $000009FC VOL: 0
;PCODE: $000009FD VOL: 0
;PCODE: $000009FE VOL: 0
;PCODE: $000009FF VOL: 0
;PCODE: $00000A00 VOL: 0
;PCODE: $00000A01 VOL: 0
; 0000 025A                     else  for(k = 0; k < 12; k++)
;PCODE: $00000A02 VOL: 0
;PCODE: $00000A03 VOL: 0
;PCODE: $00000A04 VOL: 0
;PCODE: $00000A05 VOL: 0
;PCODE: $00000A06 VOL: 0
;PCODE: $00000A07 VOL: 0
;PCODE: $00000A08 VOL: 0
;PCODE: $00000A09 VOL: 0
;PCODE: $00000A0A VOL: 0
;PCODE: $00000A0B VOL: 0
;PCODE: $00000A0C VOL: 0
; 0000 025B                     {
; 0000 025C                         buffer[256+11-m+12*n+k] = buffer[256+12-m+12*n+k];
;PCODE: $00000A0D VOL: 0
;PCODE: $00000A0E VOL: 0
;PCODE: $00000A0F VOL: 0
;PCODE: $00000A10 VOL: 0
;PCODE: $00000A11 VOL: 0
;PCODE: $00000A12 VOL: 0
;PCODE: $00000A13 VOL: 0
;PCODE: $00000A14 VOL: 0
;PCODE: $00000A15 VOL: 0
;PCODE: $00000A16 VOL: 0
;PCODE: $00000A17 VOL: 0
;PCODE: $00000A18 VOL: 0
;PCODE: $00000A19 VOL: 0
;PCODE: $00000A1A VOL: 0
;PCODE: $00000A1B VOL: 0
;PCODE: $00000A1C VOL: 0
;PCODE: $00000A1D VOL: 0
;PCODE: $00000A1E VOL: 0
;PCODE: $00000A1F VOL: 0
;PCODE: $00000A20 VOL: 0
;PCODE: $00000A21 VOL: 0
;PCODE: $00000A22 VOL: 0
; 0000 025D                         buffer[384+11-m+12*n+k] = buffer[384+12-m+12*n+k];
;PCODE: $00000A23 VOL: 0
;PCODE: $00000A24 VOL: 0
;PCODE: $00000A25 VOL: 0
;PCODE: $00000A26 VOL: 0
;PCODE: $00000A27 VOL: 0
;PCODE: $00000A28 VOL: 0
;PCODE: $00000A29 VOL: 0
;PCODE: $00000A2A VOL: 0
;PCODE: $00000A2B VOL: 0
;PCODE: $00000A2C VOL: 0
;PCODE: $00000A2D VOL: 0
;PCODE: $00000A2E VOL: 0
;PCODE: $00000A2F VOL: 0
;PCODE: $00000A30 VOL: 0
;PCODE: $00000A31 VOL: 0
;PCODE: $00000A32 VOL: 0
;PCODE: $00000A33 VOL: 0
;PCODE: $00000A34 VOL: 0
;PCODE: $00000A35 VOL: 0
;PCODE: $00000A36 VOL: 0
;PCODE: $00000A37 VOL: 0
;PCODE: $00000A38 VOL: 0
; 0000 025E                     }
;PCODE: $00000A39 VOL: 0
;PCODE: $00000A3A VOL: 0
;PCODE: $00000A3B VOL: 0
;PCODE: $00000A3C VOL: 0
;PCODE: $00000A3D VOL: 0
;PCODE: $00000A3E VOL: 0
;PCODE: $00000A3F VOL: 0
; 0000 025F                     if(bolezni[j+2][i+n-11]=='.')
;PCODE: $00000A40 VOL: 0
;PCODE: $00000A41 VOL: 0
;PCODE: $00000A42 VOL: 0
;PCODE: $00000A43 VOL: 0
;PCODE: $00000A44 VOL: 0
;PCODE: $00000A45 VOL: 0
;PCODE: $00000A46 VOL: 0
;PCODE: $00000A47 VOL: 0
;PCODE: $00000A48 VOL: 0
;PCODE: $00000A49 VOL: 0
;PCODE: $00000A4A VOL: 0
;PCODE: $00000A4B VOL: 0
;PCODE: $00000A4C VOL: 0
; 0000 0260                     {
; 0000 0261                         i = 0; //else i = 102;// m = 0;
;PCODE: $00000A4D VOL: 0
; 0000 0262                     }
; 0000 0263                     if (!dob | !ubr) i = 102;
;PCODE: $00000A4E VOL: 0
;PCODE: $00000A4F VOL: 0
;PCODE: $00000A50 VOL: 0
;PCODE: $00000A51 VOL: 0
;PCODE: $00000A52 VOL: 0
;PCODE: $00000A53 VOL: 0
;PCODE: $00000A54 VOL: 0
;PCODE: $00000A55 VOL: 0
;PCODE: $00000A56 VOL: 0
; 0000 0264             }
;PCODE: $00000A57 VOL: 0
;PCODE: $00000A58 VOL: 0
;PCODE: $00000A59 VOL: 0
;PCODE: $00000A5A VOL: 0
;PCODE: $00000A5B VOL: 0
;PCODE: $00000A5C VOL: 0
;PCODE: $00000A5D VOL: 0
; 0000 0265             if (dob & ubr) display(0,2,127,3);
;PCODE: $00000A5E VOL: 0
;PCODE: $00000A5F VOL: 0
;PCODE: $00000A60 VOL: 0
;PCODE: $00000A61 VOL: 0
;PCODE: $00000A62 VOL: 0
;PCODE: $00000A63 VOL: 0
;PCODE: $00000A64 VOL: 0
;PCODE: $00000A65 VOL: 0
;PCODE: $00000A66 VOL: 0
;PCODE: $00000A67 VOL: 0
;PCODE: $00000A68 VOL: 0
;PCODE: $00000A69 VOL: 0
;PCODE: $00000A6A VOL: 0
;PCODE: $00000A6B VOL: 0
;PCODE: $00000A6C VOL: 0
; 0000 0266 
; 0000 0267         }
;PCODE: $00000A6D VOL: 0
;PCODE: $00000A6E VOL: 0
;PCODE: $00000A6F VOL: 0
;PCODE: $00000A70 VOL: 0
;PCODE: $00000A71 VOL: 0
;PCODE: $00000A72 VOL: 0
;PCODE: $00000A73 VOL: 0
; 0000 0268 //     if(i == 0) delay_ms(300);
; 0000 0269 //     if(i == 101) delay_ms(500);
; 0000 026A 
; 0000 026B       //  drawString(0,0,bol0,41);
; 0000 026C     //    display(0,0,63,1);
; 0000 026D     }
;PCODE: $00000A74 VOL: 0
;PCODE: $00000A75 VOL: 0
;PCODE: $00000A76 VOL: 0
;PCODE: $00000A77 VOL: 0
;PCODE: $00000A78 VOL: 0
;PCODE: $00000A79 VOL: 0
; 0000 026E 
; 0000 026F   }
;PCODE: $00000A7A VOL: 0
;PCODE: $00000A7B VOL: 0
; 0000 0270   return (j+2);
;PCODE: $00000A7C VOL: 0
;PCODE: $00000A7D VOL: 0
;PCODE: $00000A7E VOL: 0
; 0000 0271 }
;PCODE: $00000A7F VOL: 0
;
;
;
;
;void main(void)
; 0000 0277 {
;PCODE: $00000A80 VOL: 0
; 0000 0278 // Declare your local variables here
; 0000 0279 
; 0000 027A // Crystal Oscillator division factor: 1
; 0000 027B #pragma optsize-
; 0000 027C CLKPR=(1<<CLKPCE);
;PCODE: $00000A81 VOL: 0
;PCODE: $00000A82 VOL: 0
; 0000 027D CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $00000A83 VOL: 0
;PCODE: $00000A84 VOL: 0
; 0000 027E #ifdef _OPTIMIZE_SIZE_
; 0000 027F #pragma optsize+
; 0000 0280 #endif
; 0000 0281 
; 0000 0282 // Input/Output Ports initialization
; 0000 0283 // Port B initialization
; 0000 0284 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=In Bit1=In Bit0=In
; 0000 0285 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (1<<DDB1) | (0<<DDB0);
;PCODE: $00000A85 VOL: 0
;PCODE: $00000A86 VOL: 0
; 0000 0286 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=T Bit1=T Bit0=T
; 0000 0287 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000A87 VOL: 0
;PCODE: $00000A88 VOL: 0
; 0000 0288 
; 0000 0289 // Port C initialization
; 0000 028A // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 028B DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (1<<DDC1) | (0<<DDC0);
;PCODE: $00000A89 VOL: 0
;PCODE: $00000A8A VOL: 0
; 0000 028C // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 028D PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (1<<PORTC0);
;PCODE: $00000A8B VOL: 0
;PCODE: $00000A8C VOL: 0
; 0000 028E 
; 0000 028F // Port D initialization
; 0000 0290 // State: Bit7=T Bit6=0 Bit5=0 Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0291 PORTD=(0<<PORTD7) | (1<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $00000A8D VOL: 0
;PCODE: $00000A8E VOL: 0
; 0000 0292 // Function: Bit7=In Bit6=Out Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0293 DDRD=(0<<DDD7) | (1<<DDD6) | (1<<DDD5) | (0<<DDD4) | (1<<DDD3) | (0<<DDD2) | (0<<DDD1) | (1<<DDD0);
;PCODE: $00000A8F VOL: 0
;PCODE: $00000A90 VOL: 0
; 0000 0294 
; 0000 0295 // Timer/Counter 0 initialization
; 0000 0296 // Clock source: System Clock
; 0000 0297 // Clock value: 16000,000 kHz
; 0000 0298 // Mode: Fast PWM top=0xFF
; 0000 0299 // OC0A output: Inverted PWM
; 0000 029A // OC0B output: Non-Inverted PWM
; 0000 029B // Timer Period: 0,016 ms
; 0000 029C // Output Pulse(s):
; 0000 029D // OC0A Period: 0,016 ms Width: 0,016 ms
; 0000 029E // OC0B Period: 0,016 ms Width: 0 us
; 0000 029F TCCR0A=(1<<COM0A1) | (1<<COM0A0) | (1<<COM0B1) | (0<<COM0B0) | (1<<WGM01) | (1<<WGM00);
;PCODE: $00000A91 VOL: 0
;PCODE: $00000A92 VOL: 0
; 0000 02A0 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $00000A93 VOL: 0
;PCODE: $00000A94 VOL: 0
; 0000 02A1 TCNT0=0x00;
;PCODE: $00000A95 VOL: 0
;PCODE: $00000A96 VOL: 0
; 0000 02A2 OCR0A=0x00;
;PCODE: $00000A97 VOL: 0
;PCODE: $00000A98 VOL: 0
; 0000 02A3 OCR0B=0x00;
;PCODE: $00000A99 VOL: 0
;PCODE: $00000A9A VOL: 0
; 0000 02A4 
; 0000 02A5 
; 0000 02A6 // Timer/Counter 1 initialization
; 0000 02A7 // Clock source: System Clock
; 0000 02A8 // Clock value: 16000,000 kHz
; 0000 02A9 // Mode: Normal top=0xFFFF
; 0000 02AA // OC1A output: Disconnected
; 0000 02AB // OC1B output: Disconnected
; 0000 02AC // Noise Canceler: Off
; 0000 02AD // Input Capture on Falling Edge
; 0000 02AE // Timer Period: 1,9179 ms
; 0000 02AF // Timer1 Overflow Interrupt: On
; 0000 02B0 // Input Capture Interrupt: Off
; 0000 02B1 // Compare A Match Interrupt: Off
; 0000 02B2 // Compare B Match Interrupt: Off
; 0000 02B3 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000A9B VOL: 0
;PCODE: $00000A9C VOL: 0
; 0000 02B4 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $00000A9D VOL: 0
;PCODE: $00000A9E VOL: 0
; 0000 02B5 TCNT1H=0x88;
;PCODE: $00000A9F VOL: 0
;PCODE: $00000AA0 VOL: 0
; 0000 02B6 TCNT1L=0x22;
;PCODE: $00000AA1 VOL: 0
;PCODE: $00000AA2 VOL: 0
; 0000 02B7 ICR1H=0x00;
;PCODE: $00000AA3 VOL: 0
;PCODE: $00000AA4 VOL: 0
; 0000 02B8 ICR1L=0x00;
;PCODE: $00000AA5 VOL: 0
;PCODE: $00000AA6 VOL: 0
; 0000 02B9 OCR1AH=0x00;
;PCODE: $00000AA7 VOL: 0
;PCODE: $00000AA8 VOL: 0
; 0000 02BA OCR1AL=0x00;
;PCODE: $00000AA9 VOL: 0
;PCODE: $00000AAA VOL: 0
; 0000 02BB OCR1BH=0x00;
;PCODE: $00000AAB VOL: 0
;PCODE: $00000AAC VOL: 0
; 0000 02BC OCR1BL=0x00;
;PCODE: $00000AAD VOL: 0
;PCODE: $00000AAE VOL: 0
; 0000 02BD 
; 0000 02BE // Timer/Counter 2 initialization
; 0000 02BF // Clock source: System Clock
; 0000 02C0 // Clock value: 16000,000 kHz
; 0000 02C1 // Mode: Fast PWM top=0xFF
; 0000 02C2 // OC2A output: Inverted PWM
; 0000 02C3 // OC2B output: Non-Inverted PWM
; 0000 02C4 // Timer Period: 0,016 ms
; 0000 02C5 // Output Pulse(s):
; 0000 02C6 // OC2A Period: 0,016 ms Width: 0,016 ms
; 0000 02C7 // OC2B Period: 0,016 ms Width: 0 us
; 0000 02C8 ASSR=(0<<EXCLK) | (0<<AS2);
;PCODE: $00000AAF VOL: 0
;PCODE: $00000AB0 VOL: 0
; 0000 02C9 TCCR2A=(1<<COM2A1) | (1<<COM2A0) | (1<<COM2B1) | (0<<COM2B0) | (1<<WGM21) | (1<<WGM20);
;PCODE: $00000AB1 VOL: 0
;PCODE: $00000AB2 VOL: 0
; 0000 02CA TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (1<<CS20);
;PCODE: $00000AB3 VOL: 0
;PCODE: $00000AB4 VOL: 0
; 0000 02CB TCNT2=0x00;
;PCODE: $00000AB5 VOL: 0
;PCODE: $00000AB6 VOL: 0
; 0000 02CC OCR2A=0x00;
;PCODE: $00000AB7 VOL: 0
;PCODE: $00000AB8 VOL: 0
; 0000 02CD OCR2B=0x00;
;PCODE: $00000AB9 VOL: 0
;PCODE: $00000ABA VOL: 0
; 0000 02CE 
; 0000 02CF 
; 0000 02D0 // Timer/Counter 0 Interrupt(s) initialization
; 0000 02D1 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
;PCODE: $00000ABB VOL: 0
;PCODE: $00000ABC VOL: 0
; 0000 02D2 
; 0000 02D3 // Timer/Counter 1 Interrupt(s) initialization
; 0000 02D4 TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
;PCODE: $00000ABD VOL: 0
;PCODE: $00000ABE VOL: 0
; 0000 02D5 
; 0000 02D6 // Timer/Counter 2 Interrupt(s) initialization
; 0000 02D7 TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
;PCODE: $00000ABF VOL: 0
;PCODE: $00000AC0 VOL: 0
; 0000 02D8 
; 0000 02D9 
; 0000 02DA // External Interrupt(s) initialization
; 0000 02DB // INT0: On
; 0000 02DC // INT0 Mode: Falling Edge
; 0000 02DD // INT1: Off
; 0000 02DE // Interrupt on any change on pins PCINT0-7: Off
; 0000 02DF // Interrupt on any change on pins PCINT8-14: Off
; 0000 02E0 // Interrupt on any change on pins PCINT16-23: Off
; 0000 02E1 EICRA=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
;PCODE: $00000AC1 VOL: 0
;PCODE: $00000AC2 VOL: 0
; 0000 02E2 EIMSK=(0<<INT1) | (1<<INT0);
;PCODE: $00000AC3 VOL: 0
;PCODE: $00000AC4 VOL: 0
; 0000 02E3 EIFR=(0<<INTF1) | (1<<INTF0);
;PCODE: $00000AC5 VOL: 0
;PCODE: $00000AC6 VOL: 0
; 0000 02E4 PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
;PCODE: $00000AC7 VOL: 0
;PCODE: $00000AC8 VOL: 0
; 0000 02E5 
; 0000 02E6 // USART initialization
; 0000 02E7 // USART disabled
; 0000 02E8 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000AC9 VOL: 0
;PCODE: $00000ACA VOL: 0
; 0000 02E9 
; 0000 02EA // Analog Comparator initialization
; 0000 02EB // Analog Comparator: Off
; 0000 02EC // The Analog Comparator's positive input is
; 0000 02ED // connected to the AIN0 pin
; 0000 02EE // The Analog Comparator's negative input is
; 0000 02EF // connected to the AIN1 pin
; 0000 02F0 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000ACB VOL: 0
;PCODE: $00000ACC VOL: 0
; 0000 02F1 // Digital input buffer on AIN0: On
; 0000 02F2 // Digital input buffer on AIN1: On
; 0000 02F3 DIDR1=(0<<AIN0D) | (0<<AIN1D);
;PCODE: $00000ACD VOL: 0
;PCODE: $00000ACE VOL: 0
; 0000 02F4 
; 0000 02F5 // ADC initialization
; 0000 02F6 // ADC Clock frequency: 1000,000 kHz
; 0000 02F7 // ADC Voltage Reference: Int., cap. on AREF
; 0000 02F8 // ADC Auto Trigger Source: ADC Stopped
; 0000 02F9 // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
; 0000 02FA // ADC4: On, ADC5: On
; 0000 02FB DIDR0=(0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (0<<ADC1D) | (0<<ADC0D);
;PCODE: $00000ACF VOL: 0
;PCODE: $00000AD0 VOL: 0
; 0000 02FC ADMUX=ADC_VREF_TYPE;
;PCODE: $00000AD1 VOL: 0
;PCODE: $00000AD2 VOL: 0
; 0000 02FD ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000AD3 VOL: 0
;PCODE: $00000AD4 VOL: 0
; 0000 02FE ADCSRB=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000AD5 VOL: 0
;PCODE: $00000AD6 VOL: 0
; 0000 02FF 
; 0000 0300 
; 0000 0301 // SPI initialization
; 0000 0302 // SPI disabled
; 0000 0303 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000AD7 VOL: 0
;PCODE: $00000AD8 VOL: 0
; 0000 0304 
; 0000 0305 // TWI initialization
; 0000 0306 // TWI disabled
; 0000 0307 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000AD9 VOL: 0
;PCODE: $00000ADA VOL: 0
; 0000 0308 
; 0000 0309 // Global enable interrupts
; 0000 030A #asm("sei")
;PCODE: $00000ADB VOL: 0
	sei
;PCODE: $00000ADC VOL: 0
; 0000 030B //OCR0B=0xE0;
; 0000 030C for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000ADD VOL: 0
;PCODE: $00000ADE VOL: 0
;PCODE: $00000ADF VOL: 0
;PCODE: $00000AE0 VOL: 0
;PCODE: $00000AE1 VOL: 0
;PCODE: $00000AE2 VOL: 0
;PCODE: $00000AE3 VOL: 0
;PCODE: $00000AE4 VOL: 0
;PCODE: $00000AE5 VOL: 0
;PCODE: $00000AE6 VOL: 0
;PCODE: $00000AE7 VOL: 0
;PCODE: $00000AE8 VOL: 0
;PCODE: $00000AE9 VOL: 0
;PCODE: $00000AEA VOL: 0
;PCODE: $00000AEB VOL: 0
;PCODE: $00000AEC VOL: 0
;PCODE: $00000AED VOL: 0
;PCODE: $00000AEE VOL: 0
;PCODE: $00000AEF VOL: 0
;PCODE: $00000AF0 VOL: 0
;PCODE: $00000AF1 VOL: 0
; 0000 030D delay_ms(2);
;PCODE: $00000AF2 VOL: 0
;PCODE: $00000AF3 VOL: 0
;PCODE: $00000AF4 VOL: 0
; 0000 030E a3 = 1;
;PCODE: $00000AF5 VOL: 0
;PCODE: $00000AF6 VOL: 0
; 0000 030F tok0 = 0;
;PCODE: $00000AF7 VOL: 0
;PCODE: $00000AF8 VOL: 0
; 0000 0310 mod = 2;
;PCODE: $00000AF9 VOL: 0
;PCODE: $00000AFA VOL: 0
; 0000 0311 period = 10000;
;PCODE: $00000AFB VOL: 0
;PCODE: $00000AFC VOL: 0
; 0000 0312 //period = 10900;
; 0000 0313 initDisplay();
;PCODE: $00000AFD VOL: 0
; 0000 0314 zvuk = 1;
;PCODE: $00000AFE VOL: 0
;PCODE: $00000AFF VOL: 0
; 0000 0315 clearDisplay();
;PCODE: $00000B00 VOL: 0
; 0000 0316 tok = read_adc(0);
;PCODE: $00000B01 VOL: 0
;PCODE: $00000B02 VOL: 0
;PCODE: $00000B03 VOL: 0
; 0000 0317 zvuk = 0;
;PCODE: $00000B04 VOL: 0
;PCODE: $00000B05 VOL: 0
; 0000 0318 drawStringZ(0, 0, " Батарея:", 9, 1, 2);
;PCODE: $00000B06 VOL: 0
;PCODE: $00000B07 VOL: 0
;PCODE: $00000B08 VOL: 0
;PCODE: $00000B09 VOL: 0
;PCODE: $00000B0A VOL: 0
;PCODE: $00000B0B VOL: 0
;PCODE: $00000B0C VOL: 0
;PCODE: $00000B0D VOL: 0
;PCODE: $00000B0E VOL: 0
;PCODE: $00000B0F VOL: 0
;PCODE: $00000B10 VOL: 0
;PCODE: $00000B11 VOL: 0
;PCODE: $00000B12 VOL: 0
;PCODE: $00000B13 VOL: 0
; 0000 0319 ZnachZ(16,24,tok,3) ;
;PCODE: $00000B14 VOL: 0
;PCODE: $00000B15 VOL: 0
;PCODE: $00000B16 VOL: 0
;PCODE: $00000B17 VOL: 0
;PCODE: $00000B18 VOL: 0
;PCODE: $00000B19 VOL: 0
;PCODE: $00000B1A VOL: 0
;PCODE: $00000B1B VOL: 0
;PCODE: $00000B1C VOL: 0
; 0000 031A drawStringZ(16+24*3, 24, "v", 1, 1, 3);
;PCODE: $00000B1D VOL: 0
;PCODE: $00000B1E VOL: 0
;PCODE: $00000B1F VOL: 0
;PCODE: $00000B20 VOL: 0
;PCODE: $00000B21 VOL: 0
;PCODE: $00000B22 VOL: 0
;PCODE: $00000B23 VOL: 0
;PCODE: $00000B24 VOL: 0
;PCODE: $00000B25 VOL: 0
;PCODE: $00000B26 VOL: 0
;PCODE: $00000B27 VOL: 0
;PCODE: $00000B28 VOL: 0
;PCODE: $00000B29 VOL: 0
;PCODE: $00000B2A VOL: 0
; 0000 031B display(0,0,127,7);
;PCODE: $00000B2B VOL: 0
;PCODE: $00000B2C VOL: 0
;PCODE: $00000B2D VOL: 0
;PCODE: $00000B2E VOL: 0
;PCODE: $00000B2F VOL: 0
;PCODE: $00000B30 VOL: 0
;PCODE: $00000B31 VOL: 0
;PCODE: $00000B32 VOL: 0
;PCODE: $00000B33 VOL: 0
; 0000 031C delay_ms(2000);
;PCODE: $00000B34 VOL: 0
;PCODE: $00000B35 VOL: 0
; 0000 031D PORTC.0 = 0;
;PCODE: $00000B36 VOL: 0
;PCODE: $00000B37 VOL: 0
; 0000 031E //TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (1<<TOIE1);
; 0000 031F clearDisplay();
;PCODE: $00000B38 VOL: 0
; 0000 0320 drawStringZ(0, 0, "Выберите:", 9, 1, 2);
;PCODE: $00000B39 VOL: 0
;PCODE: $00000B3A VOL: 0
;PCODE: $00000B3B VOL: 0
;PCODE: $00000B3C VOL: 0
;PCODE: $00000B3D VOL: 0
;PCODE: $00000B3E VOL: 0
;PCODE: $00000B3F VOL: 0
;PCODE: $00000B40 VOL: 0
;PCODE: $00000B41 VOL: 0
;PCODE: $00000B42 VOL: 0
;PCODE: $00000B43 VOL: 0
;PCODE: $00000B44 VOL: 0
;PCODE: $00000B45 VOL: 0
;PCODE: $00000B46 VOL: 0
; 0000 0321 drawStringZ(0, 20, "Трансаир:-", 10, 1, 2);
;PCODE: $00000B47 VOL: 0
;PCODE: $00000B48 VOL: 0
;PCODE: $00000B49 VOL: 0
;PCODE: $00000B4A VOL: 0
;PCODE: $00000B4B VOL: 0
;PCODE: $00000B4C VOL: 0
;PCODE: $00000B4D VOL: 0
;PCODE: $00000B4E VOL: 0
;PCODE: $00000B4F VOL: 0
;PCODE: $00000B50 VOL: 0
;PCODE: $00000B51 VOL: 0
;PCODE: $00000B52 VOL: 0
;PCODE: $00000B53 VOL: 0
;PCODE: $00000B54 VOL: 0
; 0000 0322 drawStringZ(0, 40, "Медаптон:+", 10, 1, 2);
;PCODE: $00000B55 VOL: 0
;PCODE: $00000B56 VOL: 0
;PCODE: $00000B57 VOL: 0
;PCODE: $00000B58 VOL: 0
;PCODE: $00000B59 VOL: 0
;PCODE: $00000B5A VOL: 0
;PCODE: $00000B5B VOL: 0
;PCODE: $00000B5C VOL: 0
;PCODE: $00000B5D VOL: 0
;PCODE: $00000B5E VOL: 0
;PCODE: $00000B5F VOL: 0
;PCODE: $00000B60 VOL: 0
;PCODE: $00000B61 VOL: 0
;PCODE: $00000B62 VOL: 0
; 0000 0323 display(0,0,127,7);
;PCODE: $00000B63 VOL: 0
;PCODE: $00000B64 VOL: 0
;PCODE: $00000B65 VOL: 0
;PCODE: $00000B66 VOL: 0
;PCODE: $00000B67 VOL: 0
;PCODE: $00000B68 VOL: 0
;PCODE: $00000B69 VOL: 0
;PCODE: $00000B6A VOL: 0
;PCODE: $00000B6B VOL: 0
; 0000 0324 for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000B6C VOL: 0
;PCODE: $00000B6D VOL: 0
;PCODE: $00000B6E VOL: 0
;PCODE: $00000B6F VOL: 0
;PCODE: $00000B70 VOL: 0
;PCODE: $00000B71 VOL: 0
;PCODE: $00000B72 VOL: 0
;PCODE: $00000B73 VOL: 0
;PCODE: $00000B74 VOL: 0
;PCODE: $00000B75 VOL: 0
;PCODE: $00000B76 VOL: 0
;PCODE: $00000B77 VOL: 0
;PCODE: $00000B78 VOL: 0
;PCODE: $00000B79 VOL: 0
;PCODE: $00000B7A VOL: 0
;PCODE: $00000B7B VOL: 0
;PCODE: $00000B7C VOL: 0
;PCODE: $00000B7D VOL: 0
;PCODE: $00000B7E VOL: 0
;PCODE: $00000B7F VOL: 0
;PCODE: $00000B80 VOL: 0
; 0000 0325 while(ubr & dob & paus++<1000)
;PCODE: $00000B81 VOL: 0
;PCODE: $00000B82 VOL: 0
;PCODE: $00000B83 VOL: 0
;PCODE: $00000B84 VOL: 0
;PCODE: $00000B85 VOL: 0
;PCODE: $00000B86 VOL: 0
;PCODE: $00000B87 VOL: 0
;PCODE: $00000B88 VOL: 0
;PCODE: $00000B89 VOL: 0
;PCODE: $00000B8A VOL: 0
;PCODE: $00000B8B VOL: 0
;PCODE: $00000B8C VOL: 0
;PCODE: $00000B8D VOL: 0
;PCODE: $00000B8E VOL: 0
;PCODE: $00000B8F VOL: 0
;PCODE: $00000B90 VOL: 0
;PCODE: $00000B91 VOL: 0
; 0000 0326 {
; 0000 0327     delay_ms(10);
;PCODE: $00000B92 VOL: 0
;PCODE: $00000B93 VOL: 0
;PCODE: $00000B94 VOL: 0
; 0000 0328 
; 0000 0329 }
;PCODE: $00000B95 VOL: 0
;PCODE: $00000B96 VOL: 0
; 0000 032A for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000B97 VOL: 0
;PCODE: $00000B98 VOL: 0
;PCODE: $00000B99 VOL: 0
;PCODE: $00000B9A VOL: 0
;PCODE: $00000B9B VOL: 0
;PCODE: $00000B9C VOL: 0
;PCODE: $00000B9D VOL: 0
;PCODE: $00000B9E VOL: 0
;PCODE: $00000B9F VOL: 0
;PCODE: $00000BA0 VOL: 0
;PCODE: $00000BA1 VOL: 0
;PCODE: $00000BA2 VOL: 0
;PCODE: $00000BA3 VOL: 0
;PCODE: $00000BA4 VOL: 0
;PCODE: $00000BA5 VOL: 0
;PCODE: $00000BA6 VOL: 0
;PCODE: $00000BA7 VOL: 0
;PCODE: $00000BA8 VOL: 0
;PCODE: $00000BA9 VOL: 0
;PCODE: $00000BAA VOL: 0
;PCODE: $00000BAB VOL: 0
; 0000 032B clearDisplay();
;PCODE: $00000BAC VOL: 0
; 0000 032C delay_ms(50);
;PCODE: $00000BAD VOL: 0
;PCODE: $00000BAE VOL: 0
;PCODE: $00000BAF VOL: 0
; 0000 032D if(fubr)
;PCODE: $00000BB0 VOL: 0
;PCODE: $00000BB1 VOL: 0
;PCODE: $00000BB2 VOL: 0
; 0000 032E {
; 0000 032F     drawStringZ(0, 0, "Выбран", 6, 1, 3);
;PCODE: $00000BB3 VOL: 0
;PCODE: $00000BB4 VOL: 0
;PCODE: $00000BB5 VOL: 0
;PCODE: $00000BB6 VOL: 0
;PCODE: $00000BB7 VOL: 0
;PCODE: $00000BB8 VOL: 0
;PCODE: $00000BB9 VOL: 0
;PCODE: $00000BBA VOL: 0
;PCODE: $00000BBB VOL: 0
;PCODE: $00000BBC VOL: 0
;PCODE: $00000BBD VOL: 0
;PCODE: $00000BBE VOL: 0
;PCODE: $00000BBF VOL: 0
;PCODE: $00000BC0 VOL: 0
; 0000 0330     drawStringZ(0, 30, " Трансаир ", 10, 1, 2);
;PCODE: $00000BC1 VOL: 0
;PCODE: $00000BC2 VOL: 0
;PCODE: $00000BC3 VOL: 0
;PCODE: $00000BC4 VOL: 0
;PCODE: $00000BC5 VOL: 0
;PCODE: $00000BC6 VOL: 0
;PCODE: $00000BC7 VOL: 0
;PCODE: $00000BC8 VOL: 0
;PCODE: $00000BC9 VOL: 0
;PCODE: $00000BCA VOL: 0
;PCODE: $00000BCB VOL: 0
;PCODE: $00000BCC VOL: 0
;PCODE: $00000BCD VOL: 0
;PCODE: $00000BCE VOL: 0
; 0000 0331     reg1 = 1;
;PCODE: $00000BCF VOL: 0
;PCODE: $00000BD0 VOL: 0
; 0000 0332     fubr = 0;
;PCODE: $00000BD1 VOL: 0
;PCODE: $00000BD2 VOL: 0
;PCODE: $00000BD3 VOL: 0
; 0000 0333 }
; 0000 0334 else
;PCODE: $00000BD4 VOL: 0
;PCODE: $00000BD5 VOL: 0
; 0000 0335 {
; 0000 0336     drawStringZ(0, 0, "Выбран", 6, 1, 3);
;PCODE: $00000BD6 VOL: 0
;PCODE: $00000BD7 VOL: 0
;PCODE: $00000BD8 VOL: 0
;PCODE: $00000BD9 VOL: 0
;PCODE: $00000BDA VOL: 0
;PCODE: $00000BDB VOL: 0
;PCODE: $00000BDC VOL: 0
;PCODE: $00000BDD VOL: 0
;PCODE: $00000BDE VOL: 0
;PCODE: $00000BDF VOL: 0
;PCODE: $00000BE0 VOL: 0
;PCODE: $00000BE1 VOL: 0
;PCODE: $00000BE2 VOL: 0
;PCODE: $00000BE3 VOL: 0
; 0000 0337     drawStringZ(0, 30, " Медаптон ", 10, 1, 2);
;PCODE: $00000BE4 VOL: 0
;PCODE: $00000BE5 VOL: 0
;PCODE: $00000BE6 VOL: 0
;PCODE: $00000BE7 VOL: 0
;PCODE: $00000BE8 VOL: 0
;PCODE: $00000BE9 VOL: 0
;PCODE: $00000BEA VOL: 0
;PCODE: $00000BEB VOL: 0
;PCODE: $00000BEC VOL: 0
;PCODE: $00000BED VOL: 0
;PCODE: $00000BEE VOL: 0
;PCODE: $00000BEF VOL: 0
;PCODE: $00000BF0 VOL: 0
;PCODE: $00000BF1 VOL: 0
; 0000 0338 }
;PCODE: $00000BF2 VOL: 0
; 0000 0339 display(0,0,127,7);
;PCODE: $00000BF3 VOL: 0
;PCODE: $00000BF4 VOL: 0
;PCODE: $00000BF5 VOL: 0
;PCODE: $00000BF6 VOL: 0
;PCODE: $00000BF7 VOL: 0
;PCODE: $00000BF8 VOL: 0
;PCODE: $00000BF9 VOL: 0
;PCODE: $00000BFA VOL: 0
;PCODE: $00000BFB VOL: 0
; 0000 033A clearDisplay();
;PCODE: $00000BFC VOL: 0
; 0000 033B delay_ms(1000);
;PCODE: $00000BFD VOL: 0
;PCODE: $00000BFE VOL: 0
; 0000 033C if(!reg1)
;PCODE: $00000BFF VOL: 0
;PCODE: $00000C00 VOL: 0
;PCODE: $00000C01 VOL: 0
; 0000 033D {
; 0000 033E 
; 0000 033F   clearDisplay();
;PCODE: $00000C02 VOL: 0
; 0000 0340   chel = 0;
;PCODE: $00000C03 VOL: 0
;PCODE: $00000C04 VOL: 0
; 0000 0341   drawStringZ(0, 0, "Выберите", 8, 1, 2);
;PCODE: $00000C05 VOL: 0
;PCODE: $00000C06 VOL: 0
;PCODE: $00000C07 VOL: 0
;PCODE: $00000C08 VOL: 0
;PCODE: $00000C09 VOL: 0
;PCODE: $00000C0A VOL: 0
;PCODE: $00000C0B VOL: 0
;PCODE: $00000C0C VOL: 0
;PCODE: $00000C0D VOL: 0
;PCODE: $00000C0E VOL: 0
;PCODE: $00000C0F VOL: 0
;PCODE: $00000C10 VOL: 0
;PCODE: $00000C11 VOL: 0
;PCODE: $00000C12 VOL: 0
; 0000 0342   drawStringZ(0, 16, "пациента", 8, 1, 2);
;PCODE: $00000C13 VOL: 0
;PCODE: $00000C14 VOL: 0
;PCODE: $00000C15 VOL: 0
;PCODE: $00000C16 VOL: 0
;PCODE: $00000C17 VOL: 0
;PCODE: $00000C18 VOL: 0
;PCODE: $00000C19 VOL: 0
;PCODE: $00000C1A VOL: 0
;PCODE: $00000C1B VOL: 0
;PCODE: $00000C1C VOL: 0
;PCODE: $00000C1D VOL: 0
;PCODE: $00000C1E VOL: 0
;PCODE: $00000C1F VOL: 0
;PCODE: $00000C20 VOL: 0
; 0000 0343   drawStringZ(0, 40, "Пациент ", 8, 1, 2);
;PCODE: $00000C21 VOL: 0
;PCODE: $00000C22 VOL: 0
;PCODE: $00000C23 VOL: 0
;PCODE: $00000C24 VOL: 0
;PCODE: $00000C25 VOL: 0
;PCODE: $00000C26 VOL: 0
;PCODE: $00000C27 VOL: 0
;PCODE: $00000C28 VOL: 0
;PCODE: $00000C29 VOL: 0
;PCODE: $00000C2A VOL: 0
;PCODE: $00000C2B VOL: 0
;PCODE: $00000C2C VOL: 0
;PCODE: $00000C2D VOL: 0
;PCODE: $00000C2E VOL: 0
; 0000 0344   drawCharZ(96, 40, 0x30 + chel, 1, 2);
;PCODE: $00000C2F VOL: 0
;PCODE: $00000C30 VOL: 0
;PCODE: $00000C31 VOL: 0
;PCODE: $00000C32 VOL: 0
;PCODE: $00000C33 VOL: 0
;PCODE: $00000C34 VOL: 0
;PCODE: $00000C35 VOL: 0
;PCODE: $00000C36 VOL: 0
;PCODE: $00000C37 VOL: 0
;PCODE: $00000C38 VOL: 0
;PCODE: $00000C39 VOL: 0
;PCODE: $00000C3A VOL: 0
; 0000 0345   display(0,0,127,7);
;PCODE: $00000C3B VOL: 0
;PCODE: $00000C3C VOL: 0
;PCODE: $00000C3D VOL: 0
;PCODE: $00000C3E VOL: 0
;PCODE: $00000C3F VOL: 0
;PCODE: $00000C40 VOL: 0
;PCODE: $00000C41 VOL: 0
;PCODE: $00000C42 VOL: 0
;PCODE: $00000C43 VOL: 0
; 0000 0346   for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000C44 VOL: 0
;PCODE: $00000C45 VOL: 0
;PCODE: $00000C46 VOL: 0
;PCODE: $00000C47 VOL: 0
;PCODE: $00000C48 VOL: 0
;PCODE: $00000C49 VOL: 0
;PCODE: $00000C4A VOL: 0
;PCODE: $00000C4B VOL: 0
;PCODE: $00000C4C VOL: 0
;PCODE: $00000C4D VOL: 0
;PCODE: $00000C4E VOL: 0
;PCODE: $00000C4F VOL: 0
;PCODE: $00000C50 VOL: 0
;PCODE: $00000C51 VOL: 0
;PCODE: $00000C52 VOL: 0
;PCODE: $00000C53 VOL: 0
;PCODE: $00000C54 VOL: 0
;PCODE: $00000C55 VOL: 0
;PCODE: $00000C56 VOL: 0
;PCODE: $00000C57 VOL: 0
;PCODE: $00000C58 VOL: 0
; 0000 0347  flag0 = 1;
;PCODE: $00000C59 VOL: 0
;PCODE: $00000C5A VOL: 0
; 0000 0348  while (flag0 & timer++<650)
;PCODE: $00000C5B VOL: 0
;PCODE: $00000C5C VOL: 0
;PCODE: $00000C5D VOL: 0
;PCODE: $00000C5E VOL: 0
;PCODE: $00000C5F VOL: 0
;PCODE: $00000C60 VOL: 0
;PCODE: $00000C61 VOL: 0
;PCODE: $00000C62 VOL: 0
;PCODE: $00000C63 VOL: 0
;PCODE: $00000C64 VOL: 0
;PCODE: $00000C65 VOL: 0
;PCODE: $00000C66 VOL: 0
;PCODE: $00000C67 VOL: 0
;PCODE: $00000C68 VOL: 0
; 0000 0349   {     if(!dob)
;PCODE: $00000C69 VOL: 0
;PCODE: $00000C6A VOL: 0
;PCODE: $00000C6B VOL: 0
; 0000 034A     {
; 0000 034B         delay_ms(200);
;PCODE: $00000C6C VOL: 0
;PCODE: $00000C6D VOL: 0
;PCODE: $00000C6E VOL: 0
; 0000 034C         while(!dob& time++<65000);
;PCODE: $00000C6F VOL: 0
;PCODE: $00000C70 VOL: 0
;PCODE: $00000C71 VOL: 0
;PCODE: $00000C72 VOL: 0
;PCODE: $00000C73 VOL: 0
;PCODE: $00000C74 VOL: 0
;PCODE: $00000C75 VOL: 0
;PCODE: $00000C76 VOL: 0
;PCODE: $00000C77 VOL: 0
;PCODE: $00000C78 VOL: 0
;PCODE: $00000C79 VOL: 0
;PCODE: $00000C7A VOL: 0
;PCODE: $00000C7B VOL: 0
;PCODE: $00000C7C VOL: 0
;PCODE: $00000C7D VOL: 0
;PCODE: $00000C7E VOL: 0
; 0000 034D          for(o=0;o<32;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000C7F VOL: 0
;PCODE: $00000C80 VOL: 0
;PCODE: $00000C81 VOL: 0
;PCODE: $00000C82 VOL: 0
;PCODE: $00000C83 VOL: 0
;PCODE: $00000C84 VOL: 0
;PCODE: $00000C85 VOL: 0
;PCODE: $00000C86 VOL: 0
;PCODE: $00000C87 VOL: 0
;PCODE: $00000C88 VOL: 0
;PCODE: $00000C89 VOL: 0
;PCODE: $00000C8A VOL: 0
;PCODE: $00000C8B VOL: 0
;PCODE: $00000C8C VOL: 0
;PCODE: $00000C8D VOL: 0
;PCODE: $00000C8E VOL: 0
;PCODE: $00000C8F VOL: 0
;PCODE: $00000C90 VOL: 0
;PCODE: $00000C91 VOL: 0
;PCODE: $00000C92 VOL: 0
;PCODE: $00000C93 VOL: 0
; 0000 034E         chel++ ;
;PCODE: $00000C94 VOL: 0
;PCODE: $00000C95 VOL: 0
;PCODE: $00000C96 VOL: 0
; 0000 034F          timer = 0;
;PCODE: $00000C97 VOL: 0
;PCODE: $00000C98 VOL: 0
; 0000 0350     }
; 0000 0351     if(!ubr)
;PCODE: $00000C99 VOL: 0
;PCODE: $00000C9A VOL: 0
;PCODE: $00000C9B VOL: 0
;PCODE: $00000C9C VOL: 0
; 0000 0352     {
; 0000 0353         delay_ms(200);
;PCODE: $00000C9D VOL: 0
;PCODE: $00000C9E VOL: 0
;PCODE: $00000C9F VOL: 0
; 0000 0354         while(!ubr & time++<65000) ;
;PCODE: $00000CA0 VOL: 0
;PCODE: $00000CA1 VOL: 0
;PCODE: $00000CA2 VOL: 0
;PCODE: $00000CA3 VOL: 0
;PCODE: $00000CA4 VOL: 0
;PCODE: $00000CA5 VOL: 0
;PCODE: $00000CA6 VOL: 0
;PCODE: $00000CA7 VOL: 0
;PCODE: $00000CA8 VOL: 0
;PCODE: $00000CA9 VOL: 0
;PCODE: $00000CAA VOL: 0
;PCODE: $00000CAB VOL: 0
;PCODE: $00000CAC VOL: 0
;PCODE: $00000CAD VOL: 0
;PCODE: $00000CAE VOL: 0
;PCODE: $00000CAF VOL: 0
; 0000 0355         for(o=0;o<32;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000CB0 VOL: 0
;PCODE: $00000CB1 VOL: 0
;PCODE: $00000CB2 VOL: 0
;PCODE: $00000CB3 VOL: 0
;PCODE: $00000CB4 VOL: 0
;PCODE: $00000CB5 VOL: 0
;PCODE: $00000CB6 VOL: 0
;PCODE: $00000CB7 VOL: 0
;PCODE: $00000CB8 VOL: 0
;PCODE: $00000CB9 VOL: 0
;PCODE: $00000CBA VOL: 0
;PCODE: $00000CBB VOL: 0
;PCODE: $00000CBC VOL: 0
;PCODE: $00000CBD VOL: 0
;PCODE: $00000CBE VOL: 0
;PCODE: $00000CBF VOL: 0
;PCODE: $00000CC0 VOL: 0
;PCODE: $00000CC1 VOL: 0
;PCODE: $00000CC2 VOL: 0
;PCODE: $00000CC3 VOL: 0
;PCODE: $00000CC4 VOL: 0
; 0000 0356         if (time>=65000) flag0 = 0;
;PCODE: $00000CC5 VOL: 0
;PCODE: $00000CC6 VOL: 0
;PCODE: $00000CC7 VOL: 0
;PCODE: $00000CC8 VOL: 0
;PCODE: $00000CC9 VOL: 0
; 0000 0357         else if(chel != 0) chel--;
;PCODE: $00000CCA VOL: 0
;PCODE: $00000CCB VOL: 0
;PCODE: $00000CCC VOL: 0
;PCODE: $00000CCD VOL: 0
;PCODE: $00000CCE VOL: 0
;PCODE: $00000CCF VOL: 0
;PCODE: $00000CD0 VOL: 0
;PCODE: $00000CD1 VOL: 0
; 0000 0358          timer = 0;
;PCODE: $00000CD2 VOL: 0
;PCODE: $00000CD3 VOL: 0
;PCODE: $00000CD4 VOL: 0
;PCODE: $00000CD5 VOL: 0
; 0000 0359     }
; 0000 035A     time = 0;
;PCODE: $00000CD6 VOL: 0
;PCODE: $00000CD7 VOL: 0
;PCODE: $00000CD8 VOL: 0
; 0000 035B     if(chel > 9) chel = 9;
;PCODE: $00000CD9 VOL: 0
;PCODE: $00000CDA VOL: 0
;PCODE: $00000CDB VOL: 0
;PCODE: $00000CDC VOL: 0
;PCODE: $00000CDD VOL: 0
; 0000 035C     drawCharZo(96, 40, 0x30 + chel, 1, 2);
;PCODE: $00000CDE VOL: 0
;PCODE: $00000CDF VOL: 0
;PCODE: $00000CE0 VOL: 0
;PCODE: $00000CE1 VOL: 0
;PCODE: $00000CE2 VOL: 0
;PCODE: $00000CE3 VOL: 0
;PCODE: $00000CE4 VOL: 0
;PCODE: $00000CE5 VOL: 0
;PCODE: $00000CE6 VOL: 0
;PCODE: $00000CE7 VOL: 0
;PCODE: $00000CE8 VOL: 0
;PCODE: $00000CE9 VOL: 0
;PCODE: $00000CEA VOL: 0
; 0000 035D     display(96,5,127,7) ;
;PCODE: $00000CEB VOL: 0
;PCODE: $00000CEC VOL: 0
;PCODE: $00000CED VOL: 0
;PCODE: $00000CEE VOL: 0
;PCODE: $00000CEF VOL: 0
;PCODE: $00000CF0 VOL: 0
;PCODE: $00000CF1 VOL: 0
;PCODE: $00000CF2 VOL: 0
;PCODE: $00000CF3 VOL: 0
; 0000 035E   }
;PCODE: $00000CF4 VOL: 0
;PCODE: $00000CF5 VOL: 0
; 0000 035F   clearDisplay();
;PCODE: $00000CF6 VOL: 0
; 0000 0360   drawStringZ(0, 0, "Пациент ", 8, 1, 2);
;PCODE: $00000CF7 VOL: 0
;PCODE: $00000CF8 VOL: 0
;PCODE: $00000CF9 VOL: 0
;PCODE: $00000CFA VOL: 0
;PCODE: $00000CFB VOL: 0
;PCODE: $00000CFC VOL: 0
;PCODE: $00000CFD VOL: 0
;PCODE: $00000CFE VOL: 0
;PCODE: $00000CFF VOL: 0
;PCODE: $00000D00 VOL: 0
;PCODE: $00000D01 VOL: 0
;PCODE: $00000D02 VOL: 0
;PCODE: $00000D03 VOL: 0
;PCODE: $00000D04 VOL: 0
; 0000 0361   drawCharZ(96, 0, 0x30 + chel, 1, 2);
;PCODE: $00000D05 VOL: 0
;PCODE: $00000D06 VOL: 0
;PCODE: $00000D07 VOL: 0
;PCODE: $00000D08 VOL: 0
;PCODE: $00000D09 VOL: 0
;PCODE: $00000D0A VOL: 0
;PCODE: $00000D0B VOL: 0
;PCODE: $00000D0C VOL: 0
;PCODE: $00000D0D VOL: 0
;PCODE: $00000D0E VOL: 0
;PCODE: $00000D0F VOL: 0
;PCODE: $00000D10 VOL: 0
; 0000 0362   drawStringZ(0, 16, "Удержи + ", 9, 1, 2);
;PCODE: $00000D11 VOL: 0
;PCODE: $00000D12 VOL: 0
;PCODE: $00000D13 VOL: 0
;PCODE: $00000D14 VOL: 0
;PCODE: $00000D15 VOL: 0
;PCODE: $00000D16 VOL: 0
;PCODE: $00000D17 VOL: 0
;PCODE: $00000D18 VOL: 0
;PCODE: $00000D19 VOL: 0
;PCODE: $00000D1A VOL: 0
;PCODE: $00000D1B VOL: 0
;PCODE: $00000D1C VOL: 0
;PCODE: $00000D1D VOL: 0
;PCODE: $00000D1E VOL: 0
; 0000 0363   drawStringZ(0, 32, "для новой", 9, 1, 2);
;PCODE: $00000D1F VOL: 0
;PCODE: $00000D20 VOL: 0
;PCODE: $00000D21 VOL: 0
;PCODE: $00000D22 VOL: 0
;PCODE: $00000D23 VOL: 0
;PCODE: $00000D24 VOL: 0
;PCODE: $00000D25 VOL: 0
;PCODE: $00000D26 VOL: 0
;PCODE: $00000D27 VOL: 0
;PCODE: $00000D28 VOL: 0
;PCODE: $00000D29 VOL: 0
;PCODE: $00000D2A VOL: 0
;PCODE: $00000D2B VOL: 0
;PCODE: $00000D2C VOL: 0
; 0000 0364   drawStringZ(0, 48, "установки.", 10, 1, 2);
;PCODE: $00000D2D VOL: 0
;PCODE: $00000D2E VOL: 0
;PCODE: $00000D2F VOL: 0
;PCODE: $00000D30 VOL: 0
;PCODE: $00000D31 VOL: 0
;PCODE: $00000D32 VOL: 0
;PCODE: $00000D33 VOL: 0
;PCODE: $00000D34 VOL: 0
;PCODE: $00000D35 VOL: 0
;PCODE: $00000D36 VOL: 0
;PCODE: $00000D37 VOL: 0
;PCODE: $00000D38 VOL: 0
;PCODE: $00000D39 VOL: 0
;PCODE: $00000D3A VOL: 0
; 0000 0365   display(0,0,127,7);
;PCODE: $00000D3B VOL: 0
;PCODE: $00000D3C VOL: 0
;PCODE: $00000D3D VOL: 0
;PCODE: $00000D3E VOL: 0
;PCODE: $00000D3F VOL: 0
;PCODE: $00000D40 VOL: 0
;PCODE: $00000D41 VOL: 0
;PCODE: $00000D42 VOL: 0
;PCODE: $00000D43 VOL: 0
; 0000 0366   for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000D44 VOL: 0
;PCODE: $00000D45 VOL: 0
;PCODE: $00000D46 VOL: 0
;PCODE: $00000D47 VOL: 0
;PCODE: $00000D48 VOL: 0
;PCODE: $00000D49 VOL: 0
;PCODE: $00000D4A VOL: 0
;PCODE: $00000D4B VOL: 0
;PCODE: $00000D4C VOL: 0
;PCODE: $00000D4D VOL: 0
;PCODE: $00000D4E VOL: 0
;PCODE: $00000D4F VOL: 0
;PCODE: $00000D50 VOL: 0
;PCODE: $00000D51 VOL: 0
;PCODE: $00000D52 VOL: 0
;PCODE: $00000D53 VOL: 0
;PCODE: $00000D54 VOL: 0
;PCODE: $00000D55 VOL: 0
;PCODE: $00000D56 VOL: 0
;PCODE: $00000D57 VOL: 0
;PCODE: $00000D58 VOL: 0
; 0000 0367   while(!ubr);
;PCODE: $00000D59 VOL: 0
;PCODE: $00000D5A VOL: 0
;PCODE: $00000D5B VOL: 0
;PCODE: $00000D5C VOL: 0
;PCODE: $00000D5D VOL: 0
;PCODE: $00000D5E VOL: 0
; 0000 0368   delay_ms(300);
;PCODE: $00000D5F VOL: 0
;PCODE: $00000D60 VOL: 0
; 0000 0369   paus = 0;
;PCODE: $00000D61 VOL: 0
;PCODE: $00000D62 VOL: 0
; 0000 036A     while(ubr & paus++<500)
;PCODE: $00000D63 VOL: 0
;PCODE: $00000D64 VOL: 0
;PCODE: $00000D65 VOL: 0
;PCODE: $00000D66 VOL: 0
;PCODE: $00000D67 VOL: 0
;PCODE: $00000D68 VOL: 0
;PCODE: $00000D69 VOL: 0
;PCODE: $00000D6A VOL: 0
;PCODE: $00000D6B VOL: 0
;PCODE: $00000D6C VOL: 0
;PCODE: $00000D6D VOL: 0
;PCODE: $00000D6E VOL: 0
;PCODE: $00000D6F VOL: 0
;PCODE: $00000D70 VOL: 0
; 0000 036B     {
; 0000 036C         delay_ms(10);
;PCODE: $00000D71 VOL: 0
;PCODE: $00000D72 VOL: 0
;PCODE: $00000D73 VOL: 0
; 0000 036D 
; 0000 036E     }
;PCODE: $00000D74 VOL: 0
;PCODE: $00000D75 VOL: 0
; 0000 036F //=========================================
; 0000 0370 //Установка для пациента
; 0000 0371 //=========================================
; 0000 0372         if (!dob)
;PCODE: $00000D76 VOL: 0
;PCODE: $00000D77 VOL: 0
;PCODE: $00000D78 VOL: 0
; 0000 0373         {
; 0000 0374                 for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000D79 VOL: 0
;PCODE: $00000D7A VOL: 0
;PCODE: $00000D7B VOL: 0
;PCODE: $00000D7C VOL: 0
;PCODE: $00000D7D VOL: 0
;PCODE: $00000D7E VOL: 0
;PCODE: $00000D7F VOL: 0
;PCODE: $00000D80 VOL: 0
;PCODE: $00000D81 VOL: 0
;PCODE: $00000D82 VOL: 0
;PCODE: $00000D83 VOL: 0
;PCODE: $00000D84 VOL: 0
;PCODE: $00000D85 VOL: 0
;PCODE: $00000D86 VOL: 0
;PCODE: $00000D87 VOL: 0
;PCODE: $00000D88 VOL: 0
;PCODE: $00000D89 VOL: 0
;PCODE: $00000D8A VOL: 0
;PCODE: $00000D8B VOL: 0
;PCODE: $00000D8C VOL: 0
;PCODE: $00000D8D VOL: 0
; 0000 0375          paus = 0;
;PCODE: $00000D8E VOL: 0
;PCODE: $00000D8F VOL: 0
; 0000 0376           clearDisplay();
;PCODE: $00000D90 VOL: 0
; 0000 0377         drawStringZ(0, 16, " Сначала? ", 10, 1, 2);
;PCODE: $00000D91 VOL: 0
;PCODE: $00000D92 VOL: 0
;PCODE: $00000D93 VOL: 0
;PCODE: $00000D94 VOL: 0
;PCODE: $00000D95 VOL: 0
;PCODE: $00000D96 VOL: 0
;PCODE: $00000D97 VOL: 0
;PCODE: $00000D98 VOL: 0
;PCODE: $00000D99 VOL: 0
;PCODE: $00000D9A VOL: 0
;PCODE: $00000D9B VOL: 0
;PCODE: $00000D9C VOL: 0
;PCODE: $00000D9D VOL: 0
;PCODE: $00000D9E VOL: 0
; 0000 0378         drawStringZ(0, 32, "- Нет,+ Да", 10, 1, 2);
;PCODE: $00000D9F VOL: 0
;PCODE: $00000DA0 VOL: 0
;PCODE: $00000DA1 VOL: 0
;PCODE: $00000DA2 VOL: 0
;PCODE: $00000DA3 VOL: 0
;PCODE: $00000DA4 VOL: 0
;PCODE: $00000DA5 VOL: 0
;PCODE: $00000DA6 VOL: 0
;PCODE: $00000DA7 VOL: 0
;PCODE: $00000DA8 VOL: 0
;PCODE: $00000DA9 VOL: 0
;PCODE: $00000DAA VOL: 0
;PCODE: $00000DAB VOL: 0
;PCODE: $00000DAC VOL: 0
; 0000 0379         display(0,2,127,5);
;PCODE: $00000DAD VOL: 0
;PCODE: $00000DAE VOL: 0
;PCODE: $00000DAF VOL: 0
;PCODE: $00000DB0 VOL: 0
;PCODE: $00000DB1 VOL: 0
;PCODE: $00000DB2 VOL: 0
;PCODE: $00000DB3 VOL: 0
;PCODE: $00000DB4 VOL: 0
;PCODE: $00000DB5 VOL: 0
; 0000 037A         delay_ms(400);
;PCODE: $00000DB6 VOL: 0
;PCODE: $00000DB7 VOL: 0
; 0000 037B         while(!dob) #asm("wdr");
;PCODE: $00000DB8 VOL: 0
;PCODE: $00000DB9 VOL: 0
;PCODE: $00000DBA VOL: 0
;PCODE: $00000DBB VOL: 0
;PCODE: $00000DBC VOL: 0
	wdr
;PCODE: $00000DBD VOL: 0
; 0000 037C         while (ubr&&dob&&(paus<100)) {#asm("wdr") delay_ms(100); paus = paus+1;};
;PCODE: $00000DBE VOL: 0
;PCODE: $00000DBF VOL: 0
;PCODE: $00000DC0 VOL: 0
;PCODE: $00000DC1 VOL: 0
;PCODE: $00000DC2 VOL: 0
;PCODE: $00000DC3 VOL: 0
;PCODE: $00000DC4 VOL: 0
;PCODE: $00000DC5 VOL: 0
;PCODE: $00000DC6 VOL: 0
;PCODE: $00000DC7 VOL: 0
;PCODE: $00000DC8 VOL: 0
;PCODE: $00000DC9 VOL: 0
;PCODE: $00000DCA VOL: 0
;PCODE: $00000DCB VOL: 0
;PCODE: $00000DCC VOL: 0
;PCODE: $00000DCD VOL: 0
;PCODE: $00000DCE VOL: 0
	wdr
;PCODE: $00000DCF VOL: 0
;PCODE: $00000DD0 VOL: 0
;PCODE: $00000DD1 VOL: 0
;PCODE: $00000DD2 VOL: 0
;PCODE: $00000DD3 VOL: 0
;PCODE: $00000DD4 VOL: 0
;PCODE: $00000DD5 VOL: 0
;PCODE: $00000DD6 VOL: 0
;PCODE: $00000DD7 VOL: 0
; 0000 037D             if(!dob)
;PCODE: $00000DD8 VOL: 0
;PCODE: $00000DD9 VOL: 0
;PCODE: $00000DDA VOL: 0
; 0000 037E             {
; 0000 037F // Тут напишем выбор болезни и запоминание в бол2
; 0000 0380             bol[chel] = vibor();
;PCODE: $00000DDB VOL: 0
;PCODE: $00000DDC VOL: 0
;PCODE: $00000DDD VOL: 0
;PCODE: $00000DDE VOL: 0
;PCODE: $00000DDF VOL: 0
;PCODE: $00000DE0 VOL: 0
;PCODE: $00000DE1 VOL: 0
; 0000 0381             for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000DE2 VOL: 0
;PCODE: $00000DE3 VOL: 0
;PCODE: $00000DE4 VOL: 0
;PCODE: $00000DE5 VOL: 0
;PCODE: $00000DE6 VOL: 0
;PCODE: $00000DE7 VOL: 0
;PCODE: $00000DE8 VOL: 0
;PCODE: $00000DE9 VOL: 0
;PCODE: $00000DEA VOL: 0
;PCODE: $00000DEB VOL: 0
;PCODE: $00000DEC VOL: 0
;PCODE: $00000DED VOL: 0
;PCODE: $00000DEE VOL: 0
;PCODE: $00000DEF VOL: 0
;PCODE: $00000DF0 VOL: 0
;PCODE: $00000DF1 VOL: 0
;PCODE: $00000DF2 VOL: 0
;PCODE: $00000DF3 VOL: 0
;PCODE: $00000DF4 VOL: 0
;PCODE: $00000DF5 VOL: 0
;PCODE: $00000DF6 VOL: 0
; 0000 0382             delay_ms(400);
;PCODE: $00000DF7 VOL: 0
;PCODE: $00000DF8 VOL: 0
; 0000 0383             seans[chel] = 0;
;PCODE: $00000DF9 VOL: 0
;PCODE: $00000DFA VOL: 0
;PCODE: $00000DFB VOL: 0
;PCODE: $00000DFC VOL: 0
;PCODE: $00000DFD VOL: 0
; 0000 0384             };
;PCODE: $00000DFE VOL: 0
; 0000 0385 
; 0000 0386         };
;PCODE: $00000DFF VOL: 0
; 0000 0387 clearDisplay();
;PCODE: $00000E00 VOL: 0
; 0000 0388 seans0=seans[chel];
;PCODE: $00000E01 VOL: 0
;PCODE: $00000E02 VOL: 0
;PCODE: $00000E03 VOL: 0
;PCODE: $00000E04 VOL: 0
;PCODE: $00000E05 VOL: 0
; 0000 0389 bol0 = bol[chel];
;PCODE: $00000E06 VOL: 0
;PCODE: $00000E07 VOL: 0
;PCODE: $00000E08 VOL: 0
;PCODE: $00000E09 VOL: 0
;PCODE: $00000E0A VOL: 0
; 0000 038A     if (seans0 == 0)
;PCODE: $00000E0B VOL: 0
;PCODE: $00000E0C VOL: 0
;PCODE: $00000E0D VOL: 0
; 0000 038B     {
; 0000 038C     n=0;
;PCODE: $00000E0E VOL: 0
; 0000 038D         drawStringZ(0, 0, " КУРС  ", 7, 1, 3);
;PCODE: $00000E0F VOL: 0
;PCODE: $00000E10 VOL: 0
;PCODE: $00000E11 VOL: 0
;PCODE: $00000E12 VOL: 0
;PCODE: $00000E13 VOL: 0
;PCODE: $00000E14 VOL: 0
;PCODE: $00000E15 VOL: 0
;PCODE: $00000E16 VOL: 0
;PCODE: $00000E17 VOL: 0
;PCODE: $00000E18 VOL: 0
;PCODE: $00000E19 VOL: 0
;PCODE: $00000E1A VOL: 0
;PCODE: $00000E1B VOL: 0
;PCODE: $00000E1C VOL: 0
; 0000 038E         drawStringZ(0, 32, "СНАЧАЛА", 7, 1, 3);
;PCODE: $00000E1D VOL: 0
;PCODE: $00000E1E VOL: 0
;PCODE: $00000E1F VOL: 0
;PCODE: $00000E20 VOL: 0
;PCODE: $00000E21 VOL: 0
;PCODE: $00000E22 VOL: 0
;PCODE: $00000E23 VOL: 0
;PCODE: $00000E24 VOL: 0
;PCODE: $00000E25 VOL: 0
;PCODE: $00000E26 VOL: 0
;PCODE: $00000E27 VOL: 0
;PCODE: $00000E28 VOL: 0
;PCODE: $00000E29 VOL: 0
;PCODE: $00000E2A VOL: 0
; 0000 038F         display(0,0,127,7);
;PCODE: $00000E2B VOL: 0
;PCODE: $00000E2C VOL: 0
;PCODE: $00000E2D VOL: 0
;PCODE: $00000E2E VOL: 0
;PCODE: $00000E2F VOL: 0
;PCODE: $00000E30 VOL: 0
;PCODE: $00000E31 VOL: 0
;PCODE: $00000E32 VOL: 0
;PCODE: $00000E33 VOL: 0
; 0000 0390         while(n++<20)
;PCODE: $00000E34 VOL: 0
;PCODE: $00000E35 VOL: 0
;PCODE: $00000E36 VOL: 0
;PCODE: $00000E37 VOL: 0
;PCODE: $00000E38 VOL: 0
;PCODE: $00000E39 VOL: 0
; 0000 0391         {
; 0000 0392             delay_ms(30);                      // просигналить 20 раз
;PCODE: $00000E3A VOL: 0
;PCODE: $00000E3B VOL: 0
;PCODE: $00000E3C VOL: 0
; 0000 0393             for(o=0;o<96;o++) { zvuk = 1 ; delay_us(300); zvuk = 0; delay_us(300); }
;PCODE: $00000E3D VOL: 0
;PCODE: $00000E3E VOL: 0
;PCODE: $00000E3F VOL: 0
;PCODE: $00000E40 VOL: 0
;PCODE: $00000E41 VOL: 0
;PCODE: $00000E42 VOL: 0
;PCODE: $00000E43 VOL: 0
;PCODE: $00000E44 VOL: 0
;PCODE: $00000E45 VOL: 0
;PCODE: $00000E46 VOL: 0
;PCODE: $00000E47 VOL: 0
;PCODE: $00000E48 VOL: 0
;PCODE: $00000E49 VOL: 0
;PCODE: $00000E4A VOL: 0
;PCODE: $00000E4B VOL: 0
;PCODE: $00000E4C VOL: 0
;PCODE: $00000E4D VOL: 0
;PCODE: $00000E4E VOL: 0
;PCODE: $00000E4F VOL: 0
;PCODE: $00000E50 VOL: 0
;PCODE: $00000E51 VOL: 0
; 0000 0394         }
;PCODE: $00000E52 VOL: 0
;PCODE: $00000E53 VOL: 0
; 0000 0395     n=290;
;PCODE: $00000E54 VOL: 0
;PCODE: $00000E55 VOL: 0
; 0000 0396     }
; 0000 0397 clearDisplay();
;PCODE: $00000E56 VOL: 0
;PCODE: $00000E57 VOL: 0
; 0000 0398 drawStringZ(0, 0, "Заб. No ", 8, 1, 2);
;PCODE: $00000E58 VOL: 0
;PCODE: $00000E59 VOL: 0
;PCODE: $00000E5A VOL: 0
;PCODE: $00000E5B VOL: 0
;PCODE: $00000E5C VOL: 0
;PCODE: $00000E5D VOL: 0
;PCODE: $00000E5E VOL: 0
;PCODE: $00000E5F VOL: 0
;PCODE: $00000E60 VOL: 0
;PCODE: $00000E61 VOL: 0
;PCODE: $00000E62 VOL: 0
;PCODE: $00000E63 VOL: 0
;PCODE: $00000E64 VOL: 0
;PCODE: $00000E65 VOL: 0
; 0000 0399 i = bol0;
;PCODE: $00000E66 VOL: 0
;PCODE: $00000E67 VOL: 0
;PCODE: $00000E68 VOL: 0
; 0000 039A     if(i<10)
;PCODE: $00000E69 VOL: 0
;PCODE: $00000E6A VOL: 0
;PCODE: $00000E6B VOL: 0
; 0000 039B     {
; 0000 039C         drawCharZ(104,0,'0',1, 2);
;PCODE: $00000E6C VOL: 0
;PCODE: $00000E6D VOL: 0
;PCODE: $00000E6E VOL: 0
;PCODE: $00000E6F VOL: 0
;PCODE: $00000E70 VOL: 0
;PCODE: $00000E71 VOL: 0
;PCODE: $00000E72 VOL: 0
;PCODE: $00000E73 VOL: 0
;PCODE: $00000E74 VOL: 0
;PCODE: $00000E75 VOL: 0
;PCODE: $00000E76 VOL: 0
; 0000 039D         drawCharZ(116,0,0x30+i,1, 2);
;PCODE: $00000E77 VOL: 0
;PCODE: $00000E78 VOL: 0
;PCODE: $00000E79 VOL: 0
;PCODE: $00000E7A VOL: 0
;PCODE: $00000E7B VOL: 0
;PCODE: $00000E7C VOL: 0
;PCODE: $00000E7D VOL: 0
;PCODE: $00000E7E VOL: 0
;PCODE: $00000E7F VOL: 0
;PCODE: $00000E80 VOL: 0
;PCODE: $00000E81 VOL: 0
;PCODE: $00000E82 VOL: 0
; 0000 039E     }
; 0000 039F     else if(i < 100)
;PCODE: $00000E83 VOL: 0
;PCODE: $00000E84 VOL: 0
;PCODE: $00000E85 VOL: 0
;PCODE: $00000E86 VOL: 0
;PCODE: $00000E87 VOL: 0
; 0000 03A0     {
; 0000 03A1         a = i/10;
;PCODE: $00000E88 VOL: 0
;PCODE: $00000E89 VOL: 0
;PCODE: $00000E8A VOL: 0
;PCODE: $00000E8B VOL: 0
; 0000 03A2         i -= a*10;
;PCODE: $00000E8C VOL: 0
;PCODE: $00000E8D VOL: 0
;PCODE: $00000E8E VOL: 0
;PCODE: $00000E8F VOL: 0
;PCODE: $00000E90 VOL: 0
; 0000 03A3         drawCharZ(104,0,0x30+a,1, 2);
;PCODE: $00000E91 VOL: 0
;PCODE: $00000E92 VOL: 0
;PCODE: $00000E93 VOL: 0
;PCODE: $00000E94 VOL: 0
;PCODE: $00000E95 VOL: 0
;PCODE: $00000E96 VOL: 0
;PCODE: $00000E97 VOL: 0
;PCODE: $00000E98 VOL: 0
;PCODE: $00000E99 VOL: 0
;PCODE: $00000E9A VOL: 0
;PCODE: $00000E9B VOL: 0
;PCODE: $00000E9C VOL: 0
; 0000 03A4         drawCharZ(116,0,0x30+i,1, 2);
;PCODE: $00000E9D VOL: 0
;PCODE: $00000E9E VOL: 0
;PCODE: $00000E9F VOL: 0
;PCODE: $00000EA0 VOL: 0
;PCODE: $00000EA1 VOL: 0
;PCODE: $00000EA2 VOL: 0
;PCODE: $00000EA3 VOL: 0
;PCODE: $00000EA4 VOL: 0
;PCODE: $00000EA5 VOL: 0
;PCODE: $00000EA6 VOL: 0
;PCODE: $00000EA7 VOL: 0
;PCODE: $00000EA8 VOL: 0
; 0000 03A5     }
; 0000 03A6 
; 0000 03A7 rezh0 = rezhimi[bol0][seans0] ;
;PCODE: $00000EA9 VOL: 0
;PCODE: $00000EAA VOL: 0
;PCODE: $00000EAB VOL: 0
;PCODE: $00000EAC VOL: 0
;PCODE: $00000EAD VOL: 0
;PCODE: $00000EAE VOL: 0
;PCODE: $00000EAF VOL: 0
;PCODE: $00000EB0 VOL: 0
;PCODE: $00000EB1 VOL: 0
;PCODE: $00000EB2 VOL: 0
;PCODE: $00000EB3 VOL: 0
;PCODE: $00000EB4 VOL: 0
; 0000 03A8 drawCharZ(0, 16, rezh0+0x30, 1, 2);
;PCODE: $00000EB5 VOL: 0
;PCODE: $00000EB6 VOL: 0
;PCODE: $00000EB7 VOL: 0
;PCODE: $00000EB8 VOL: 0
;PCODE: $00000EB9 VOL: 0
;PCODE: $00000EBA VOL: 0
;PCODE: $00000EBB VOL: 0
;PCODE: $00000EBC VOL: 0
;PCODE: $00000EBD VOL: 0
;PCODE: $00000EBE VOL: 0
;PCODE: $00000EBF VOL: 0
;PCODE: $00000EC0 VOL: 0
; 0000 03A9 drawStringZ(12, 16, "режим  ", 7, 1, 2);
;PCODE: $00000EC1 VOL: 0
;PCODE: $00000EC2 VOL: 0
;PCODE: $00000EC3 VOL: 0
;PCODE: $00000EC4 VOL: 0
;PCODE: $00000EC5 VOL: 0
;PCODE: $00000EC6 VOL: 0
;PCODE: $00000EC7 VOL: 0
;PCODE: $00000EC8 VOL: 0
;PCODE: $00000EC9 VOL: 0
;PCODE: $00000ECA VOL: 0
;PCODE: $00000ECB VOL: 0
;PCODE: $00000ECC VOL: 0
;PCODE: $00000ECD VOL: 0
;PCODE: $00000ECE VOL: 0
; 0000 03AA drawCharZ(0, 32, chel+0x30, 1, 2);
;PCODE: $00000ECF VOL: 0
;PCODE: $00000ED0 VOL: 0
;PCODE: $00000ED1 VOL: 0
;PCODE: $00000ED2 VOL: 0
;PCODE: $00000ED3 VOL: 0
;PCODE: $00000ED4 VOL: 0
;PCODE: $00000ED5 VOL: 0
;PCODE: $00000ED6 VOL: 0
;PCODE: $00000ED7 VOL: 0
;PCODE: $00000ED8 VOL: 0
;PCODE: $00000ED9 VOL: 0
;PCODE: $00000EDA VOL: 0
; 0000 03AB drawStringZ(12, 32, "пациент", 7, 1, 2);
;PCODE: $00000EDB VOL: 0
;PCODE: $00000EDC VOL: 0
;PCODE: $00000EDD VOL: 0
;PCODE: $00000EDE VOL: 0
;PCODE: $00000EDF VOL: 0
;PCODE: $00000EE0 VOL: 0
;PCODE: $00000EE1 VOL: 0
;PCODE: $00000EE2 VOL: 0
;PCODE: $00000EE3 VOL: 0
;PCODE: $00000EE4 VOL: 0
;PCODE: $00000EE5 VOL: 0
;PCODE: $00000EE6 VOL: 0
;PCODE: $00000EE7 VOL: 0
;PCODE: $00000EE8 VOL: 0
; 0000 03AC drawCharZ(0, 48, seans0+0x30, 1, 2);
;PCODE: $00000EE9 VOL: 0
;PCODE: $00000EEA VOL: 0
;PCODE: $00000EEB VOL: 0
;PCODE: $00000EEC VOL: 0
;PCODE: $00000EED VOL: 0
;PCODE: $00000EEE VOL: 0
;PCODE: $00000EEF VOL: 0
;PCODE: $00000EF0 VOL: 0
;PCODE: $00000EF1 VOL: 0
;PCODE: $00000EF2 VOL: 0
;PCODE: $00000EF3 VOL: 0
;PCODE: $00000EF4 VOL: 0
; 0000 03AD drawStringZ(12, 48, "сеанс  ", 7, 1, 2);
;PCODE: $00000EF5 VOL: 0
;PCODE: $00000EF6 VOL: 0
;PCODE: $00000EF7 VOL: 0
;PCODE: $00000EF8 VOL: 0
;PCODE: $00000EF9 VOL: 0
;PCODE: $00000EFA VOL: 0
;PCODE: $00000EFB VOL: 0
;PCODE: $00000EFC VOL: 0
;PCODE: $00000EFD VOL: 0
;PCODE: $00000EFE VOL: 0
;PCODE: $00000EFF VOL: 0
;PCODE: $00000F00 VOL: 0
;PCODE: $00000F01 VOL: 0
;PCODE: $00000F02 VOL: 0
; 0000 03AE display(0,0,127,7);
;PCODE: $00000F03 VOL: 0
;PCODE: $00000F04 VOL: 0
;PCODE: $00000F05 VOL: 0
;PCODE: $00000F06 VOL: 0
;PCODE: $00000F07 VOL: 0
;PCODE: $00000F08 VOL: 0
;PCODE: $00000F09 VOL: 0
;PCODE: $00000F0A VOL: 0
;PCODE: $00000F0B VOL: 0
; 0000 03AF for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000F0C VOL: 0
;PCODE: $00000F0D VOL: 0
;PCODE: $00000F0E VOL: 0
;PCODE: $00000F0F VOL: 0
;PCODE: $00000F10 VOL: 0
;PCODE: $00000F11 VOL: 0
;PCODE: $00000F12 VOL: 0
;PCODE: $00000F13 VOL: 0
;PCODE: $00000F14 VOL: 0
;PCODE: $00000F15 VOL: 0
;PCODE: $00000F16 VOL: 0
;PCODE: $00000F17 VOL: 0
;PCODE: $00000F18 VOL: 0
;PCODE: $00000F19 VOL: 0
;PCODE: $00000F1A VOL: 0
;PCODE: $00000F1B VOL: 0
;PCODE: $00000F1C VOL: 0
;PCODE: $00000F1D VOL: 0
;PCODE: $00000F1E VOL: 0
;PCODE: $00000F1F VOL: 0
;PCODE: $00000F20 VOL: 0
; 0000 03B0 delay_ms(1000);
;PCODE: $00000F21 VOL: 0
;PCODE: $00000F22 VOL: 0
; 0000 03B1 paus = 0;
;PCODE: $00000F23 VOL: 0
;PCODE: $00000F24 VOL: 0
; 0000 03B2 vrem = 0;
;PCODE: $00000F25 VOL: 0
;PCODE: $00000F26 VOL: 0
; 0000 03B3 #asm("wdr")
;PCODE: $00000F27 VOL: 0
	wdr
;PCODE: $00000F28 VOL: 0
; 0000 03B4 PORTC = 0b1000000;
;PCODE: $00000F29 VOL: 0
;PCODE: $00000F2A VOL: 0
; 0000 03B5 timer = 18600000;
;PCODE: $00000F2B VOL: 0
;PCODE: $00000F2C VOL: 0
; 0000 03B6 clearDisplay();
;PCODE: $00000F2D VOL: 0
; 0000 03B7 for (n = 0; n < 42; n++) drawChar(6*n+2,0,bolezni[bol0][n]);
;PCODE: $00000F2E VOL: 0
;PCODE: $00000F2F VOL: 0
;PCODE: $00000F30 VOL: 0
;PCODE: $00000F31 VOL: 0
;PCODE: $00000F32 VOL: 0
;PCODE: $00000F33 VOL: 0
;PCODE: $00000F34 VOL: 0
;PCODE: $00000F35 VOL: 0
;PCODE: $00000F36 VOL: 0
;PCODE: $00000F37 VOL: 0
;PCODE: $00000F38 VOL: 0
;PCODE: $00000F39 VOL: 0
;PCODE: $00000F3A VOL: 0
;PCODE: $00000F3B VOL: 0
;PCODE: $00000F3C VOL: 0
;PCODE: $00000F3D VOL: 0
;PCODE: $00000F3E VOL: 0
;PCODE: $00000F3F VOL: 0
;PCODE: $00000F40 VOL: 0
;PCODE: $00000F41 VOL: 0
;PCODE: $00000F42 VOL: 0
;PCODE: $00000F43 VOL: 0
;PCODE: $00000F44 VOL: 0
;PCODE: $00000F45 VOL: 0
;PCODE: $00000F46 VOL: 0
;PCODE: $00000F47 VOL: 0
;PCODE: $00000F48 VOL: 0
;PCODE: $00000F49 VOL: 0
;PCODE: $00000F4A VOL: 0
; 0000 03B8 display(0,0,127,1);
;PCODE: $00000F4B VOL: 0
;PCODE: $00000F4C VOL: 0
;PCODE: $00000F4D VOL: 0
;PCODE: $00000F4E VOL: 0
;PCODE: $00000F4F VOL: 0
;PCODE: $00000F50 VOL: 0
;PCODE: $00000F51 VOL: 0
;PCODE: $00000F52 VOL: 0
;PCODE: $00000F53 VOL: 0
; 0000 03B9 for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000F54 VOL: 0
;PCODE: $00000F55 VOL: 0
;PCODE: $00000F56 VOL: 0
;PCODE: $00000F57 VOL: 0
;PCODE: $00000F58 VOL: 0
;PCODE: $00000F59 VOL: 0
;PCODE: $00000F5A VOL: 0
;PCODE: $00000F5B VOL: 0
;PCODE: $00000F5C VOL: 0
;PCODE: $00000F5D VOL: 0
;PCODE: $00000F5E VOL: 0
;PCODE: $00000F5F VOL: 0
;PCODE: $00000F60 VOL: 0
;PCODE: $00000F61 VOL: 0
;PCODE: $00000F62 VOL: 0
;PCODE: $00000F63 VOL: 0
;PCODE: $00000F64 VOL: 0
;PCODE: $00000F65 VOL: 0
;PCODE: $00000F66 VOL: 0
;PCODE: $00000F67 VOL: 0
;PCODE: $00000F68 VOL: 0
; 0000 03BA }
; 0000 03BB else
;PCODE: $00000F69 VOL: 0
;PCODE: $00000F6A VOL: 0
; 0000 03BC {
; 0000 03BD       clearDisplay();
;PCODE: $00000F6B VOL: 0
; 0000 03BE       drawStringZ(0, 0, "Транс+Гипн", 10, 1, 2);
;PCODE: $00000F6C VOL: 0
;PCODE: $00000F6D VOL: 0
;PCODE: $00000F6E VOL: 0
;PCODE: $00000F6F VOL: 0
;PCODE: $00000F70 VOL: 0
;PCODE: $00000F71 VOL: 0
;PCODE: $00000F72 VOL: 0
;PCODE: $00000F73 VOL: 0
;PCODE: $00000F74 VOL: 0
;PCODE: $00000F75 VOL: 0
;PCODE: $00000F76 VOL: 0
;PCODE: $00000F77 VOL: 0
;PCODE: $00000F78 VOL: 0
;PCODE: $00000F79 VOL: 0
; 0000 03BF       drawStringZ(30, 48, "+Гипноз", 7, 1, 2);
;PCODE: $00000F7A VOL: 0
;PCODE: $00000F7B VOL: 0
;PCODE: $00000F7C VOL: 0
;PCODE: $00000F7D VOL: 0
;PCODE: $00000F7E VOL: 0
;PCODE: $00000F7F VOL: 0
;PCODE: $00000F80 VOL: 0
;PCODE: $00000F81 VOL: 0
;PCODE: $00000F82 VOL: 0
;PCODE: $00000F83 VOL: 0
;PCODE: $00000F84 VOL: 0
;PCODE: $00000F85 VOL: 0
;PCODE: $00000F86 VOL: 0
;PCODE: $00000F87 VOL: 0
; 0000 03C0       display(0,0,127,7);
;PCODE: $00000F88 VOL: 0
;PCODE: $00000F89 VOL: 0
;PCODE: $00000F8A VOL: 0
;PCODE: $00000F8B VOL: 0
;PCODE: $00000F8C VOL: 0
;PCODE: $00000F8D VOL: 0
;PCODE: $00000F8E VOL: 0
;PCODE: $00000F8F VOL: 0
;PCODE: $00000F90 VOL: 0
; 0000 03C1 }
;PCODE: $00000F91 VOL: 0
; 0000 03C2 
; 0000 03C3 
; 0000 03C4 drawStringZ(30, 16, "Нажмите", 7, 1, 2);
;PCODE: $00000F92 VOL: 0
;PCODE: $00000F93 VOL: 0
;PCODE: $00000F94 VOL: 0
;PCODE: $00000F95 VOL: 0
;PCODE: $00000F96 VOL: 0
;PCODE: $00000F97 VOL: 0
;PCODE: $00000F98 VOL: 0
;PCODE: $00000F99 VOL: 0
;PCODE: $00000F9A VOL: 0
;PCODE: $00000F9B VOL: 0
;PCODE: $00000F9C VOL: 0
;PCODE: $00000F9D VOL: 0
;PCODE: $00000F9E VOL: 0
;PCODE: $00000F9F VOL: 0
; 0000 03C5 drawStringZ(30, 32, "-(пуск)", 7, 1, 2);
;PCODE: $00000FA0 VOL: 0
;PCODE: $00000FA1 VOL: 0
;PCODE: $00000FA2 VOL: 0
;PCODE: $00000FA3 VOL: 0
;PCODE: $00000FA4 VOL: 0
;PCODE: $00000FA5 VOL: 0
;PCODE: $00000FA6 VOL: 0
;PCODE: $00000FA7 VOL: 0
;PCODE: $00000FA8 VOL: 0
;PCODE: $00000FA9 VOL: 0
;PCODE: $00000FAA VOL: 0
;PCODE: $00000FAB VOL: 0
;PCODE: $00000FAC VOL: 0
;PCODE: $00000FAD VOL: 0
; 0000 03C6 for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00000FAE VOL: 0
;PCODE: $00000FAF VOL: 0
;PCODE: $00000FB0 VOL: 0
;PCODE: $00000FB1 VOL: 0
;PCODE: $00000FB2 VOL: 0
;PCODE: $00000FB3 VOL: 0
;PCODE: $00000FB4 VOL: 0
;PCODE: $00000FB5 VOL: 0
;PCODE: $00000FB6 VOL: 0
;PCODE: $00000FB7 VOL: 0
;PCODE: $00000FB8 VOL: 0
;PCODE: $00000FB9 VOL: 0
;PCODE: $00000FBA VOL: 0
;PCODE: $00000FBB VOL: 0
;PCODE: $00000FBC VOL: 0
;PCODE: $00000FBD VOL: 0
;PCODE: $00000FBE VOL: 0
;PCODE: $00000FBF VOL: 0
;PCODE: $00000FC0 VOL: 0
;PCODE: $00000FC1 VOL: 0
;PCODE: $00000FC2 VOL: 0
; 0000 03C7 display(24,2,127,7);
;PCODE: $00000FC3 VOL: 0
;PCODE: $00000FC4 VOL: 0
;PCODE: $00000FC5 VOL: 0
;PCODE: $00000FC6 VOL: 0
;PCODE: $00000FC7 VOL: 0
;PCODE: $00000FC8 VOL: 0
;PCODE: $00000FC9 VOL: 0
;PCODE: $00000FCA VOL: 0
;PCODE: $00000FCB VOL: 0
; 0000 03C8 clearDisplay();
;PCODE: $00000FCC VOL: 0
; 0000 03C9 while(ubr & dob & paus++<1000)
;PCODE: $00000FCD VOL: 0
;PCODE: $00000FCE VOL: 0
;PCODE: $00000FCF VOL: 0
;PCODE: $00000FD0 VOL: 0
;PCODE: $00000FD1 VOL: 0
;PCODE: $00000FD2 VOL: 0
;PCODE: $00000FD3 VOL: 0
;PCODE: $00000FD4 VOL: 0
;PCODE: $00000FD5 VOL: 0
;PCODE: $00000FD6 VOL: 0
;PCODE: $00000FD7 VOL: 0
;PCODE: $00000FD8 VOL: 0
;PCODE: $00000FD9 VOL: 0
;PCODE: $00000FDA VOL: 0
;PCODE: $00000FDB VOL: 0
;PCODE: $00000FDC VOL: 0
;PCODE: $00000FDD VOL: 0
; 0000 03CA {
; 0000 03CB     delay_ms(10);
;PCODE: $00000FDE VOL: 0
;PCODE: $00000FDF VOL: 0
;PCODE: $00000FE0 VOL: 0
; 0000 03CC 
; 0000 03CD }
;PCODE: $00000FE1 VOL: 0
;PCODE: $00000FE2 VOL: 0
; 0000 03CE delay_ms(50);
;PCODE: $00000FE3 VOL: 0
;PCODE: $00000FE4 VOL: 0
;PCODE: $00000FE5 VOL: 0
; 0000 03CF if(reg1)
;PCODE: $00000FE6 VOL: 0
;PCODE: $00000FE7 VOL: 0
;PCODE: $00000FE8 VOL: 0
; 0000 03D0 {
; 0000 03D1     if(!fubr)
;PCODE: $00000FE9 VOL: 0
;PCODE: $00000FEA VOL: 0
;PCODE: $00000FEB VOL: 0
; 0000 03D2     {
; 0000 03D3         reg2 = 1;
;PCODE: $00000FEC VOL: 0
;PCODE: $00000FED VOL: 0
; 0000 03D4       clearDisplay();
;PCODE: $00000FEE VOL: 0
; 0000 03D5       drawStringZ(0, 0, "SinP 014mS", 10, 1, 2);
;PCODE: $00000FEF VOL: 0
;PCODE: $00000FF0 VOL: 0
;PCODE: $00000FF1 VOL: 0
;PCODE: $00000FF2 VOL: 0
;PCODE: $00000FF3 VOL: 0
;PCODE: $00000FF4 VOL: 0
;PCODE: $00000FF5 VOL: 0
;PCODE: $00000FF6 VOL: 0
;PCODE: $00000FF7 VOL: 0
;PCODE: $00000FF8 VOL: 0
;PCODE: $00000FF9 VOL: 0
;PCODE: $00000FFA VOL: 0
;PCODE: $00000FFB VOL: 0
;PCODE: $00000FFC VOL: 0
; 0000 03D6       drawChar(0,2,'Г');
;PCODE: $00000FFD VOL: 0
;PCODE: $00000FFE VOL: 0
;PCODE: $00000FFF VOL: 0
;PCODE: $00001000 VOL: 0
;PCODE: $00001001 VOL: 0
;PCODE: $00001002 VOL: 0
; 0000 03D7       drawChar(0,3,'и');
;PCODE: $00001003 VOL: 0
;PCODE: $00001004 VOL: 0
;PCODE: $00001005 VOL: 0
;PCODE: $00001006 VOL: 0
;PCODE: $00001007 VOL: 0
;PCODE: $00001008 VOL: 0
; 0000 03D8       drawChar(0,4,'п');
;PCODE: $00001009 VOL: 0
;PCODE: $0000100A VOL: 0
;PCODE: $0000100B VOL: 0
;PCODE: $0000100C VOL: 0
;PCODE: $0000100D VOL: 0
;PCODE: $0000100E VOL: 0
; 0000 03D9       drawChar(0,5,'н');
;PCODE: $0000100F VOL: 0
;PCODE: $00001010 VOL: 0
;PCODE: $00001011 VOL: 0
;PCODE: $00001012 VOL: 0
;PCODE: $00001013 VOL: 0
;PCODE: $00001014 VOL: 0
; 0000 03DA       drawChar(0,6,'о');
;PCODE: $00001015 VOL: 0
;PCODE: $00001016 VOL: 0
;PCODE: $00001017 VOL: 0
;PCODE: $00001018 VOL: 0
;PCODE: $00001019 VOL: 0
;PCODE: $0000101A VOL: 0
; 0000 03DB       drawChar(0,7,'з');
;PCODE: $0000101B VOL: 0
;PCODE: $0000101C VOL: 0
;PCODE: $0000101D VOL: 0
;PCODE: $0000101E VOL: 0
;PCODE: $0000101F VOL: 0
;PCODE: $00001020 VOL: 0
; 0000 03DC       display(0,0,127,7);
;PCODE: $00001021 VOL: 0
;PCODE: $00001022 VOL: 0
;PCODE: $00001023 VOL: 0
;PCODE: $00001024 VOL: 0
;PCODE: $00001025 VOL: 0
;PCODE: $00001026 VOL: 0
;PCODE: $00001027 VOL: 0
;PCODE: $00001028 VOL: 0
;PCODE: $00001029 VOL: 0
; 0000 03DD       period = 64736;
;PCODE: $0000102A VOL: 0
;PCODE: $0000102B VOL: 0
; 0000 03DE       timer = 18000000;
;PCODE: $0000102C VOL: 0
;PCODE: $0000102D VOL: 0
; 0000 03DF       TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (1<<TOIE2);
;PCODE: $0000102E VOL: 0
;PCODE: $0000102F VOL: 0
; 0000 03E0     }
; 0000 03E1     else
;PCODE: $00001030 VOL: 0
;PCODE: $00001031 VOL: 0
; 0000 03E2     {
; 0000 03E3       fubr = 0;
;PCODE: $00001032 VOL: 0
;PCODE: $00001033 VOL: 0
;PCODE: $00001034 VOL: 0
; 0000 03E4       clearDisplay();
;PCODE: $00001035 VOL: 0
; 0000 03E5       timer = 3300000;
;PCODE: $00001036 VOL: 0
;PCODE: $00001037 VOL: 0
; 0000 03E6       drawStringZ(0, 0, "Установка", 9, 1, 2);
;PCODE: $00001038 VOL: 0
;PCODE: $00001039 VOL: 0
;PCODE: $0000103A VOL: 0
;PCODE: $0000103B VOL: 0
;PCODE: $0000103C VOL: 0
;PCODE: $0000103D VOL: 0
;PCODE: $0000103E VOL: 0
;PCODE: $0000103F VOL: 0
;PCODE: $00001040 VOL: 0
;PCODE: $00001041 VOL: 0
;PCODE: $00001042 VOL: 0
;PCODE: $00001043 VOL: 0
;PCODE: $00001044 VOL: 0
;PCODE: $00001045 VOL: 0
; 0000 03E7       drawStringZ(0, 16, "времени", 7, 1, 2);
;PCODE: $00001046 VOL: 0
;PCODE: $00001047 VOL: 0
;PCODE: $00001048 VOL: 0
;PCODE: $00001049 VOL: 0
;PCODE: $0000104A VOL: 0
;PCODE: $0000104B VOL: 0
;PCODE: $0000104C VOL: 0
;PCODE: $0000104D VOL: 0
;PCODE: $0000104E VOL: 0
;PCODE: $0000104F VOL: 0
;PCODE: $00001050 VOL: 0
;PCODE: $00001051 VOL: 0
;PCODE: $00001052 VOL: 0
;PCODE: $00001053 VOL: 0
; 0000 03E8       timeZ(30,40,timer/10000,3);
;PCODE: $00001054 VOL: 0
;PCODE: $00001055 VOL: 0
;PCODE: $00001056 VOL: 0
;PCODE: $00001057 VOL: 0
;PCODE: $00001058 VOL: 0
;PCODE: $00001059 VOL: 0
;PCODE: $0000105A VOL: 0
;PCODE: $0000105B VOL: 0
;PCODE: $0000105C VOL: 0
;PCODE: $0000105D VOL: 0
;PCODE: $0000105E VOL: 0
; 0000 03E9       display(0,0,127,7);
;PCODE: $0000105F VOL: 0
;PCODE: $00001060 VOL: 0
;PCODE: $00001061 VOL: 0
;PCODE: $00001062 VOL: 0
;PCODE: $00001063 VOL: 0
;PCODE: $00001064 VOL: 0
;PCODE: $00001065 VOL: 0
;PCODE: $00001066 VOL: 0
;PCODE: $00001067 VOL: 0
; 0000 03EA       for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00001068 VOL: 0
;PCODE: $00001069 VOL: 0
;PCODE: $0000106A VOL: 0
;PCODE: $0000106B VOL: 0
;PCODE: $0000106C VOL: 0
;PCODE: $0000106D VOL: 0
;PCODE: $0000106E VOL: 0
;PCODE: $0000106F VOL: 0
;PCODE: $00001070 VOL: 0
;PCODE: $00001071 VOL: 0
;PCODE: $00001072 VOL: 0
;PCODE: $00001073 VOL: 0
;PCODE: $00001074 VOL: 0
;PCODE: $00001075 VOL: 0
;PCODE: $00001076 VOL: 0
;PCODE: $00001077 VOL: 0
;PCODE: $00001078 VOL: 0
;PCODE: $00001079 VOL: 0
;PCODE: $0000107A VOL: 0
;PCODE: $0000107B VOL: 0
;PCODE: $0000107C VOL: 0
; 0000 03EB       flag0 = 1;
;PCODE: $0000107D VOL: 0
;PCODE: $0000107E VOL: 0
; 0000 03EC       paus = 150;
;PCODE: $0000107F VOL: 0
;PCODE: $00001080 VOL: 0
; 0000 03ED      while (flag0 & --paus > 0)
;PCODE: $00001081 VOL: 0
;PCODE: $00001082 VOL: 0
;PCODE: $00001083 VOL: 0
;PCODE: $00001084 VOL: 0
;PCODE: $00001085 VOL: 0
;PCODE: $00001086 VOL: 0
;PCODE: $00001087 VOL: 0
;PCODE: $00001088 VOL: 0
;PCODE: $00001089 VOL: 0
;PCODE: $0000108A VOL: 0
;PCODE: $0000108B VOL: 0
;PCODE: $0000108C VOL: 0
;PCODE: $0000108D VOL: 0
; 0000 03EE       {
; 0000 03EF         if(!dob)
;PCODE: $0000108E VOL: 0
;PCODE: $0000108F VOL: 0
;PCODE: $00001090 VOL: 0
; 0000 03F0         {
; 0000 03F1             delay_ms(200);
;PCODE: $00001091 VOL: 0
;PCODE: $00001092 VOL: 0
;PCODE: $00001093 VOL: 0
; 0000 03F2             paus = 150;
;PCODE: $00001094 VOL: 0
;PCODE: $00001095 VOL: 0
; 0000 03F3             while(!dob& time++<65000);
;PCODE: $00001096 VOL: 0
;PCODE: $00001097 VOL: 0
;PCODE: $00001098 VOL: 0
;PCODE: $00001099 VOL: 0
;PCODE: $0000109A VOL: 0
;PCODE: $0000109B VOL: 0
;PCODE: $0000109C VOL: 0
;PCODE: $0000109D VOL: 0
;PCODE: $0000109E VOL: 0
;PCODE: $0000109F VOL: 0
;PCODE: $000010A0 VOL: 0
;PCODE: $000010A1 VOL: 0
;PCODE: $000010A2 VOL: 0
;PCODE: $000010A3 VOL: 0
;PCODE: $000010A4 VOL: 0
;PCODE: $000010A5 VOL: 0
; 0000 03F4             for(o=0;o<32;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $000010A6 VOL: 0
;PCODE: $000010A7 VOL: 0
;PCODE: $000010A8 VOL: 0
;PCODE: $000010A9 VOL: 0
;PCODE: $000010AA VOL: 0
;PCODE: $000010AB VOL: 0
;PCODE: $000010AC VOL: 0
;PCODE: $000010AD VOL: 0
;PCODE: $000010AE VOL: 0
;PCODE: $000010AF VOL: 0
;PCODE: $000010B0 VOL: 0
;PCODE: $000010B1 VOL: 0
;PCODE: $000010B2 VOL: 0
;PCODE: $000010B3 VOL: 0
;PCODE: $000010B4 VOL: 0
;PCODE: $000010B5 VOL: 0
;PCODE: $000010B6 VOL: 0
;PCODE: $000010B7 VOL: 0
;PCODE: $000010B8 VOL: 0
;PCODE: $000010B9 VOL: 0
;PCODE: $000010BA VOL: 0
; 0000 03F5             timer += 3000000;
;PCODE: $000010BB VOL: 0
;PCODE: $000010BC VOL: 0
;PCODE: $000010BD VOL: 0
; 0000 03F6         }
; 0000 03F7         if(!ubr)
;PCODE: $000010BE VOL: 0
;PCODE: $000010BF VOL: 0
;PCODE: $000010C0 VOL: 0
;PCODE: $000010C1 VOL: 0
; 0000 03F8         {
; 0000 03F9             delay_ms(200);
;PCODE: $000010C2 VOL: 0
;PCODE: $000010C3 VOL: 0
;PCODE: $000010C4 VOL: 0
; 0000 03FA             paus = 150;
;PCODE: $000010C5 VOL: 0
;PCODE: $000010C6 VOL: 0
; 0000 03FB             while(!ubr & time++<65000) ;
;PCODE: $000010C7 VOL: 0
;PCODE: $000010C8 VOL: 0
;PCODE: $000010C9 VOL: 0
;PCODE: $000010CA VOL: 0
;PCODE: $000010CB VOL: 0
;PCODE: $000010CC VOL: 0
;PCODE: $000010CD VOL: 0
;PCODE: $000010CE VOL: 0
;PCODE: $000010CF VOL: 0
;PCODE: $000010D0 VOL: 0
;PCODE: $000010D1 VOL: 0
;PCODE: $000010D2 VOL: 0
;PCODE: $000010D3 VOL: 0
;PCODE: $000010D4 VOL: 0
;PCODE: $000010D5 VOL: 0
;PCODE: $000010D6 VOL: 0
; 0000 03FC             for(o=0;o<32;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $000010D7 VOL: 0
;PCODE: $000010D8 VOL: 0
;PCODE: $000010D9 VOL: 0
;PCODE: $000010DA VOL: 0
;PCODE: $000010DB VOL: 0
;PCODE: $000010DC VOL: 0
;PCODE: $000010DD VOL: 0
;PCODE: $000010DE VOL: 0
;PCODE: $000010DF VOL: 0
;PCODE: $000010E0 VOL: 0
;PCODE: $000010E1 VOL: 0
;PCODE: $000010E2 VOL: 0
;PCODE: $000010E3 VOL: 0
;PCODE: $000010E4 VOL: 0
;PCODE: $000010E5 VOL: 0
;PCODE: $000010E6 VOL: 0
;PCODE: $000010E7 VOL: 0
;PCODE: $000010E8 VOL: 0
;PCODE: $000010E9 VOL: 0
;PCODE: $000010EA VOL: 0
;PCODE: $000010EB VOL: 0
; 0000 03FD             if (time>=65000) flag0 = 0;
;PCODE: $000010EC VOL: 0
;PCODE: $000010ED VOL: 0
;PCODE: $000010EE VOL: 0
;PCODE: $000010EF VOL: 0
;PCODE: $000010F0 VOL: 0
; 0000 03FE             else timer -= 3000000;
;PCODE: $000010F1 VOL: 0
;PCODE: $000010F2 VOL: 0
;PCODE: $000010F3 VOL: 0
;PCODE: $000010F4 VOL: 0
;PCODE: $000010F5 VOL: 0
; 0000 03FF         }
;PCODE: $000010F6 VOL: 0
; 0000 0400         time = 0;
;PCODE: $000010F7 VOL: 0
;PCODE: $000010F8 VOL: 0
;PCODE: $000010F9 VOL: 0
; 0000 0401         if(timer < 3300000) timer = 3300000;
;PCODE: $000010FA VOL: 0
;PCODE: $000010FB VOL: 0
;PCODE: $000010FC VOL: 0
;PCODE: $000010FD VOL: 0
;PCODE: $000010FE VOL: 0
; 0000 0402         if(timer > 57300000) timer = 57300000;
;PCODE: $000010FF VOL: 0
;PCODE: $00001100 VOL: 0
;PCODE: $00001101 VOL: 0
;PCODE: $00001102 VOL: 0
;PCODE: $00001103 VOL: 0
;PCODE: $00001104 VOL: 0
; 0000 0403         clearDisplay();
;PCODE: $00001105 VOL: 0
;PCODE: $00001106 VOL: 0
; 0000 0404         timeZ(30,40,timer/10000,3);
;PCODE: $00001107 VOL: 0
;PCODE: $00001108 VOL: 0
;PCODE: $00001109 VOL: 0
;PCODE: $0000110A VOL: 0
;PCODE: $0000110B VOL: 0
;PCODE: $0000110C VOL: 0
;PCODE: $0000110D VOL: 0
;PCODE: $0000110E VOL: 0
;PCODE: $0000110F VOL: 0
;PCODE: $00001110 VOL: 0
;PCODE: $00001111 VOL: 0
; 0000 0405         display(0,5,127,7);
;PCODE: $00001112 VOL: 0
;PCODE: $00001113 VOL: 0
;PCODE: $00001114 VOL: 0
;PCODE: $00001115 VOL: 0
;PCODE: $00001116 VOL: 0
;PCODE: $00001117 VOL: 0
;PCODE: $00001118 VOL: 0
;PCODE: $00001119 VOL: 0
;PCODE: $0000111A VOL: 0
; 0000 0406 
; 0000 0407       }
;PCODE: $0000111B VOL: 0
;PCODE: $0000111C VOL: 0
; 0000 0408       clearDisplay();
;PCODE: $0000111D VOL: 0
; 0000 0409       drawStringZ(0, 0, "77Гц 0.5mS", 10, 1, 2);
;PCODE: $0000111E VOL: 0
;PCODE: $0000111F VOL: 0
;PCODE: $00001120 VOL: 0
;PCODE: $00001121 VOL: 0
;PCODE: $00001122 VOL: 0
;PCODE: $00001123 VOL: 0
;PCODE: $00001124 VOL: 0
;PCODE: $00001125 VOL: 0
;PCODE: $00001126 VOL: 0
;PCODE: $00001127 VOL: 0
;PCODE: $00001128 VOL: 0
;PCODE: $00001129 VOL: 0
;PCODE: $0000112A VOL: 0
;PCODE: $0000112B VOL: 0
; 0000 040A       drawChar(0,2,'Т');
;PCODE: $0000112C VOL: 0
;PCODE: $0000112D VOL: 0
;PCODE: $0000112E VOL: 0
;PCODE: $0000112F VOL: 0
;PCODE: $00001130 VOL: 0
;PCODE: $00001131 VOL: 0
; 0000 040B       drawChar(0,3,'р');
;PCODE: $00001132 VOL: 0
;PCODE: $00001133 VOL: 0
;PCODE: $00001134 VOL: 0
;PCODE: $00001135 VOL: 0
;PCODE: $00001136 VOL: 0
;PCODE: $00001137 VOL: 0
; 0000 040C       drawChar(0,4,'а');
;PCODE: $00001138 VOL: 0
;PCODE: $00001139 VOL: 0
;PCODE: $0000113A VOL: 0
;PCODE: $0000113B VOL: 0
;PCODE: $0000113C VOL: 0
;PCODE: $0000113D VOL: 0
; 0000 040D       drawChar(0,5,'н');
;PCODE: $0000113E VOL: 0
;PCODE: $0000113F VOL: 0
;PCODE: $00001140 VOL: 0
;PCODE: $00001141 VOL: 0
;PCODE: $00001142 VOL: 0
;PCODE: $00001143 VOL: 0
; 0000 040E       drawChar(0,6,'с');
;PCODE: $00001144 VOL: 0
;PCODE: $00001145 VOL: 0
;PCODE: $00001146 VOL: 0
;PCODE: $00001147 VOL: 0
;PCODE: $00001148 VOL: 0
;PCODE: $00001149 VOL: 0
; 0000 040F       drawChar(0,7,'а');
;PCODE: $0000114A VOL: 0
;PCODE: $0000114B VOL: 0
;PCODE: $0000114C VOL: 0
;PCODE: $0000114D VOL: 0
;PCODE: $0000114E VOL: 0
;PCODE: $0000114F VOL: 0
; 0000 0410       display(0,0,127,7);
;PCODE: $00001150 VOL: 0
;PCODE: $00001151 VOL: 0
;PCODE: $00001152 VOL: 0
;PCODE: $00001153 VOL: 0
;PCODE: $00001154 VOL: 0
;PCODE: $00001155 VOL: 0
;PCODE: $00001156 VOL: 0
;PCODE: $00001157 VOL: 0
;PCODE: $00001158 VOL: 0
; 0000 0411     }
;PCODE: $00001159 VOL: 0
; 0000 0412 }
; 0000 0413 for(o=0;o<32;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $0000115A VOL: 0
;PCODE: $0000115B VOL: 0
;PCODE: $0000115C VOL: 0
;PCODE: $0000115D VOL: 0
;PCODE: $0000115E VOL: 0
;PCODE: $0000115F VOL: 0
;PCODE: $00001160 VOL: 0
;PCODE: $00001161 VOL: 0
;PCODE: $00001162 VOL: 0
;PCODE: $00001163 VOL: 0
;PCODE: $00001164 VOL: 0
;PCODE: $00001165 VOL: 0
;PCODE: $00001166 VOL: 0
;PCODE: $00001167 VOL: 0
;PCODE: $00001168 VOL: 0
;PCODE: $00001169 VOL: 0
;PCODE: $0000116A VOL: 0
;PCODE: $0000116B VOL: 0
;PCODE: $0000116C VOL: 0
;PCODE: $0000116D VOL: 0
;PCODE: $0000116E VOL: 0
;PCODE: $0000116F VOL: 0
; 0000 0414 if(paus>1000) timer = 0;
;PCODE: $00001170 VOL: 0
;PCODE: $00001171 VOL: 0
;PCODE: $00001172 VOL: 0
;PCODE: $00001173 VOL: 0
;PCODE: $00001174 VOL: 0
; 0000 0415 paus=0;
;PCODE: $00001175 VOL: 0
;PCODE: $00001176 VOL: 0
;PCODE: $00001177 VOL: 0
; 0000 0416 EICRA=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00001178 VOL: 0
;PCODE: $00001179 VOL: 0
; 0000 0417 EIMSK=(0<<INT1) | (0<<INT0);
;PCODE: $0000117A VOL: 0
;PCODE: $0000117B VOL: 0
; 0000 0418 EIFR=(0<<INTF1) | (0<<INTF0);
;PCODE: $0000117C VOL: 0
;PCODE: $0000117D VOL: 0
; 0000 0419 TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (1<<TOIE1);
;PCODE: $0000117E VOL: 0
;PCODE: $0000117F VOL: 0
; 0000 041A drawStringZ(30, 16, "I=", 2, 1, 2);
;PCODE: $00001180 VOL: 0
;PCODE: $00001181 VOL: 0
;PCODE: $00001182 VOL: 0
;PCODE: $00001183 VOL: 0
;PCODE: $00001184 VOL: 0
;PCODE: $00001185 VOL: 0
;PCODE: $00001186 VOL: 0
;PCODE: $00001187 VOL: 0
;PCODE: $00001188 VOL: 0
;PCODE: $00001189 VOL: 0
;PCODE: $0000118A VOL: 0
;PCODE: $0000118B VOL: 0
;PCODE: $0000118C VOL: 0
;PCODE: $0000118D VOL: 0
; 0000 041B drawStringZ(102, 16, "mA", 2, 1, 2);
;PCODE: $0000118E VOL: 0
;PCODE: $0000118F VOL: 0
;PCODE: $00001190 VOL: 0
;PCODE: $00001191 VOL: 0
;PCODE: $00001192 VOL: 0
;PCODE: $00001193 VOL: 0
;PCODE: $00001194 VOL: 0
;PCODE: $00001195 VOL: 0
;PCODE: $00001196 VOL: 0
;PCODE: $00001197 VOL: 0
;PCODE: $00001198 VOL: 0
;PCODE: $00001199 VOL: 0
;PCODE: $0000119A VOL: 0
;PCODE: $0000119B VOL: 0
; 0000 041C 
; 0000 041D while(1)
;PCODE: $0000119C VOL: 0
; 0000 041E {
; 0000 041F 
; 0000 0420 
; 0000 0421         timeZ(30,40,timer/10000,3);
;PCODE: $0000119D VOL: 0
;PCODE: $0000119E VOL: 0
;PCODE: $0000119F VOL: 0
;PCODE: $000011A0 VOL: 0
;PCODE: $000011A1 VOL: 0
;PCODE: $000011A2 VOL: 0
;PCODE: $000011A3 VOL: 0
;PCODE: $000011A4 VOL: 0
;PCODE: $000011A5 VOL: 0
;PCODE: $000011A6 VOL: 0
;PCODE: $000011A7 VOL: 0
; 0000 0422         ZnachZ(54,16,tok,2) ;
;PCODE: $000011A8 VOL: 0
;PCODE: $000011A9 VOL: 0
;PCODE: $000011AA VOL: 0
;PCODE: $000011AB VOL: 0
;PCODE: $000011AC VOL: 0
;PCODE: $000011AD VOL: 0
;PCODE: $000011AE VOL: 0
;PCODE: $000011AF VOL: 0
;PCODE: $000011B0 VOL: 0
; 0000 0423         if (reg2)
;PCODE: $000011B1 VOL: 0
;PCODE: $000011B2 VOL: 0
;PCODE: $000011B3 VOL: 0
; 0000 0424         {
; 0000 0425             ZnachZo(60,0,(65535-period)/65,2);
;PCODE: $000011B4 VOL: 0
;PCODE: $000011B5 VOL: 0
;PCODE: $000011B6 VOL: 0
;PCODE: $000011B7 VOL: 0
;PCODE: $000011B8 VOL: 0
;PCODE: $000011B9 VOL: 0
;PCODE: $000011BA VOL: 0
;PCODE: $000011BB VOL: 0
;PCODE: $000011BC VOL: 0
;PCODE: $000011BD VOL: 0
;PCODE: $000011BE VOL: 0
;PCODE: $000011BF VOL: 0
;PCODE: $000011C0 VOL: 0
;PCODE: $000011C1 VOL: 0
; 0000 0426             timer = timer - 5000;
;PCODE: $000011C2 VOL: 0
;PCODE: $000011C3 VOL: 0
;PCODE: $000011C4 VOL: 0
; 0000 0427             display(60,0,96,1);
;PCODE: $000011C5 VOL: 0
;PCODE: $000011C6 VOL: 0
;PCODE: $000011C7 VOL: 0
;PCODE: $000011C8 VOL: 0
;PCODE: $000011C9 VOL: 0
;PCODE: $000011CA VOL: 0
;PCODE: $000011CB VOL: 0
;PCODE: $000011CC VOL: 0
;PCODE: $000011CD VOL: 0
; 0000 0428         }
; 0000 0429         if(tok0 > (tok + 20))
;PCODE: $000011CE VOL: 0
;PCODE: $000011CF VOL: 0
;PCODE: $000011D0 VOL: 0
;PCODE: $000011D1 VOL: 0
;PCODE: $000011D2 VOL: 0
;PCODE: $000011D3 VOL: 0
; 0000 042A         {
; 0000 042B             if(tok1++>2)
;PCODE: $000011D4 VOL: 0
;PCODE: $000011D5 VOL: 0
;PCODE: $000011D6 VOL: 0
;PCODE: $000011D7 VOL: 0
;PCODE: $000011D8 VOL: 0
;PCODE: $000011D9 VOL: 0
; 0000 042C             {
; 0000 042D 
; 0000 042E                 fillRect(54,16,48,16,2);
;PCODE: $000011DA VOL: 0
;PCODE: $000011DB VOL: 0
;PCODE: $000011DC VOL: 0
;PCODE: $000011DD VOL: 0
;PCODE: $000011DE VOL: 0
;PCODE: $000011DF VOL: 0
;PCODE: $000011E0 VOL: 0
;PCODE: $000011E1 VOL: 0
;PCODE: $000011E2 VOL: 0
;PCODE: $000011E3 VOL: 0
;PCODE: $000011E4 VOL: 0
; 0000 042F                 for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $000011E5 VOL: 0
;PCODE: $000011E6 VOL: 0
;PCODE: $000011E7 VOL: 0
;PCODE: $000011E8 VOL: 0
;PCODE: $000011E9 VOL: 0
;PCODE: $000011EA VOL: 0
;PCODE: $000011EB VOL: 0
;PCODE: $000011EC VOL: 0
;PCODE: $000011ED VOL: 0
;PCODE: $000011EE VOL: 0
;PCODE: $000011EF VOL: 0
;PCODE: $000011F0 VOL: 0
;PCODE: $000011F1 VOL: 0
;PCODE: $000011F2 VOL: 0
;PCODE: $000011F3 VOL: 0
;PCODE: $000011F4 VOL: 0
;PCODE: $000011F5 VOL: 0
;PCODE: $000011F6 VOL: 0
;PCODE: $000011F7 VOL: 0
;PCODE: $000011F8 VOL: 0
;PCODE: $000011F9 VOL: 0
; 0000 0430                 delay_ms(50);
;PCODE: $000011FA VOL: 0
;PCODE: $000011FB VOL: 0
;PCODE: $000011FC VOL: 0
; 0000 0431                 for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $000011FD VOL: 0
;PCODE: $000011FE VOL: 0
;PCODE: $000011FF VOL: 0
;PCODE: $00001200 VOL: 0
;PCODE: $00001201 VOL: 0
;PCODE: $00001202 VOL: 0
;PCODE: $00001203 VOL: 0
;PCODE: $00001204 VOL: 0
;PCODE: $00001205 VOL: 0
;PCODE: $00001206 VOL: 0
;PCODE: $00001207 VOL: 0
;PCODE: $00001208 VOL: 0
;PCODE: $00001209 VOL: 0
;PCODE: $0000120A VOL: 0
;PCODE: $0000120B VOL: 0
;PCODE: $0000120C VOL: 0
;PCODE: $0000120D VOL: 0
;PCODE: $0000120E VOL: 0
;PCODE: $0000120F VOL: 0
;PCODE: $00001210 VOL: 0
;PCODE: $00001211 VOL: 0
; 0000 0432 
; 0000 0433             }
; 0000 0434         }
;PCODE: $00001212 VOL: 0
; 0000 0435         else tok1 = 0;
;PCODE: $00001213 VOL: 0
;PCODE: $00001214 VOL: 0
;PCODE: $00001215 VOL: 0
;PCODE: $00001216 VOL: 0
; 0000 0436         display(24,2,127,7);
;PCODE: $00001217 VOL: 0
;PCODE: $00001218 VOL: 0
;PCODE: $00001219 VOL: 0
;PCODE: $0000121A VOL: 0
;PCODE: $0000121B VOL: 0
;PCODE: $0000121C VOL: 0
;PCODE: $0000121D VOL: 0
;PCODE: $0000121E VOL: 0
;PCODE: $0000121F VOL: 0
;PCODE: $00001220 VOL: 0
; 0000 0437         time = timer / 10000;
;PCODE: $00001221 VOL: 0
;PCODE: $00001222 VOL: 0
;PCODE: $00001223 VOL: 0
;PCODE: $00001224 VOL: 0
; 0000 0438         mod = 20;
;PCODE: $00001225 VOL: 0
;PCODE: $00001226 VOL: 0
; 0000 0439        delay_ms(450);
;PCODE: $00001227 VOL: 0
;PCODE: $00001228 VOL: 0
; 0000 043A        if(!dob)
;PCODE: $00001229 VOL: 0
;PCODE: $0000122A VOL: 0
;PCODE: $0000122B VOL: 0
; 0000 043B        {
; 0000 043C             if(!ubr)
;PCODE: $0000122C VOL: 0
;PCODE: $0000122D VOL: 0
;PCODE: $0000122E VOL: 0
; 0000 043D             {
; 0000 043E                 if (paus++ > 5)
;PCODE: $0000122F VOL: 0
;PCODE: $00001230 VOL: 0
;PCODE: $00001231 VOL: 0
;PCODE: $00001232 VOL: 0
;PCODE: $00001233 VOL: 0
;PCODE: $00001234 VOL: 0
; 0000 043F                 {
; 0000 0440                     clearDisplay();
;PCODE: $00001235 VOL: 0
; 0000 0441                     drawStringZ(0, 20, "Выключение", 10, 1, 2);
;PCODE: $00001236 VOL: 0
;PCODE: $00001237 VOL: 0
;PCODE: $00001238 VOL: 0
;PCODE: $00001239 VOL: 0
;PCODE: $0000123A VOL: 0
;PCODE: $0000123B VOL: 0
;PCODE: $0000123C VOL: 0
;PCODE: $0000123D VOL: 0
;PCODE: $0000123E VOL: 0
;PCODE: $0000123F VOL: 0
;PCODE: $00001240 VOL: 0
;PCODE: $00001241 VOL: 0
;PCODE: $00001242 VOL: 0
;PCODE: $00001243 VOL: 0
; 0000 0442                     drawStringZ(0, 40, " Пока! ", 7, 1, 3);
;PCODE: $00001244 VOL: 0
;PCODE: $00001245 VOL: 0
;PCODE: $00001246 VOL: 0
;PCODE: $00001247 VOL: 0
;PCODE: $00001248 VOL: 0
;PCODE: $00001249 VOL: 0
;PCODE: $0000124A VOL: 0
;PCODE: $0000124B VOL: 0
;PCODE: $0000124C VOL: 0
;PCODE: $0000124D VOL: 0
;PCODE: $0000124E VOL: 0
;PCODE: $0000124F VOL: 0
;PCODE: $00001250 VOL: 0
;PCODE: $00001251 VOL: 0
; 0000 0443                     display(0,2,127,7);
;PCODE: $00001252 VOL: 0
;PCODE: $00001253 VOL: 0
;PCODE: $00001254 VOL: 0
;PCODE: $00001255 VOL: 0
;PCODE: $00001256 VOL: 0
;PCODE: $00001257 VOL: 0
;PCODE: $00001258 VOL: 0
;PCODE: $00001259 VOL: 0
;PCODE: $0000125A VOL: 0
; 0000 0444                     delay_ms(1000);
;PCODE: $0000125B VOL: 0
;PCODE: $0000125C VOL: 0
; 0000 0445                     timer = 0;
;PCODE: $0000125D VOL: 0
;PCODE: $0000125E VOL: 0
; 0000 0446                 }
; 0000 0447             }
;PCODE: $0000125F VOL: 0
; 0000 0448             else
;PCODE: $00001260 VOL: 0
;PCODE: $00001261 VOL: 0
; 0000 0449             if(tok0 < 1000)
;PCODE: $00001262 VOL: 0
;PCODE: $00001263 VOL: 0
;PCODE: $00001264 VOL: 0
; 0000 044A             {
; 0000 044B                 for(o=0;o<32;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00001265 VOL: 0
;PCODE: $00001266 VOL: 0
;PCODE: $00001267 VOL: 0
;PCODE: $00001268 VOL: 0
;PCODE: $00001269 VOL: 0
;PCODE: $0000126A VOL: 0
;PCODE: $0000126B VOL: 0
;PCODE: $0000126C VOL: 0
;PCODE: $0000126D VOL: 0
;PCODE: $0000126E VOL: 0
;PCODE: $0000126F VOL: 0
;PCODE: $00001270 VOL: 0
;PCODE: $00001271 VOL: 0
;PCODE: $00001272 VOL: 0
;PCODE: $00001273 VOL: 0
;PCODE: $00001274 VOL: 0
;PCODE: $00001275 VOL: 0
;PCODE: $00001276 VOL: 0
;PCODE: $00001277 VOL: 0
;PCODE: $00001278 VOL: 0
;PCODE: $00001279 VOL: 0
; 0000 044C                 tok0+=10;
;PCODE: $0000127A VOL: 0
;PCODE: $0000127B VOL: 0
;PCODE: $0000127C VOL: 0
; 0000 044D             }
; 0000 044E        }
;PCODE: $0000127D VOL: 0
;PCODE: $0000127E VOL: 0
; 0000 044F        if(!ubr | timer < 300000)
;PCODE: $0000127F VOL: 0
;PCODE: $00001280 VOL: 0
;PCODE: $00001281 VOL: 0
;PCODE: $00001282 VOL: 0
;PCODE: $00001283 VOL: 0
;PCODE: $00001284 VOL: 0
;PCODE: $00001285 VOL: 0
;PCODE: $00001286 VOL: 0
;PCODE: $00001287 VOL: 0
; 0000 0450        {
; 0000 0451             if(!reg1) if(!fl4)
;PCODE: $00001288 VOL: 0
;PCODE: $00001289 VOL: 0
;PCODE: $0000128A VOL: 0
;PCODE: $0000128B VOL: 0
;PCODE: $0000128C VOL: 0
;PCODE: $0000128D VOL: 0
; 0000 0452             if( timer < 300000)
;PCODE: $0000128E VOL: 0
;PCODE: $0000128F VOL: 0
;PCODE: $00001290 VOL: 0
; 0000 0453             {
; 0000 0454                 fl4 = 1;
;PCODE: $00001291 VOL: 0
;PCODE: $00001292 VOL: 0
; 0000 0455                 if (timer > 0)
;PCODE: $00001293 VOL: 0
;PCODE: $00001294 VOL: 0
;PCODE: $00001295 VOL: 0
; 0000 0456                 {
; 0000 0457                     if(seans0 == 9)
;PCODE: $00001296 VOL: 0
;PCODE: $00001297 VOL: 0
;PCODE: $00001298 VOL: 0
; 0000 0458                     {
; 0000 0459                         n = 0;
;PCODE: $00001299 VOL: 0
; 0000 045A                         while(n++<20)
;PCODE: $0000129A VOL: 0
;PCODE: $0000129B VOL: 0
;PCODE: $0000129C VOL: 0
;PCODE: $0000129D VOL: 0
;PCODE: $0000129E VOL: 0
;PCODE: $0000129F VOL: 0
; 0000 045B                         {
; 0000 045C                             delay_ms(30);                      // просигналить 20 раз
;PCODE: $000012A0 VOL: 0
;PCODE: $000012A1 VOL: 0
;PCODE: $000012A2 VOL: 0
; 0000 045D                             for(o=0;o<96;o++) { zvuk = 1 ; delay_us(300); zvuk = 0; delay_us(300); }
;PCODE: $000012A3 VOL: 0
;PCODE: $000012A4 VOL: 0
;PCODE: $000012A5 VOL: 0
;PCODE: $000012A6 VOL: 0
;PCODE: $000012A7 VOL: 0
;PCODE: $000012A8 VOL: 0
;PCODE: $000012A9 VOL: 0
;PCODE: $000012AA VOL: 0
;PCODE: $000012AB VOL: 0
;PCODE: $000012AC VOL: 0
;PCODE: $000012AD VOL: 0
;PCODE: $000012AE VOL: 0
;PCODE: $000012AF VOL: 0
;PCODE: $000012B0 VOL: 0
;PCODE: $000012B1 VOL: 0
;PCODE: $000012B2 VOL: 0
;PCODE: $000012B3 VOL: 0
;PCODE: $000012B4 VOL: 0
;PCODE: $000012B5 VOL: 0
;PCODE: $000012B6 VOL: 0
;PCODE: $000012B7 VOL: 0
; 0000 045E                         }
;PCODE: $000012B8 VOL: 0
;PCODE: $000012B9 VOL: 0
; 0000 045F                         seans[chel] = 0;
;PCODE: $000012BA VOL: 0
;PCODE: $000012BB VOL: 0
;PCODE: $000012BC VOL: 0
;PCODE: $000012BD VOL: 0
;PCODE: $000012BE VOL: 0
; 0000 0460                     }
; 0000 0461                     else  seans[chel] = seans[chel] + 1;
;PCODE: $000012BF VOL: 0
;PCODE: $000012C0 VOL: 0
;PCODE: $000012C1 VOL: 0
;PCODE: $000012C2 VOL: 0
;PCODE: $000012C3 VOL: 0
;PCODE: $000012C4 VOL: 0
;PCODE: $000012C5 VOL: 0
;PCODE: $000012C6 VOL: 0
;PCODE: $000012C7 VOL: 0
;PCODE: $000012C8 VOL: 0
;PCODE: $000012C9 VOL: 0
;PCODE: $000012CA VOL: 0
;PCODE: $000012CB VOL: 0
; 0000 0462                 }
;PCODE: $000012CC VOL: 0
; 0000 0463             };
;PCODE: $000012CD VOL: 0
;PCODE: $000012CE VOL: 0
;PCODE: $000012CF VOL: 0
;PCODE: $000012D0 VOL: 0
; 0000 0464            if(tok0 > 0)
;PCODE: $000012D1 VOL: 0
;PCODE: $000012D2 VOL: 0
;PCODE: $000012D3 VOL: 0
; 0000 0465            {
; 0000 0466                 if(tok0 < 20) tok0 = 0; else tok0-=10;
;PCODE: $000012D4 VOL: 0
;PCODE: $000012D5 VOL: 0
;PCODE: $000012D6 VOL: 0
;PCODE: $000012D7 VOL: 0
;PCODE: $000012D8 VOL: 0
;PCODE: $000012D9 VOL: 0
;PCODE: $000012DA VOL: 0
;PCODE: $000012DB VOL: 0
;PCODE: $000012DC VOL: 0
;PCODE: $000012DD VOL: 0
; 0000 0467                 for(o=0;o<32;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $000012DE VOL: 0
;PCODE: $000012DF VOL: 0
;PCODE: $000012E0 VOL: 0
;PCODE: $000012E1 VOL: 0
;PCODE: $000012E2 VOL: 0
;PCODE: $000012E3 VOL: 0
;PCODE: $000012E4 VOL: 0
;PCODE: $000012E5 VOL: 0
;PCODE: $000012E6 VOL: 0
;PCODE: $000012E7 VOL: 0
;PCODE: $000012E8 VOL: 0
;PCODE: $000012E9 VOL: 0
;PCODE: $000012EA VOL: 0
;PCODE: $000012EB VOL: 0
;PCODE: $000012EC VOL: 0
;PCODE: $000012ED VOL: 0
;PCODE: $000012EE VOL: 0
;PCODE: $000012EF VOL: 0
;PCODE: $000012F0 VOL: 0
;PCODE: $000012F1 VOL: 0
;PCODE: $000012F2 VOL: 0
;PCODE: $000012F3 VOL: 0
; 0000 0468 
; 0000 0469            }
; 0000 046A        }
;PCODE: $000012F4 VOL: 0
; 0000 046B        if (!fl3)
;PCODE: $000012F5 VOL: 0
;PCODE: $000012F6 VOL: 0
;PCODE: $000012F7 VOL: 0
;PCODE: $000012F8 VOL: 0
; 0000 046C        {
; 0000 046D             if(!reg1) if (timer < 9000000)
;PCODE: $000012F9 VOL: 0
;PCODE: $000012FA VOL: 0
;PCODE: $000012FB VOL: 0
;PCODE: $000012FC VOL: 0
;PCODE: $000012FD VOL: 0
;PCODE: $000012FE VOL: 0
; 0000 046E             {
; 0000 046F                 if (rezh0 > 4) dn_reg = tok0/4; else  dn_reg = 0;
;PCODE: $000012FF VOL: 0
;PCODE: $00001300 VOL: 0
;PCODE: $00001301 VOL: 0
;PCODE: $00001302 VOL: 0
;PCODE: $00001303 VOL: 0
;PCODE: $00001304 VOL: 0
;PCODE: $00001305 VOL: 0
;PCODE: $00001306 VOL: 0
;PCODE: $00001307 VOL: 0
;PCODE: $00001308 VOL: 0
; 0000 0470                 if (rezhimi[bol0][seans0 + 10] > 4) up_reg = tok0/4;  else  up_reg = 0;
;PCODE: $00001309 VOL: 0
;PCODE: $0000130A VOL: 0
;PCODE: $0000130B VOL: 0
;PCODE: $0000130C VOL: 0
;PCODE: $0000130D VOL: 0
;PCODE: $0000130E VOL: 0
;PCODE: $0000130F VOL: 0
;PCODE: $00001310 VOL: 0
;PCODE: $00001311 VOL: 0
;PCODE: $00001312 VOL: 0
;PCODE: $00001313 VOL: 0
;PCODE: $00001314 VOL: 0
;PCODE: $00001315 VOL: 0
;PCODE: $00001316 VOL: 0
;PCODE: $00001317 VOL: 0
;PCODE: $00001318 VOL: 0
;PCODE: $00001319 VOL: 0
;PCODE: $0000131A VOL: 0
;PCODE: $0000131B VOL: 0
;PCODE: $0000131C VOL: 0
; 0000 0471                 up_reg =  tok0 + up_reg - dn_reg;
;PCODE: $0000131D VOL: 0
;PCODE: $0000131E VOL: 0
;PCODE: $0000131F VOL: 0
;PCODE: $00001320 VOL: 0
;PCODE: $00001321 VOL: 0
;PCODE: $00001322 VOL: 0
;PCODE: $00001323 VOL: 0
; 0000 0472                 tok0 = 0;
;PCODE: $00001324 VOL: 0
;PCODE: $00001325 VOL: 0
; 0000 0473                 n = 0;
;PCODE: $00001326 VOL: 0
; 0000 0474                 while(n++<3)
;PCODE: $00001327 VOL: 0
;PCODE: $00001328 VOL: 0
;PCODE: $00001329 VOL: 0
;PCODE: $0000132A VOL: 0
;PCODE: $0000132B VOL: 0
;PCODE: $0000132C VOL: 0
; 0000 0475                 {
; 0000 0476                     delay_ms(100);                      // просигналить 3 раз
;PCODE: $0000132D VOL: 0
;PCODE: $0000132E VOL: 0
;PCODE: $0000132F VOL: 0
; 0000 0477                     for(o=0;o<300;o++) { zvuk = 1 ; delay_us(300); zvuk = 0; delay_us(300); }
;PCODE: $00001330 VOL: 0
;PCODE: $00001331 VOL: 0
;PCODE: $00001332 VOL: 0
;PCODE: $00001333 VOL: 0
;PCODE: $00001334 VOL: 0
;PCODE: $00001335 VOL: 0
;PCODE: $00001336 VOL: 0
;PCODE: $00001337 VOL: 0
;PCODE: $00001338 VOL: 0
;PCODE: $00001339 VOL: 0
;PCODE: $0000133A VOL: 0
;PCODE: $0000133B VOL: 0
;PCODE: $0000133C VOL: 0
;PCODE: $0000133D VOL: 0
;PCODE: $0000133E VOL: 0
;PCODE: $0000133F VOL: 0
;PCODE: $00001340 VOL: 0
;PCODE: $00001341 VOL: 0
;PCODE: $00001342 VOL: 0
;PCODE: $00001343 VOL: 0
;PCODE: $00001344 VOL: 0
; 0000 0478                 }
;PCODE: $00001345 VOL: 0
;PCODE: $00001346 VOL: 0
; 0000 0479                 rezh0 = rezhimi[bol0][seans0 + 10];
;PCODE: $00001347 VOL: 0
;PCODE: $00001348 VOL: 0
;PCODE: $00001349 VOL: 0
;PCODE: $0000134A VOL: 0
;PCODE: $0000134B VOL: 0
;PCODE: $0000134C VOL: 0
;PCODE: $0000134D VOL: 0
;PCODE: $0000134E VOL: 0
;PCODE: $0000134F VOL: 0
;PCODE: $00001350 VOL: 0
;PCODE: $00001351 VOL: 0
; 0000 047A                 tok0 = up_reg;
;PCODE: $00001352 VOL: 0
;PCODE: $00001353 VOL: 0
; 0000 047B                 drawCharZ(0, 16, rezh0+0x30, 1, 2);
;PCODE: $00001354 VOL: 0
;PCODE: $00001355 VOL: 0
;PCODE: $00001356 VOL: 0
;PCODE: $00001357 VOL: 0
;PCODE: $00001358 VOL: 0
;PCODE: $00001359 VOL: 0
;PCODE: $0000135A VOL: 0
;PCODE: $0000135B VOL: 0
;PCODE: $0000135C VOL: 0
;PCODE: $0000135D VOL: 0
;PCODE: $0000135E VOL: 0
;PCODE: $0000135F VOL: 0
; 0000 047C                 drawCharZ(12, 16, 'р', 1, 2);
;PCODE: $00001360 VOL: 0
;PCODE: $00001361 VOL: 0
;PCODE: $00001362 VOL: 0
;PCODE: $00001363 VOL: 0
;PCODE: $00001364 VOL: 0
;PCODE: $00001365 VOL: 0
;PCODE: $00001366 VOL: 0
;PCODE: $00001367 VOL: 0
;PCODE: $00001368 VOL: 0
;PCODE: $00001369 VOL: 0
;PCODE: $0000136A VOL: 0
; 0000 047D                 display(0,2,23,3);
;PCODE: $0000136B VOL: 0
;PCODE: $0000136C VOL: 0
;PCODE: $0000136D VOL: 0
;PCODE: $0000136E VOL: 0
;PCODE: $0000136F VOL: 0
;PCODE: $00001370 VOL: 0
;PCODE: $00001371 VOL: 0
;PCODE: $00001372 VOL: 0
;PCODE: $00001373 VOL: 0
; 0000 047E                 fl3 = 1;
;PCODE: $00001374 VOL: 0
;PCODE: $00001375 VOL: 0
; 0000 047F             }
; 0000 0480        }
;PCODE: $00001376 VOL: 0
;PCODE: $00001377 VOL: 0
; 0000 0481        if (timer <= 0)
;PCODE: $00001378 VOL: 0
;PCODE: $00001379 VOL: 0
;PCODE: $0000137A VOL: 0
;PCODE: $0000137B VOL: 0
; 0000 0482        {
; 0000 0483             tok0 = 0;
;PCODE: $0000137C VOL: 0
;PCODE: $0000137D VOL: 0
; 0000 0484             OCR0A=0x00;
;PCODE: $0000137E VOL: 0
;PCODE: $0000137F VOL: 0
; 0000 0485             OCR0B=0x00;
;PCODE: $00001380 VOL: 0
;PCODE: $00001381 VOL: 0
; 0000 0486             bufer[0] = 0x80;
;PCODE: $00001382 VOL: 0
;PCODE: $00001383 VOL: 0
; 0000 0487             bufer[1] = 0xAE;
;PCODE: $00001384 VOL: 0
;PCODE: $00001385 VOL: 0
;PCODE: $00001386 VOL: 0
; 0000 0488             twi_master_trans(0x3C, bufer, 2, rx_data, 0) ;
;PCODE: $00001387 VOL: 0
;PCODE: $00001388 VOL: 0
;PCODE: $00001389 VOL: 0
;PCODE: $0000138A VOL: 0
;PCODE: $0000138B VOL: 0
;PCODE: $0000138C VOL: 0
;PCODE: $0000138D VOL: 0
;PCODE: $0000138E VOL: 0
;PCODE: $0000138F VOL: 0
;PCODE: $00001390 VOL: 0
; 0000 0489             #asm("cli")                     // дальше действия по выключению
;PCODE: $00001391 VOL: 0
	cli
;PCODE: $00001392 VOL: 0
; 0000 048A             for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $00001393 VOL: 0
;PCODE: $00001394 VOL: 0
;PCODE: $00001395 VOL: 0
;PCODE: $00001396 VOL: 0
;PCODE: $00001397 VOL: 0
;PCODE: $00001398 VOL: 0
;PCODE: $00001399 VOL: 0
;PCODE: $0000139A VOL: 0
;PCODE: $0000139B VOL: 0
;PCODE: $0000139C VOL: 0
;PCODE: $0000139D VOL: 0
;PCODE: $0000139E VOL: 0
;PCODE: $0000139F VOL: 0
;PCODE: $000013A0 VOL: 0
;PCODE: $000013A1 VOL: 0
;PCODE: $000013A2 VOL: 0
;PCODE: $000013A3 VOL: 0
;PCODE: $000013A4 VOL: 0
;PCODE: $000013A5 VOL: 0
;PCODE: $000013A6 VOL: 0
;PCODE: $000013A7 VOL: 0
; 0000 048B             delay_ms(50);
;PCODE: $000013A8 VOL: 0
;PCODE: $000013A9 VOL: 0
;PCODE: $000013AA VOL: 0
; 0000 048C             for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $000013AB VOL: 0
;PCODE: $000013AC VOL: 0
;PCODE: $000013AD VOL: 0
;PCODE: $000013AE VOL: 0
;PCODE: $000013AF VOL: 0
;PCODE: $000013B0 VOL: 0
;PCODE: $000013B1 VOL: 0
;PCODE: $000013B2 VOL: 0
;PCODE: $000013B3 VOL: 0
;PCODE: $000013B4 VOL: 0
;PCODE: $000013B5 VOL: 0
;PCODE: $000013B6 VOL: 0
;PCODE: $000013B7 VOL: 0
;PCODE: $000013B8 VOL: 0
;PCODE: $000013B9 VOL: 0
;PCODE: $000013BA VOL: 0
;PCODE: $000013BB VOL: 0
;PCODE: $000013BC VOL: 0
;PCODE: $000013BD VOL: 0
;PCODE: $000013BE VOL: 0
;PCODE: $000013BF VOL: 0
; 0000 048D             delay_ms(50);
;PCODE: $000013C0 VOL: 0
;PCODE: $000013C1 VOL: 0
;PCODE: $000013C2 VOL: 0
; 0000 048E             for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $000013C3 VOL: 0
;PCODE: $000013C4 VOL: 0
;PCODE: $000013C5 VOL: 0
;PCODE: $000013C6 VOL: 0
;PCODE: $000013C7 VOL: 0
;PCODE: $000013C8 VOL: 0
;PCODE: $000013C9 VOL: 0
;PCODE: $000013CA VOL: 0
;PCODE: $000013CB VOL: 0
;PCODE: $000013CC VOL: 0
;PCODE: $000013CD VOL: 0
;PCODE: $000013CE VOL: 0
;PCODE: $000013CF VOL: 0
;PCODE: $000013D0 VOL: 0
;PCODE: $000013D1 VOL: 0
;PCODE: $000013D2 VOL: 0
;PCODE: $000013D3 VOL: 0
;PCODE: $000013D4 VOL: 0
;PCODE: $000013D5 VOL: 0
;PCODE: $000013D6 VOL: 0
;PCODE: $000013D7 VOL: 0
; 0000 048F             delay_ms(50);
;PCODE: $000013D8 VOL: 0
;PCODE: $000013D9 VOL: 0
;PCODE: $000013DA VOL: 0
; 0000 0490             for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $000013DB VOL: 0
;PCODE: $000013DC VOL: 0
;PCODE: $000013DD VOL: 0
;PCODE: $000013DE VOL: 0
;PCODE: $000013DF VOL: 0
;PCODE: $000013E0 VOL: 0
;PCODE: $000013E1 VOL: 0
;PCODE: $000013E2 VOL: 0
;PCODE: $000013E3 VOL: 0
;PCODE: $000013E4 VOL: 0
;PCODE: $000013E5 VOL: 0
;PCODE: $000013E6 VOL: 0
;PCODE: $000013E7 VOL: 0
;PCODE: $000013E8 VOL: 0
;PCODE: $000013E9 VOL: 0
;PCODE: $000013EA VOL: 0
;PCODE: $000013EB VOL: 0
;PCODE: $000013EC VOL: 0
;PCODE: $000013ED VOL: 0
;PCODE: $000013EE VOL: 0
;PCODE: $000013EF VOL: 0
; 0000 0491             delay_ms(50);
;PCODE: $000013F0 VOL: 0
;PCODE: $000013F1 VOL: 0
;PCODE: $000013F2 VOL: 0
; 0000 0492             for(o=0;o<128;o++) { zvuk = 1 ; delay_us(200); zvuk = 0; delay_us(200); }
;PCODE: $000013F3 VOL: 0
;PCODE: $000013F4 VOL: 0
;PCODE: $000013F5 VOL: 0
;PCODE: $000013F6 VOL: 0
;PCODE: $000013F7 VOL: 0
;PCODE: $000013F8 VOL: 0
;PCODE: $000013F9 VOL: 0
;PCODE: $000013FA VOL: 0
;PCODE: $000013FB VOL: 0
;PCODE: $000013FC VOL: 0
;PCODE: $000013FD VOL: 0
;PCODE: $000013FE VOL: 0
;PCODE: $000013FF VOL: 0
;PCODE: $00001400 VOL: 0
;PCODE: $00001401 VOL: 0
;PCODE: $00001402 VOL: 0
;PCODE: $00001403 VOL: 0
;PCODE: $00001404 VOL: 0
;PCODE: $00001405 VOL: 0
;PCODE: $00001406 VOL: 0
;PCODE: $00001407 VOL: 0
; 0000 0493             OCR0A=0x00;
;PCODE: $00001408 VOL: 0
;PCODE: $00001409 VOL: 0
; 0000 0494             OCR0B=0x00;
;PCODE: $0000140A VOL: 0
;PCODE: $0000140B VOL: 0
; 0000 0495             TWCR = 0;
;PCODE: $0000140C VOL: 0
;PCODE: $0000140D VOL: 0
; 0000 0496             DDRC=DDRB=DDRD=0;
;PCODE: $0000140E VOL: 0
;PCODE: $0000140F VOL: 0
;PCODE: $00001410 VOL: 0
;PCODE: $00001411 VOL: 0
; 0000 0497             PORTC=0;
;PCODE: $00001412 VOL: 0
;PCODE: $00001413 VOL: 0
; 0000 0498             PORTD=0;
;PCODE: $00001414 VOL: 0
;PCODE: $00001415 VOL: 0
; 0000 0499             PORTD.6=1;
;PCODE: $00001416 VOL: 0
;PCODE: $00001417 VOL: 0
; 0000 049A             PORTB=0;
;PCODE: $00001418 VOL: 0
;PCODE: $00001419 VOL: 0
; 0000 049B             ASSR=(0<<EXCLK) | (0<<AS2);
;PCODE: $0000141A VOL: 0
;PCODE: $0000141B VOL: 0
; 0000 049C         TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
;PCODE: $0000141C VOL: 0
;PCODE: $0000141D VOL: 0
; 0000 049D         TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000141E VOL: 0
;PCODE: $0000141F VOL: 0
; 0000 049E         MCUSR &= ~(1<<WDRF);
;PCODE: $00001420 VOL: 0
;PCODE: $00001421 VOL: 0
;PCODE: $00001422 VOL: 0
; 0000 049F     /* Write logical one to WDCE and WDE */
; 0000 04A0     /* Keep old prescaler setting to prevent unintentional
; 0000 04A1     time-out */
; 0000 04A2         WDTCSR |= (1<<WDCE) | (1<<WDE);
;PCODE: $00001423 VOL: 0
;PCODE: $00001424 VOL: 0
;PCODE: $00001425 VOL: 0
; 0000 04A3     /* Turn off WDT */
; 0000 04A4         WDTCSR = 0x00;
;PCODE: $00001426 VOL: 0
;PCODE: $00001427 VOL: 0
; 0000 04A5             ADMUX=00;
;PCODE: $00001428 VOL: 0
;PCODE: $00001429 VOL: 0
; 0000 04A6             ADCSRA=0x00;
;PCODE: $0000142A VOL: 0
;PCODE: $0000142B VOL: 0
; 0000 04A7             MCUCR = 0x10;
;PCODE: $0000142C VOL: 0
;PCODE: $0000142D VOL: 0
; 0000 04A8 
; 0000 04A9             sleep_enable(); //разрешение спящего режима
;PCODE: $0000142E VOL: 0
; 0000 04AA             powerdown();
;PCODE: $0000142F VOL: 0
; 0000 04AB             //       Окончание
; 0000 04AC        }
; 0000 04AD 
; 0000 04AE }
;PCODE: $00001430 VOL: 0
;PCODE: $00001431 VOL: 0
;PCODE: $00001432 VOL: 0
; 0000 04AF 
; 0000 04B0 }
;PCODE: $00001433 VOL: 0
;PCODE: $00001434 VOL: 0
;PCODE: $00001435 VOL: 0
